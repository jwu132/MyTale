{"remainingRequest":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/babel-loader/lib/index.js!/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/eslint-loader/index.js??ref--13-0!/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/js/extwee_utils/HTMLParser.js","dependencies":[{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/js/extwee_utils/HTMLParser.js","mtime":1604692362842},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlciIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0Iik7Cgp2YXIgX2NsYXNzQ2FsbENoZWNrID0gcmVxdWlyZSgiL1VzZXJzL2p1c3Rpbnd1L0Rlc2t0b3AvR2l0bGFiX015VGFsZS9teXRhbGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siKTsKCnZhciBfY3JlYXRlQ2xhc3MgPSByZXF1aXJlKCIvVXNlcnMvanVzdGlud3UvRGVza3RvcC9HaXRsYWJfTXlUYWxlL215dGFsZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpOwoKLyoqCiAqIEBleHRlcm5hbCBIVE1MCiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0hUTUx8SFRNTH0KICovCnZhciBfcmVxdWlyZSA9IHJlcXVpcmUoJ25vZGUtaHRtbC1wYXJzZXInKSwKICAgIHBhcnNlID0gX3JlcXVpcmUucGFyc2U7Cgp2YXIgSHRtbFBhcnNlciA9IHBhcnNlOwoKdmFyIFN0b3J5ID0gcmVxdWlyZSgnLi9TdG9yeS5qcycpOwoKdmFyIFBhc3NhZ2UgPSByZXF1aXJlKCcuL1Bhc3NhZ2UuanMnKTsKLyoqCiAqIEBjbGFzcyBIVE1MUGFyc2VyCiAqIEBtb2R1bGUgSFRNTFBhcnNlcgogKi8KCgp2YXIgSFRNTFBhcnNlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgInVzZSBzdHJpY3QiOwoKICAvKioKICAgKiBAZnVuY3Rpb24gSFRNTFBhcnNlcgogICAqIEBjbGFzcwogICAqIEBwYXJhbSB7SFRNTH0gY29udGVudCAtIEhUTUwgdG8gcGFyc2UKICAgKi8KICBmdW5jdGlvbiBIVE1MUGFyc2VyKGNvbnRlbnQpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBIVE1MUGFyc2VyKTsKCiAgICB0aGlzLnN0b3J5ID0gbnVsbDsKICAgIHRoaXMucGFyc2UoY29udGVudCk7CiAgfQogIC8qKgogICAqIFBhcnNlIEhUTUwgdGV4dCBpbnRvIGEgSlMgRE9NLWxpa2Ugb2JqZWN0CiAgICoKICAgKiBAcGFyYW0ge3N0cmluZ30gY29udGVudCAtIENvbnRlbnQgdG8gcGFyc2UKICAgKiBAcmV0dXJucyB7dm9pZH0KICAgKi8KCgogIF9jcmVhdGVDbGFzcyhIVE1MUGFyc2VyLCBbewogICAga2V5OiAicGFyc2UiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHBhcnNlKGNvbnRlbnQpIHsKICAgICAgLy8gU2VuZCB0byBub2RlLWh0bWwtcGFyc2VyCiAgICAgIC8vIEVuYWJsZSBnZXR0aW5nIHRoZSBjb250ZW50IG9mICdzY3JpcHQnLCAnc3R5bGUnLCBhbmQgJ3ByZScgZWxlbWVudHMKICAgICAgLy8gR2V0IGJhY2sgYSBET00KICAgICAgdmFyIGRvbSA9IG5ldyBIdG1sUGFyc2VyKGNvbnRlbnQsIHsKICAgICAgICBsb3dlckNhc2VUYWdOYW1lOiBmYWxzZSwKICAgICAgICBzY3JpcHQ6IHRydWUsCiAgICAgICAgc3R5bGU6IHRydWUsCiAgICAgICAgcHJlOiB0cnVlCiAgICAgIH0pOyAvLyBQdWxsIG91dCB0aGUgdHctc3RvcnlkYXRhIGVsZW1lbnQKCiAgICAgIHZhciBzdG9yeURhdGEgPSBkb20ucXVlcnlTZWxlY3RvcigndHctc3RvcnlkYXRhJyk7CgogICAgICBpZiAoc3RvcnlEYXRhICE9IG51bGwpIHsKICAgICAgICB0aGlzLnN0b3J5ID0gbmV3IFN0b3J5KCk7CiAgICAgICAgdGhpcy5zdG9yeS5uYW1lID0gc3RvcnlEYXRhLmF0dHJpYnV0ZXMubmFtZTsKICAgICAgICB0aGlzLnN0b3J5LmNyZWF0b3IgPSBzdG9yeURhdGEuYXR0cmlidXRlcy5jcmVhdG9yOwogICAgICAgIHRoaXMuc3RvcnkuY3JlYXRvclZlcnNpb24gPSBzdG9yeURhdGEuYXR0cmlidXRlc1snY3JlYXRvci12ZXJzaW9uJ107CiAgICAgICAgdGhpcy5zdG9yeS5tZXRhZGF0YSA9IHt9OwogICAgICAgIHRoaXMuc3RvcnkubWV0YWRhdGEuaWZpZCA9IHN0b3J5RGF0YS5hdHRyaWJ1dGVzLmlmaWQ7CiAgICAgICAgdGhpcy5zdG9yeS5tZXRhZGF0YS5mb3JtYXQgPSBzdG9yeURhdGEuYXR0cmlidXRlcy5mb3JtYXQ7CiAgICAgICAgdGhpcy5zdG9yeS5tZXRhZGF0YS5mb3JtYXRWZXJzaW9uID0gc3RvcnlEYXRhLmF0dHJpYnV0ZXNbJ2Zvcm1hdC12ZXJzaW9uJ107CiAgICAgICAgdGhpcy5zdG9yeS5tZXRhZGF0YS56b29tID0gc3RvcnlEYXRhLmF0dHJpYnV0ZXMuem9vbTsKICAgICAgICB0aGlzLnN0b3J5Lm1ldGFkYXRhLnN0YXJ0ID0gc3RvcnlEYXRhLmF0dHJpYnV0ZXMuc3RhcnRub2RlOwogICAgICB9IGVsc2UgewogICAgICAgIHRocm93IG5ldyBFcnJvcignRXJyb3I6IE5vdCBhIFR3aW5lIDItc3R5bGUgZmlsZSEnKTsKICAgICAgfSAvLyBQdWxsIG91dCB0aGUgdHctcGFzc2FnZWRhdGEgZWxlbWVudHMKCgogICAgICB2YXIgc3RvcnlQYXNzYWdlcyA9IGRvbS5xdWVyeVNlbGVjdG9yQWxsKCd0dy1wYXNzYWdlZGF0YScpOyAvLyBDcmVhdGUgYW4gZW1wdHkgYXJyYXkKCiAgICAgIHRoaXMuc3RvcnkucGFzc2FnZXMgPSBbXTsgLy8gU2V0IGRlZmF1bHQgcGlkCgogICAgICB2YXIgcGlkID0gMTsgLy8gQWRkIFN0b3J5VGl0bGUKCiAgICAgIHRoaXMuc3RvcnkucGFzc2FnZXMucHVzaChuZXcgUGFzc2FnZSgnU3RvcnlUaXRsZScsIFtdLCB7fSwgdGhpcy5zdG9yeS5uYW1lLCBwaWQpKTsgLy8gSW5jcmVhc2UgUElEIGJ5IG9uZSBiZWZvcmUgcGFyc2luZyBhbnkgb3RoZXIgcGFzc2FnZXMKCiAgICAgIHBpZCsrOyAvLyBNb3ZlIHRocm91Z2ggdGhlIHBhc3NhZ2VzCgogICAgICBmb3IgKHZhciBwYXNzYWdlIGluIHN0b3J5UGFzc2FnZXMpIHsKICAgICAgICAvLyBHZXQgdGhlIHBhc3NhZ2UgYXR0cmlidXRlcwogICAgICAgIHZhciBhdHRyID0gc3RvcnlQYXNzYWdlc1twYXNzYWdlXS5hdHRyaWJ1dGVzOyAvLyBHZXQgdGhlIHBhc3NhZ2UgdGV4dAoKICAgICAgICB2YXIgdGV4dCA9IHN0b3J5UGFzc2FnZXNbcGFzc2FnZV0ucmF3VGV4dDsgLy8gU2F2ZSBwb3NpdGlvbgoKICAgICAgICB2YXIgcG9zaXRpb24gPSBhdHRyLnBvc2l0aW9uOyAvLyBTYXZlIHNpemUKCiAgICAgICAgdmFyIHNpemUgPSBhdHRyLnNpemU7IC8vIEVzY2FwZSB0aGUgbmFtZQoKICAgICAgICB2YXIgbmFtZSA9IHRoaXMuX2VzY2FwZU1ldGFjaGFyYWN0ZXJzKGF0dHIubmFtZSk7IC8vIENyZWF0ZSBlbXB0eSB0YWdzCgoKICAgICAgICB2YXIgdGFncyA9ICcnOyAvLyBFc2NhcGUgYW55IHRhZ3MKICAgICAgICAvLyAoQXR0cmlidXRlcyBjYW4sIHRoZW1zZWx2ZXMsIGJlIGVtdHB5IHN0cmluZ3MuKQoKICAgICAgICBpZiAoYXR0ci50YWdzLmxlbmd0aCA+IDAgJiYgYXR0ci50YWdzICE9PSAnIiInKSB7CiAgICAgICAgICB0YWdzID0gdGhpcy5fZXNjYXBlTWV0YWNoYXJhY3RlcnMoYXR0ci50YWdzKTsKICAgICAgICB9IC8vIFNwbGl0IGJ5IHNwYWNlcwoKCiAgICAgICAgdGFncyA9IHRhZ3Muc3BsaXQoJyAnKTsgLy8gUmVtb3ZlIGFueSBlbXB0eSBzdHJpbmdzCgogICAgICAgIHRhZ3MgPSB0YWdzLmZpbHRlcihmdW5jdGlvbiAodGFnKSB7CiAgICAgICAgICByZXR1cm4gdGFnICE9PSAnJzsKICAgICAgICB9KTsgLy8gQWRkIGEgbmV3IFBhc3NhZ2UgaW50byBhbiBhcnJheQoKICAgICAgICB0aGlzLnN0b3J5LnBhc3NhZ2VzLnB1c2gobmV3IFBhc3NhZ2UobmFtZSwgdGFncywgewogICAgICAgICAgcG9zaXRpb246IHBvc2l0aW9uLAogICAgICAgICAgc2l6ZTogc2l6ZQogICAgICAgIH0sIHRleHQsIHBpZCkpOwogICAgICAgIHBpZCsrOwogICAgICB9IC8vIExvb2sgZm9yIHRoZSBzdHlsZSBlbGVtZW50CgoKICAgICAgdmFyIHN0eWxlRWxlbWVudCA9IGRvbS5xdWVyeVNlbGVjdG9yKCcjdHdpbmUtdXNlci1zdHlsZXNoZWV0Jyk7IC8vIENoZWNrIGlmIHRoZXJlIGlzIGFueSBjb250ZW50LgogICAgICAvLyBJZiBub3QsIHdlIHdvbid0IGFkZCBlbXB0eSBwYXNzYWdlcwoKICAgICAgaWYgKHN0eWxlRWxlbWVudC5yYXdUZXh0Lmxlbmd0aCA+IDApIHsKICAgICAgICAvLyBBZGQgVXNlclN0eWxlc2hlZXQKICAgICAgICB0aGlzLnN0b3J5LnBhc3NhZ2VzLnB1c2gobmV3IFBhc3NhZ2UoJ1VzZXJTdHlsZXNoZWV0JywgWydzdHlsZXNoZWV0J10sIHt9LCBzdHlsZUVsZW1lbnQucmF3VGV4dCkpOwogICAgICB9IC8vIExvb2sgZm9yIHRoZSBzY3JpcHQgZWxlbWVudAoKCiAgICAgIHZhciBzY3JpcHRFbGVtZW50ID0gZG9tLnF1ZXJ5U2VsZWN0b3IoJyN0d2luZS11c2VyLXNjcmlwdCcpOyAvLyBDaGVjayBpZiB0aGVyZSBpcyBhbnkgY29udGVudC4KICAgICAgLy8gSWYgbm90LCB3ZSB3b24ndCBhZGQgZW1wdHkgcGFzc2FnZXMKCiAgICAgIGlmIChzY3JpcHRFbGVtZW50LnJhd1RleHQubGVuZ3RoID4gMCkgewogICAgICAgIC8vIEFkZCBVc2VyU2NyaXB0CiAgICAgICAgdGhpcy5zdG9yeS5wYXNzYWdlcy5wdXNoKG5ldyBQYXNzYWdlKCdVc2VyU2NyaXB0JywgWydzY3JpcHQnXSwge30sIHNjcmlwdEVsZW1lbnQucmF3VGV4dCkpOwogICAgICB9IC8vIE5vdyB0aGF0IGFsbCBwYXNzYWdlcyBoYXZlIGJlZW4gaGFuZGxlZCwKICAgICAgLy8gIGNoYW5nZSB0aGUgc3RhcnQgbmFtZQoKCiAgICAgIHRoaXMuc3RvcnkubWV0YWRhdGEuc3RhcnQgPSB0aGlzLnN0b3J5LmdldFN0YXJ0aW5nUGFzc2FnZSgpOyAvLyBBZGQgU3RvcnlEYXRhCgogICAgICB0aGlzLnN0b3J5LnBhc3NhZ2VzLnB1c2gobmV3IFBhc3NhZ2UoJ1N0b3J5RGF0YScsIFtdLCB7fSwgSlNPTi5zdHJpbmdpZnkodGhpcy5zdG9yeS5tZXRhZGF0YSwgbnVsbCwgNCkpKTsKICAgIH0KICAgIC8qKgogICAgICogVHJ5IHRvIGVzY2FwZSBtZXRhLWNoYXJhY3RlcnMKICAgICAqCiAgICAgKiBAcGFyYW0ge3N0cmluZ30gcmVzdWx0IC0gVGV4dCB0byBwYXJzZQogICAgICogQHJldHVybnMge3N0cmluZ30gRXNjYXBlZCBjaGFyYWN0ZXJzCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiX2VzY2FwZU1ldGFjaGFyYWN0ZXJzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfZXNjYXBlTWV0YWNoYXJhY3RlcnMocmVzdWx0KSB7CiAgICAgIC8vIFJlcGxhY2UgYW55IHNpbmdsZSBiYWNrc2xhc2ggd2l0aCB0d28gb2YgdGhlbQogICAgICByZXN1bHQgPSByZXN1bHQucmVwbGFjZSgvXFwvZywgJ1xcJyk7IC8vIERvdWJsZS1lc2NhcGUgZXNjYXBlZCB7CgogICAgICByZXN1bHQgPSByZXN1bHQucmVwbGFjZSgvXFxcey9nLCAnXFxcXHsnKTsgLy8gRG91YmxlLWVzY2FwZSBlc2NhcGVkIH0KCiAgICAgIHJlc3VsdCA9IHJlc3VsdC5yZXBsYWNlKC9cXFx9L2csICdcXFxcfScpOyAvLyBEb3VibGUtZXNjYXBlIGVzY2FwZWQgWwoKICAgICAgcmVzdWx0ID0gcmVzdWx0LnJlcGxhY2UoL1xcXFsvZywgJ1xcXFxbJyk7IC8vIERvdWJsZS1lc2NhcGUgZXNjYXBlZCBdCgogICAgICByZXN1bHQgPSByZXN1bHQucmVwbGFjZSgvXFxcXS9nLCAnXFxcXF0nKTsKICAgICAgcmV0dXJuIHJlc3VsdDsKICAgIH0KICB9XSk7CgogIHJldHVybiBIVE1MUGFyc2VyOwp9KCk7Cgptb2R1bGUuZXhwb3J0cyA9IEhUTUxQYXJzZXI7"},{"version":3,"sources":["/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/js/extwee_utils/HTMLParser.js"],"names":["require","parse","HtmlParser","Story","Passage","HTMLParser","content","story","dom","lowerCaseTagName","script","style","pre","storyData","querySelector","name","attributes","creator","creatorVersion","metadata","ifid","format","formatVersion","zoom","start","startnode","Error","storyPassages","querySelectorAll","passages","pid","push","passage","attr","text","rawText","position","size","_escapeMetacharacters","tags","length","split","filter","tag","styleElement","scriptElement","getStartingPassage","JSON","stringify","result","replace","module","exports"],"mappings":"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","sourcesContent":["/**\n * @external HTML\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTML|HTML}\n */\n\nconst { parse } = require('node-html-parser');\nconst HtmlParser = parse;\nconst Story = require('./Story.js');\nconst Passage = require('./Passage.js');\n/**\n * @class HTMLParser\n * @module HTMLParser\n */\nclass HTMLParser {\n  /**\n   * @function HTMLParser\n   * @class\n   * @param {HTML} content - HTML to parse\n   */\n  constructor (content) {\n    this.story = null;\n    this.parse(content);\n  }\n\n  /**\n   * Parse HTML text into a JS DOM-like object\n   *\n   * @param {string} content - Content to parse\n   * @returns {void}\n   */\n  parse (content) {\n    // Send to node-html-parser\n    // Enable getting the content of 'script', 'style', and 'pre' elements\n    // Get back a DOM\n    const dom = new HtmlParser(\n      content,\n      {\n        lowerCaseTagName: false,\n        script: true,\n        style: true,\n        pre: true\n      });\n\n    // Pull out the tw-storydata element\n    const storyData = dom.querySelector('tw-storydata');\n\n    if (storyData != null) {\n      this.story = new Story();\n      this.story.name = storyData.attributes.name;\n      this.story.creator = storyData.attributes.creator;\n      this.story.creatorVersion = storyData.attributes['creator-version'];\n\n      this.story.metadata = {};\n      this.story.metadata.ifid = storyData.attributes.ifid;\n      this.story.metadata.format = storyData.attributes.format;\n      this.story.metadata.formatVersion = storyData.attributes['format-version'];\n      this.story.metadata.zoom = storyData.attributes.zoom;\n      this.story.metadata.start = storyData.attributes.startnode;\n    } else {\n      throw new Error('Error: Not a Twine 2-style file!');\n    }\n\n    // Pull out the tw-passagedata elements\n    const storyPassages = dom.querySelectorAll('tw-passagedata');\n\n    // Create an empty array\n    this.story.passages = [];\n\n    // Set default pid\n    let pid = 1;\n\n    // Add StoryTitle\n    this.story.passages.push(\n      new Passage(\n        'StoryTitle',\n        [],\n        {},\n        this.story.name,\n        pid\n      )\n    );\n\n    // Increase PID by one before parsing any other passages\n    pid++;\n\n    // Move through the passages\n    for (const passage in storyPassages) {\n      // Get the passage attributes\n      const attr = storyPassages[passage].attributes;\n      // Get the passage text\n      const text = storyPassages[passage].rawText;\n\n      // Save position\n      const position = attr.position;\n\n      // Save size\n      const size = attr.size;\n\n      // Escape the name\n      const name = this._escapeMetacharacters(attr.name);\n\n      // Create empty tags\n      let tags = '';\n\n      // Escape any tags\n      // (Attributes can, themselves, be emtpy strings.)\n      if (attr.tags.length > 0 && attr.tags !== '\"\"') {\n        tags = this._escapeMetacharacters(attr.tags);\n      }\n\n      // Split by spaces\n      tags = tags.split(' ');\n\n      // Remove any empty strings\n      tags = tags.filter(tag => tag !== '');\n\n      // Add a new Passage into an array\n      this.story.passages.push(\n        new Passage(\n          name,\n          tags,\n          {\n            position: position,\n            size: size\n\n          },\n          text,\n          pid\n        )\n      );\n\n      pid++;\n    }\n\n    // Look for the style element\n    const styleElement = dom.querySelector('#twine-user-stylesheet');\n\n    // Check if there is any content.\n    // If not, we won't add empty passages\n    if (styleElement.rawText.length > 0) {\n      // Add UserStylesheet\n      this.story.passages.push(\n        new Passage(\n          'UserStylesheet',\n          ['stylesheet'],\n          {},\n          styleElement.rawText\n        )\n      );\n    }\n\n    // Look for the script element\n    const scriptElement = dom.querySelector('#twine-user-script');\n\n    // Check if there is any content.\n    // If not, we won't add empty passages\n    if (scriptElement.rawText.length > 0) {\n      // Add UserScript\n      this.story.passages.push(\n        new Passage(\n          'UserScript',\n          ['script'],\n          {},\n          scriptElement.rawText\n        )\n      );\n    }\n\n    // Now that all passages have been handled,\n    //  change the start name\n    this.story.metadata.start = this.story.getStartingPassage();\n\n    // Add StoryData\n    this.story.passages.push(\n      new Passage(\n        'StoryData',\n        [],\n        {},\n        JSON.stringify(this.story.metadata, null, 4)\n      )\n    );\n  }\n\n  /**\n   * Try to escape meta-characters\n   *\n   * @param {string} result - Text to parse\n   * @returns {string} Escaped characters\n   */\n  _escapeMetacharacters (result) {\n    // Replace any single backslash with two of them\n    result = result.replace(/\\\\/g, '\\\\');\n    // Double-escape escaped {\n    result = result.replace(/\\\\\\{/g, '\\\\\\\\{');\n    // Double-escape escaped }\n    result = result.replace(/\\\\\\}/g, '\\\\\\\\}');\n    // Double-escape escaped [\n    result = result.replace(/\\\\\\[/g, '\\\\\\\\[');\n    // Double-escape escaped ]\n    result = result.replace(/\\\\\\]/g, '\\\\\\\\]');\n\n    return result;\n  }\n}\n\nmodule.exports = HTMLParser;\n"]}]}