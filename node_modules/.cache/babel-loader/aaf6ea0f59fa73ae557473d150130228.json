{"remainingRequest":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/babel-loader/lib/index.js!/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/eslint-loader/index.js??ref--13-0!/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/js/extwee_utils/TweeWriter.js","dependencies":[{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/js/extwee_utils/TweeWriter.js","mtime":1604692362843},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiKTsKCnZhciBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciA9IHJlcXVpcmUoIi9Vc2Vycy9qdXN0aW53dS9EZXNrdG9wL0dpdGxhYl9NeVRhbGUvbXl0YWxlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiKTsKCnZhciBfdHlwZW9mID0gcmVxdWlyZSgiL1VzZXJzL2p1c3Rpbnd1L0Rlc2t0b3AvR2l0bGFiX015VGFsZS9teXRhbGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdHlwZW9mIik7Cgp2YXIgX2NsYXNzQ2FsbENoZWNrID0gcmVxdWlyZSgiL1VzZXJzL2p1c3Rpbnd1L0Rlc2t0b3AvR2l0bGFiX015VGFsZS9teXRhbGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siKTsKCnZhciBfY3JlYXRlQ2xhc3MgPSByZXF1aXJlKCIvVXNlcnMvanVzdGlud3UvRGVza3RvcC9HaXRsYWJfTXlUYWxlL215dGFsZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpOwoKLyoqCiAqIEBleHRlcm5hbCBTdG9yeQogKiBAc2VlIFN0b3J5LmpzCiAqLwp2YXIgU3RvcnkgPSByZXF1aXJlKCcuL1N0b3J5LmpzJyk7Ci8qKgogKiBAY2xhc3MgVHdlZVdyaXRlcgogKiBAbW9kdWxlIFR3ZWVXcml0ZXIKICovCgoKdmFyIFR3ZWVXcml0ZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICJ1c2Ugc3RyaWN0IjsKCiAgLyoqCiAgICogQGZ1bmN0aW9uIFR3ZWVXcml0ZXIKICAgKiBAY2xhc3MKICAgKiBAcGFyYW0ge1N0b3J5fSBzdG9yeSAtIFN0b3J5IG9iamVjdCB0byB3cml0ZQogICAqIEBwYXJhbSB7c3RyaW5nfSBmaWxlIC0gRmlsZSB0byB3cml0ZSB0bwogICAqLwogIGZ1bmN0aW9uIFR3ZWVXcml0ZXIoc3RvcnkpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBUd2VlV3JpdGVyKTsKCiAgICBpZiAoIShzdG9yeSBpbnN0YW5jZW9mIFN0b3J5KSkgewogICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vdCBhIFN0b3J5IG9iamVjdCEnKTsKICAgIH0KCiAgICB0aGlzLm91dHB1dCA9IG51bGw7CiAgICB0aGlzLndyaXRlRmlsZShzdG9yeSk7CiAgfQogIC8qKgogICAqIFdyaXRlIHRvIGEgZmlsZSB1c2luZyBhIFN0b3J5IG9iamVjdAogICAqCiAgICogQHBhcmFtIHtTdG9yeX0gc3RvcnkgLSBTdG9yeSBmb3JtYXQgdG8gd3JpdGUKICAgKiBAcmV0dXJucyB7dm9pZH0KICAgKi8KCgogIF9jcmVhdGVDbGFzcyhUd2VlV3JpdGVyLCBbewogICAga2V5OiAid3JpdGVGaWxlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB3cml0ZUZpbGUoc3RvcnkpIHsKICAgICAgLy8gV3JpdGUgU3RvcnlUaXRsZSBmaXJzdAogICAgICB2YXIgb3V0cHV0Q29udGVudHMgPSAnOjogU3RvcnlUaXRsZVxuJyArIHN0b3J5Lm5hbWUgKyAnXG5cbic7IC8vIFdyaXRlIHRoZSBTdG9yeURhdGEgc2Vjb25kCgogICAgICBvdXRwdXRDb250ZW50cyArPSAnOjogU3RvcnlEYXRhXG4nOyAvLyBUZXN0IGlmIHN0b3J5Lm1ldGFkYXRhIGlzIGFuIG9iamVjdCBvciBub3QKCiAgICAgIGlmIChfdHlwZW9mKHN0b3J5Lm1ldGFkYXRhKSA9PT0gJ29iamVjdCcpIHsKICAgICAgICAvLyBXcml0ZSBhbnkgbWV0YWRhdGEgaW4gcHJldHR5IGZvcm1hdAogICAgICAgIG91dHB1dENvbnRlbnRzICs9ICcgJyArIEpTT04uc3RyaW5naWZ5KHN0b3J5Lm1ldGFkYXRhLCB1bmRlZmluZWQsIDIpOwogICAgICB9IGVsc2UgewogICAgICAgIC8vIElmLCBmb3Igd2hhdGV2ZXIgcmVhc29uLCBzdG9yeS5tZXRhZGF0YSBpcyBub3QgYW4gb2JqZWN0LCB0aHJvdyBlcnJvci4KICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1N0b3J5IE1ldGFkYXRhIE1VU1QgYmUgYW4gb2JqZWN0IScpOwogICAgICB9IC8vIEFkZCB0d28gbmV3bGluZXMKCgogICAgICBvdXRwdXRDb250ZW50cyArPSAnXG5cbic7IC8vIEFyZSB0aGVyZSBhbnkgcGFzc2FnZXM/CgogICAgICBpZiAoc3RvcnkucGFzc2FnZXMubGVuZ3RoID4gMCkgewogICAgICAgIC8vIEJ1aWxkIHRoZSBjb250ZW50cwogICAgICAgIGZvciAodmFyIHBhc3NhZ2UgaW4gc3RvcnkucGFzc2FnZXMpIHsKICAgICAgICAgIC8vIFdyaXRlIHRoZSBuYW1lCiAgICAgICAgICBvdXRwdXRDb250ZW50cyArPSAnOjogJyArIHN0b3J5LnBhc3NhZ2VzW3Bhc3NhZ2VdLm5hbWU7IC8vIFRlc3QgaWYgaXQgaGFzIGFueSB0YWdzCgogICAgICAgICAgaWYgKHN0b3J5LnBhc3NhZ2VzW3Bhc3NhZ2VdLnRhZ3MubGVuZ3RoID4gMCkgewogICAgICAgICAgICBvdXRwdXRDb250ZW50cyArPSAnIFsnOwoKICAgICAgICAgICAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHN0b3J5LnBhc3NhZ2VzW3Bhc3NhZ2VdLnRhZ3MpLAogICAgICAgICAgICAgICAgX3N0ZXA7CgogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgICAgICB2YXIgdGFnID0gX3N0ZXAudmFsdWU7CiAgICAgICAgICAgICAgICBvdXRwdXRDb250ZW50cyArPSAnICcgKyB0YWc7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgICAgIF9pdGVyYXRvci5mKCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIG91dHB1dENvbnRlbnRzICs9ICddJzsKICAgICAgICAgIH0gLy8gV3JpdGUgb3V0IGFueSBwYXNzYWdlIG1ldGFkYXRhCgoKICAgICAgICAgIG91dHB1dENvbnRlbnRzICs9IEpTT04uc3RyaW5naWZ5KHN0b3J5LnBhc3NhZ2VzW3Bhc3NhZ2VdLm1ldGFkYXRhKTsgLy8gQWRkIHRoZSB0ZXh0IGFuZCB0d28gbmV3bGluZXMKCiAgICAgICAgICBvdXRwdXRDb250ZW50cyArPSAnXG4nICsgc3RvcnkucGFzc2FnZXNbcGFzc2FnZV0udGV4dCArICdcblxuJzsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy8gQ3JlYXRlIGVtcHR5IFN0YXJ0IHBhc3NhZ2UKICAgICAgICBvdXRwdXRDb250ZW50cyArPSAnOjogU3RhcnRcbic7CiAgICAgIH0KCiAgICAgIHRoaXMub3V0cHV0ID0gb3V0cHV0Q29udGVudHM7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gVHdlZVdyaXRlcjsKfSgpOwoKbW9kdWxlLmV4cG9ydHMgPSBUd2VlV3JpdGVyOw=="},{"version":3,"sources":["/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/js/extwee_utils/TweeWriter.js"],"names":["Story","require","TweeWriter","story","Error","output","writeFile","outputContents","name","metadata","JSON","stringify","undefined","passages","length","passage","tags","tag","text","module","exports"],"mappings":";;;;;;;;;;AAAA;;;;AAKA,IAAMA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAArB;AAEA;;;;;;IAIMC,U;;;AACJ;;;;;;AAMA,sBAAaC,KAAb,EAAoB;AAAA;;AAClB,QAAI,EAAEA,KAAK,YAAYH,KAAnB,CAAJ,EAA+B;AAC7B,YAAM,IAAII,KAAJ,CAAU,qBAAV,CAAN;AACD;;AAED,SAAKC,MAAL,GAAc,IAAd;AAEA,SAAKC,SAAL,CAAeH,KAAf;AACD;AAED;;;;;;;;;;8BAMWA,K,EAAO;AAChB;AACA,UAAII,cAAc,GAAG,oBAAoBJ,KAAK,CAACK,IAA1B,GAAiC,MAAtD,CAFgB,CAIhB;;AACAD,MAAAA,cAAc,IAAI,gBAAlB,CALgB,CAOhB;;AACA,UAAI,QAAOJ,KAAK,CAACM,QAAb,MAA0B,QAA9B,EAAwC;AACtC;AACAF,QAAAA,cAAc,IAAI,MAAMG,IAAI,CAACC,SAAL,CAAeR,KAAK,CAACM,QAArB,EAA+BG,SAA/B,EAA0C,CAA1C,CAAxB;AACD,OAHD,MAGO;AACL;AACA,cAAM,IAAIR,KAAJ,CAAU,mCAAV,CAAN;AACD,OAde,CAgBhB;;;AACAG,MAAAA,cAAc,IAAI,MAAlB,CAjBgB,CAmBhB;;AACA,UAAIJ,KAAK,CAACU,QAAN,CAAeC,MAAf,GAAwB,CAA5B,EAA+B;AAC7B;AACA,aAAK,IAAMC,OAAX,IAAsBZ,KAAK,CAACU,QAA5B,EAAsC;AACpC;AACAN,UAAAA,cAAc,IAAI,QAAQJ,KAAK,CAACU,QAAN,CAAeE,OAAf,EAAwBP,IAAlD,CAFoC,CAIpC;;AACA,cAAIL,KAAK,CAACU,QAAN,CAAeE,OAAf,EAAwBC,IAAxB,CAA6BF,MAA7B,GAAsC,CAA1C,EAA6C;AAC3CP,YAAAA,cAAc,IAAI,IAAlB;;AAD2C,uDAGzBJ,KAAK,CAACU,QAAN,CAAeE,OAAf,EAAwBC,IAHC;AAAA;;AAAA;AAG3C,kEAAgD;AAAA,oBAArCC,GAAqC;AAC9CV,gBAAAA,cAAc,IAAI,MAAMU,GAAxB;AACD;AAL0C;AAAA;AAAA;AAAA;AAAA;;AAO3CV,YAAAA,cAAc,IAAI,GAAlB;AACD,WAbmC,CAepC;;;AACAA,UAAAA,cAAc,IAAIG,IAAI,CAACC,SAAL,CAAeR,KAAK,CAACU,QAAN,CAAeE,OAAf,EAAwBN,QAAvC,CAAlB,CAhBoC,CAkBpC;;AACAF,UAAAA,cAAc,IAAI,OAAOJ,KAAK,CAACU,QAAN,CAAeE,OAAf,EAAwBG,IAA/B,GAAsC,MAAxD;AACD;AACF,OAvBD,MAuBO;AACL;AACAX,QAAAA,cAAc,IAAI,YAAlB;AACD;;AAED,WAAKF,MAAL,GAAcE,cAAd;AACD;;;;;;AAGHY,MAAM,CAACC,OAAP,GAAiBlB,UAAjB","sourcesContent":["/**\n * @external Story\n * @see Story.js\n */\n\nconst Story = require('./Story.js');\n\n/**\n * @class TweeWriter\n * @module TweeWriter\n */\nclass TweeWriter {\n  /**\n   * @function TweeWriter\n   * @class\n   * @param {Story} story - Story object to write\n   * @param {string} file - File to write to\n   */\n  constructor (story) {\n    if (!(story instanceof Story)) {\n      throw new Error('Not a Story object!');\n    }\n\n    this.output = null;\n\n    this.writeFile(story);\n  }\n\n  /**\n   * Write to a file using a Story object\n   *\n   * @param {Story} story - Story format to write\n   * @returns {void}\n   */\n  writeFile (story) {\n    // Write StoryTitle first\n    let outputContents = ':: StoryTitle\\n' + story.name + '\\n\\n';\n\n    // Write the StoryData second\n    outputContents += ':: StoryData\\n';\n\n    // Test if story.metadata is an object or not\n    if (typeof story.metadata === 'object') {\n      // Write any metadata in pretty format\n      outputContents += ' ' + JSON.stringify(story.metadata, undefined, 2);\n    } else {\n      // If, for whatever reason, story.metadata is not an object, throw error.\n      throw new Error('Story Metadata MUST be an object!');\n    }\n\n    // Add two newlines\n    outputContents += '\\n\\n';\n\n    // Are there any passages?\n    if (story.passages.length > 0) {\n      // Build the contents\n      for (const passage in story.passages) {\n        // Write the name\n        outputContents += ':: ' + story.passages[passage].name;\n\n        // Test if it has any tags\n        if (story.passages[passage].tags.length > 0) {\n          outputContents += ' [';\n\n          for (const tag of story.passages[passage].tags) {\n            outputContents += ' ' + tag;\n          }\n\n          outputContents += ']';\n        }\n\n        // Write out any passage metadata\n        outputContents += JSON.stringify(story.passages[passage].metadata);\n\n        // Add the text and two newlines\n        outputContents += '\\n' + story.passages[passage].text + '\\n\\n';\n      }\n    } else {\n      // Create empty Start passage\n      outputContents += ':: Start\\n';\n    }\n\n    this.output = outputContents;\n  }\n}\n\nmodule.exports = TweeWriter;\n"]}]}