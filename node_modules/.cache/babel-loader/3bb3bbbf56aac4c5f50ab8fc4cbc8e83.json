{"remainingRequest":"/Users/justinwu/Desktop/story_personalization_system/node_modules/babel-loader/lib/index.js!/Users/justinwu/Desktop/story_personalization_system/node_modules/eslint-loader/index.js??ref--13-0!/Users/justinwu/Desktop/story_personalization_system/src/js/tiptap/packages/tiptap/src/Editor.js","dependencies":[{"path":"/Users/justinwu/Desktop/story_personalization_system/src/js/tiptap/packages/tiptap/src/Editor.js","mtime":1604692362850},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnJlZHVjZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZW50cmllcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zdGFydHMtd2l0aCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi51cmwudG8tanNvbiI7CmltcG9ydCBfc2xpY2VkVG9BcnJheSBmcm9tICIvVXNlcnMvanVzdGlud3UvRGVza3RvcC9zdG9yeV9wZXJzb25hbGl6YXRpb25fc3lzdGVtL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5IjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvanVzdGlud3UvRGVza3RvcC9zdG9yeV9wZXJzb25hbGl6YXRpb25fc3lzdGVtL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCBfdHlwZW9mIGZyb20gIi9Vc2Vycy9qdXN0aW53dS9EZXNrdG9wL3N0b3J5X3BlcnNvbmFsaXphdGlvbl9zeXN0ZW0vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3R5cGVvZiI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiL1VzZXJzL2p1c3Rpbnd1L0Rlc2t0b3Avc3RvcnlfcGVyc29uYWxpemF0aW9uX3N5c3RlbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvanVzdGlud3UvRGVza3RvcC9zdG9yeV9wZXJzb25hbGl6YXRpb25fc3lzdGVtL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvanVzdGlud3UvRGVza3RvcC9zdG9yeV9wZXJzb25hbGl6YXRpb25fc3lzdGVtL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL1VzZXJzL2p1c3Rpbnd1L0Rlc2t0b3Avc3RvcnlfcGVyc29uYWxpemF0aW9uX3N5c3RlbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIi9Vc2Vycy9qdXN0aW53dS9EZXNrdG9wL3N0b3J5X3BlcnNvbmFsaXphdGlvbl9zeXN0ZW0vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvVXNlcnMvanVzdGlud3UvRGVza3RvcC9zdG9yeV9wZXJzb25hbGl6YXRpb25fc3lzdGVtL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlciI7CmltcG9ydCB7IEVkaXRvclN0YXRlLCBQbHVnaW4sIFBsdWdpbktleSwgVGV4dFNlbGVjdGlvbiB9IGZyb20gJ3Byb3NlbWlycm9yLXN0YXRlJzsKaW1wb3J0IHsgRWRpdG9yVmlldyB9IGZyb20gJ3Byb3NlbWlycm9yLXZpZXcnOwppbXBvcnQgeyBTY2hlbWEsIERPTVBhcnNlciwgRE9NU2VyaWFsaXplciB9IGZyb20gJ3Byb3NlbWlycm9yLW1vZGVsJzsKaW1wb3J0IHsgZHJvcEN1cnNvciB9IGZyb20gJ3Byb3NlbWlycm9yLWRyb3BjdXJzb3InOwppbXBvcnQgeyBnYXBDdXJzb3IgfSBmcm9tICdwcm9zZW1pcnJvci1nYXBjdXJzb3InOwppbXBvcnQgeyBrZXltYXAgfSBmcm9tICdwcm9zZW1pcnJvci1rZXltYXAnOwppbXBvcnQgeyBiYXNlS2V5bWFwIH0gZnJvbSAncHJvc2VtaXJyb3ItY29tbWFuZHMnOwppbXBvcnQgeyBpbnB1dFJ1bGVzLCB1bmRvSW5wdXRSdWxlIH0gZnJvbSAncHJvc2VtaXJyb3ItaW5wdXRydWxlcyc7CmltcG9ydCB7IG1hcmtJc0FjdGl2ZSwgbm9kZUlzQWN0aXZlLCBnZXRNYXJrQXR0cnMsIGdldE5vZGVBdHRycyBhcyBfZ2V0Tm9kZUF0dHJzIH0gZnJvbSAndGlwdGFwLXV0aWxzJzsKaW1wb3J0IHsgaW5qZWN0Q1NTLCBjYW1lbENhc2UsIEVtaXR0ZXIsIEV4dGVuc2lvbk1hbmFnZXIsIENvbXBvbmVudFZpZXcsIG1pbk1heCB9IGZyb20gJy4vVXRpbHMnOwppbXBvcnQgeyBEb2MsIFBhcmFncmFwaCwgVGV4dCB9IGZyb20gJy4vTm9kZXMnOwppbXBvcnQgY3NzIGZyb20gJy4vc3R5bGUuY3NzJzsKCnZhciBFZGl0b3IgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9FbWl0dGVyKSB7CiAgX2luaGVyaXRzKEVkaXRvciwgX0VtaXR0ZXIpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKEVkaXRvcik7CgogIGZ1bmN0aW9uIEVkaXRvcigpIHsKICAgIHZhciBfdGhpczsKCiAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEVkaXRvcik7CgogICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKTsKICAgIF90aGlzLmRlZmF1bHRPcHRpb25zID0gewogICAgICBlZGl0b3JQcm9wczoge30sCiAgICAgIGVkaXRhYmxlOiB0cnVlLAogICAgICBhdXRvRm9jdXM6IG51bGwsCiAgICAgIGV4dGVuc2lvbnM6IFtdLAogICAgICBjb250ZW50OiAnJywKICAgICAgdG9wTm9kZTogJ2RvYycsCiAgICAgIGVtcHR5RG9jdW1lbnQ6IHsKICAgICAgICB0eXBlOiAnZG9jJywKICAgICAgICBjb250ZW50OiBbewogICAgICAgICAgdHlwZTogJ3BhcmFncmFwaCcKICAgICAgICB9XQogICAgICB9LAogICAgICB1c2VCdWlsdEluRXh0ZW5zaW9uczogdHJ1ZSwKICAgICAgZGlzYWJsZUlucHV0UnVsZXM6IGZhbHNlLAogICAgICBkaXNhYmxlUGFzdGVSdWxlczogZmFsc2UsCiAgICAgIGRyb3BDdXJzb3I6IHt9LAogICAgICBwYXJzZU9wdGlvbnM6IHt9LAogICAgICBpbmplY3RDU1M6IHRydWUsCiAgICAgIG9uSW5pdDogZnVuY3Rpb24gb25Jbml0KCkge30sCiAgICAgIG9uVHJhbnNhY3Rpb246IGZ1bmN0aW9uIG9uVHJhbnNhY3Rpb24oKSB7fSwKICAgICAgb25VcGRhdGU6IGZ1bmN0aW9uIG9uVXBkYXRlKCkge30sCiAgICAgIG9uRm9jdXM6IGZ1bmN0aW9uIG9uRm9jdXMoKSB7fSwKICAgICAgb25CbHVyOiBmdW5jdGlvbiBvbkJsdXIoKSB7fSwKICAgICAgb25QYXN0ZTogZnVuY3Rpb24gb25QYXN0ZSgpIHt9LAogICAgICBvbkRyb3A6IGZ1bmN0aW9uIG9uRHJvcCgpIHt9CiAgICB9OwogICAgX3RoaXMuZXZlbnRzID0gWydpbml0JywgJ3RyYW5zYWN0aW9uJywgJ3VwZGF0ZScsICdmb2N1cycsICdibHVyJywgJ3Bhc3RlJywgJ2Ryb3AnXTsKCiAgICBfdGhpcy5pbml0KG9wdGlvbnMpOwoKICAgIHJldHVybiBfdGhpczsKICB9CgogIF9jcmVhdGVDbGFzcyhFZGl0b3IsIFt7CiAgICBrZXk6ICJpbml0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBpbml0KCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTsKICAgICAgdGhpcy5zZXRPcHRpb25zKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgdGhpcy5kZWZhdWx0T3B0aW9ucyksIG9wdGlvbnMpKTsKICAgICAgdGhpcy5mb2N1c2VkID0gZmFsc2U7CiAgICAgIHRoaXMuc2VsZWN0aW9uID0gewogICAgICAgIGZyb206IDAsCiAgICAgICAgdG86IDAKICAgICAgfTsKICAgICAgdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICAgIHRoaXMuZXh0ZW5zaW9ucyA9IHRoaXMuY3JlYXRlRXh0ZW5zaW9ucygpOwogICAgICB0aGlzLm5vZGVzID0gdGhpcy5jcmVhdGVOb2RlcygpOwogICAgICB0aGlzLm1hcmtzID0gdGhpcy5jcmVhdGVNYXJrcygpOwogICAgICB0aGlzLnNjaGVtYSA9IHRoaXMuY3JlYXRlU2NoZW1hKCk7CiAgICAgIHRoaXMucGx1Z2lucyA9IHRoaXMuY3JlYXRlUGx1Z2lucygpOwogICAgICB0aGlzLmtleW1hcHMgPSB0aGlzLmNyZWF0ZUtleW1hcHMoKTsKICAgICAgdGhpcy5pbnB1dFJ1bGVzID0gdGhpcy5jcmVhdGVJbnB1dFJ1bGVzKCk7CiAgICAgIHRoaXMucGFzdGVSdWxlcyA9IHRoaXMuY3JlYXRlUGFzdGVSdWxlcygpOwogICAgICB0aGlzLnZpZXcgPSB0aGlzLmNyZWF0ZVZpZXcoKTsKICAgICAgdGhpcy5jb21tYW5kcyA9IHRoaXMuY3JlYXRlQ29tbWFuZHMoKTsKICAgICAgdGhpcy5zZXRBY3RpdmVOb2Rlc0FuZE1hcmtzKCk7CgogICAgICBpZiAodGhpcy5vcHRpb25zLmluamVjdENTUykgewogICAgICAgIGluamVjdENTUyhjc3MpOwogICAgICB9CgogICAgICBpZiAodGhpcy5vcHRpb25zLmF1dG9Gb2N1cyAhPT0gbnVsbCkgewogICAgICAgIHRoaXMuZm9jdXModGhpcy5vcHRpb25zLmF1dG9Gb2N1cyk7CiAgICAgIH0KCiAgICAgIHRoaXMuZXZlbnRzLmZvckVhY2goZnVuY3Rpb24gKG5hbWUpIHsKICAgICAgICBfdGhpczIub24obmFtZSwgX3RoaXMyLm9wdGlvbnNbY2FtZWxDYXNlKCJvbiAiLmNvbmNhdChuYW1lKSldIHx8IGZ1bmN0aW9uICgpIHt9KTsKICAgICAgfSk7CiAgICAgIHRoaXMuZW1pdCgnaW5pdCcsIHsKICAgICAgICB2aWV3OiB0aGlzLnZpZXcsCiAgICAgICAgc3RhdGU6IHRoaXMuc3RhdGUKICAgICAgfSk7IC8vIGdpdmUgZXh0ZW5zaW9uIG1hbmFnZXIgYWNjZXNzIHRvIG91ciB2aWV3CgogICAgICB0aGlzLmV4dGVuc2lvbnMudmlldyA9IHRoaXMudmlldzsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzZXRPcHRpb25zIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRPcHRpb25zKG9wdGlvbnMpIHsKICAgICAgdGhpcy5vcHRpb25zID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCB0aGlzLm9wdGlvbnMpLCBvcHRpb25zKTsKCiAgICAgIGlmICh0aGlzLnZpZXcgJiYgdGhpcy5zdGF0ZSkgewogICAgICAgIHRoaXMudmlldy51cGRhdGVTdGF0ZSh0aGlzLnN0YXRlKTsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGtleTogImNyZWF0ZUV4dGVuc2lvbnMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZUV4dGVuc2lvbnMoKSB7CiAgICAgIHJldHVybiBuZXcgRXh0ZW5zaW9uTWFuYWdlcihbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuYnVpbHRJbkV4dGVuc2lvbnMpLCBfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5vcHRpb25zLmV4dGVuc2lvbnMpKSwgdGhpcyk7CiAgICB9CiAgfSwgewogICAga2V5OiAiY3JlYXRlUGx1Z2lucyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlUGx1Z2lucygpIHsKICAgICAgcmV0dXJuIHRoaXMuZXh0ZW5zaW9ucy5wbHVnaW5zOwogICAgfQogIH0sIHsKICAgIGtleTogImNyZWF0ZUtleW1hcHMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZUtleW1hcHMoKSB7CiAgICAgIHJldHVybiB0aGlzLmV4dGVuc2lvbnMua2V5bWFwcyh7CiAgICAgICAgc2NoZW1hOiB0aGlzLnNjaGVtYQogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjcmVhdGVJbnB1dFJ1bGVzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGVJbnB1dFJ1bGVzKCkgewogICAgICByZXR1cm4gdGhpcy5leHRlbnNpb25zLmlucHV0UnVsZXMoewogICAgICAgIHNjaGVtYTogdGhpcy5zY2hlbWEsCiAgICAgICAgZXhjbHVkZWRFeHRlbnNpb25zOiB0aGlzLm9wdGlvbnMuZGlzYWJsZUlucHV0UnVsZXMKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiY3JlYXRlUGFzdGVSdWxlcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlUGFzdGVSdWxlcygpIHsKICAgICAgcmV0dXJuIHRoaXMuZXh0ZW5zaW9ucy5wYXN0ZVJ1bGVzKHsKICAgICAgICBzY2hlbWE6IHRoaXMuc2NoZW1hLAogICAgICAgIGV4Y2x1ZGVkRXh0ZW5zaW9uczogdGhpcy5vcHRpb25zLmRpc2FibGVQYXN0ZVJ1bGVzCiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImNyZWF0ZUNvbW1hbmRzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGVDb21tYW5kcygpIHsKICAgICAgcmV0dXJuIHRoaXMuZXh0ZW5zaW9ucy5jb21tYW5kcyh7CiAgICAgICAgc2NoZW1hOiB0aGlzLnNjaGVtYSwKICAgICAgICB2aWV3OiB0aGlzLnZpZXcKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiY3JlYXRlTm9kZXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZU5vZGVzKCkgewogICAgICByZXR1cm4gdGhpcy5leHRlbnNpb25zLm5vZGVzOwogICAgfQogIH0sIHsKICAgIGtleTogImNyZWF0ZU1hcmtzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGVNYXJrcygpIHsKICAgICAgcmV0dXJuIHRoaXMuZXh0ZW5zaW9ucy5tYXJrczsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjcmVhdGVTY2hlbWEiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZVNjaGVtYSgpIHsKICAgICAgcmV0dXJuIG5ldyBTY2hlbWEoewogICAgICAgIHRvcE5vZGU6IHRoaXMub3B0aW9ucy50b3BOb2RlLAogICAgICAgIG5vZGVzOiB0aGlzLm5vZGVzLAogICAgICAgIG1hcmtzOiB0aGlzLm1hcmtzCiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImNyZWF0ZVN0YXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGVTdGF0ZSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZXR1cm4gRWRpdG9yU3RhdGUuY3JlYXRlKHsKICAgICAgICBzY2hlbWE6IHRoaXMuc2NoZW1hLAogICAgICAgIGRvYzogdGhpcy5jcmVhdGVEb2N1bWVudCh0aGlzLm9wdGlvbnMuY29udGVudCksCiAgICAgICAgcGx1Z2luczogW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheSh0aGlzLnBsdWdpbnMpLCBbaW5wdXRSdWxlcyh7CiAgICAgICAgICBydWxlczogdGhpcy5pbnB1dFJ1bGVzCiAgICAgICAgfSldLCBfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5wYXN0ZVJ1bGVzKSwgX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMua2V5bWFwcyksIFtrZXltYXAoewogICAgICAgICAgQmFja3NwYWNlOiB1bmRvSW5wdXRSdWxlCiAgICAgICAgfSksIGtleW1hcChiYXNlS2V5bWFwKSwgZHJvcEN1cnNvcih0aGlzLm9wdGlvbnMuZHJvcEN1cnNvciksIGdhcEN1cnNvcigpLCBuZXcgUGx1Z2luKHsKICAgICAgICAgIGtleTogbmV3IFBsdWdpbktleSgnZWRpdGFibGUnKSwKICAgICAgICAgIHByb3BzOiB7CiAgICAgICAgICAgIGVkaXRhYmxlOiBmdW5jdGlvbiBlZGl0YWJsZSgpIHsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMzLm9wdGlvbnMuZWRpdGFibGU7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9KSwgbmV3IFBsdWdpbih7CiAgICAgICAgICBwcm9wczogewogICAgICAgICAgICBhdHRyaWJ1dGVzOiB7CiAgICAgICAgICAgICAgdGFiaW5kZXg6IDAKICAgICAgICAgICAgfSwKICAgICAgICAgICAgaGFuZGxlRE9NRXZlbnRzOiB7CiAgICAgICAgICAgICAgZm9jdXM6IGZ1bmN0aW9uIGZvY3VzKHZpZXcsIGV2ZW50KSB7CiAgICAgICAgICAgICAgICBfdGhpczMuZm9jdXNlZCA9IHRydWU7CgogICAgICAgICAgICAgICAgX3RoaXMzLmVtaXQoJ2ZvY3VzJywgewogICAgICAgICAgICAgICAgICBldmVudDogZXZlbnQsCiAgICAgICAgICAgICAgICAgIHN0YXRlOiB2aWV3LnN0YXRlLAogICAgICAgICAgICAgICAgICB2aWV3OiB2aWV3CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICB2YXIgdHJhbnNhY3Rpb24gPSBfdGhpczMuc3RhdGUudHIuc2V0TWV0YSgnZm9jdXNlZCcsIHRydWUpOwoKICAgICAgICAgICAgICAgIF90aGlzMy52aWV3LmRpc3BhdGNoKHRyYW5zYWN0aW9uKTsKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGJsdXI6IGZ1bmN0aW9uIGJsdXIodmlldywgZXZlbnQpIHsKICAgICAgICAgICAgICAgIF90aGlzMy5mb2N1c2VkID0gZmFsc2U7CgogICAgICAgICAgICAgICAgX3RoaXMzLmVtaXQoJ2JsdXInLCB7CiAgICAgICAgICAgICAgICAgIGV2ZW50OiBldmVudCwKICAgICAgICAgICAgICAgICAgc3RhdGU6IHZpZXcuc3RhdGUsCiAgICAgICAgICAgICAgICAgIHZpZXc6IHZpZXcKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIHZhciB0cmFuc2FjdGlvbiA9IF90aGlzMy5zdGF0ZS50ci5zZXRNZXRhKCdmb2N1c2VkJywgZmFsc2UpOwoKICAgICAgICAgICAgICAgIF90aGlzMy52aWV3LmRpc3BhdGNoKHRyYW5zYWN0aW9uKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9KSwgbmV3IFBsdWdpbih7CiAgICAgICAgICBwcm9wczogdGhpcy5vcHRpb25zLmVkaXRvclByb3BzCiAgICAgICAgfSldKQogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjcmVhdGVEb2N1bWVudCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlRG9jdW1lbnQoY29udGVudCkgewogICAgICB2YXIgcGFyc2VPcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB0aGlzLm9wdGlvbnMucGFyc2VPcHRpb25zOwoKICAgICAgaWYgKGNvbnRlbnQgPT09IG51bGwpIHsKICAgICAgICByZXR1cm4gdGhpcy5zY2hlbWEubm9kZUZyb21KU09OKHRoaXMub3B0aW9ucy5lbXB0eURvY3VtZW50KTsKICAgICAgfQoKICAgICAgaWYgKF90eXBlb2YoY29udGVudCkgPT09ICdvYmplY3QnKSB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIHJldHVybiB0aGlzLnNjaGVtYS5ub2RlRnJvbUpTT04oY29udGVudCk7CiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgIGNvbnNvbGUud2FybignW3RpcHRhcCB3YXJuXTogSW52YWxpZCBjb250ZW50LicsICdQYXNzZWQgdmFsdWU6JywgY29udGVudCwgJ0Vycm9yOicsIGVycm9yKTsKICAgICAgICAgIHJldHVybiB0aGlzLnNjaGVtYS5ub2RlRnJvbUpTT04odGhpcy5vcHRpb25zLmVtcHR5RG9jdW1lbnQpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgewogICAgICAgIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICAgICAgZWxlbWVudC5pbm5lckhUTUwgPSBjb250ZW50LnRyaW0oKTsKICAgICAgICByZXR1cm4gRE9NUGFyc2VyLmZyb21TY2hlbWEodGhpcy5zY2hlbWEpLnBhcnNlKGVsZW1lbnQsIHBhcnNlT3B0aW9ucyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjcmVhdGVWaWV3IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGVWaWV3KCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHJldHVybiBuZXcgRWRpdG9yVmlldyh0aGlzLmVsZW1lbnQsIHsKICAgICAgICBzdGF0ZTogdGhpcy5jcmVhdGVTdGF0ZSgpLAogICAgICAgIGhhbmRsZVBhc3RlOiBmdW5jdGlvbiBoYW5kbGVQYXN0ZSgpIHsKICAgICAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykgewogICAgICAgICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldOwogICAgICAgICAgfQoKICAgICAgICAgIF90aGlzNC5lbWl0LmFwcGx5KF90aGlzNCwgWydwYXN0ZSddLmNvbmNhdChhcmdzKSk7CiAgICAgICAgfSwKICAgICAgICBoYW5kbGVEcm9wOiBmdW5jdGlvbiBoYW5kbGVEcm9wKCkgewogICAgICAgICAgZm9yICh2YXIgX2xlbjIgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4yKSwgX2tleTIgPSAwOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7CiAgICAgICAgICAgIGFyZ3NbX2tleTJdID0gYXJndW1lbnRzW19rZXkyXTsKICAgICAgICAgIH0KCiAgICAgICAgICBfdGhpczQuZW1pdC5hcHBseShfdGhpczQsIFsnZHJvcCddLmNvbmNhdChhcmdzKSk7CiAgICAgICAgfSwKICAgICAgICBkaXNwYXRjaFRyYW5zYWN0aW9uOiB0aGlzLmRpc3BhdGNoVHJhbnNhY3Rpb24uYmluZCh0aGlzKQogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzZXRQYXJlbnRDb21wb25lbnQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHNldFBhcmVudENvbXBvbmVudCgpIHsKICAgICAgdmFyIGNvbXBvbmVudCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogbnVsbDsKCiAgICAgIGlmICghY29tcG9uZW50KSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLnZpZXcuc2V0UHJvcHMoewogICAgICAgIG5vZGVWaWV3czogdGhpcy5pbml0Tm9kZVZpZXdzKHsKICAgICAgICAgIHBhcmVudDogY29tcG9uZW50LAogICAgICAgICAgZXh0ZW5zaW9uczogW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheSh0aGlzLmJ1aWx0SW5FeHRlbnNpb25zKSwgX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMub3B0aW9ucy5leHRlbnNpb25zKSkKICAgICAgICB9KQogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJpbml0Tm9kZVZpZXdzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBpbml0Tm9kZVZpZXdzKF9yZWYpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CgogICAgICB2YXIgcGFyZW50ID0gX3JlZi5wYXJlbnQsCiAgICAgICAgICBleHRlbnNpb25zID0gX3JlZi5leHRlbnNpb25zOwogICAgICByZXR1cm4gZXh0ZW5zaW9ucy5maWx0ZXIoZnVuY3Rpb24gKGV4dGVuc2lvbikgewogICAgICAgIHJldHVybiBbJ25vZGUnLCAnbWFyayddLmluY2x1ZGVzKGV4dGVuc2lvbi50eXBlKTsKICAgICAgfSkuZmlsdGVyKGZ1bmN0aW9uIChleHRlbnNpb24pIHsKICAgICAgICByZXR1cm4gZXh0ZW5zaW9uLnZpZXc7CiAgICAgIH0pLnJlZHVjZShmdW5jdGlvbiAobm9kZVZpZXdzLCBleHRlbnNpb24pIHsKICAgICAgICB2YXIgbm9kZVZpZXcgPSBmdW5jdGlvbiBub2RlVmlldyhub2RlLCB2aWV3LCBnZXRQb3MsIGRlY29yYXRpb25zKSB7CiAgICAgICAgICB2YXIgY29tcG9uZW50ID0gZXh0ZW5zaW9uLnZpZXc7CiAgICAgICAgICByZXR1cm4gbmV3IENvbXBvbmVudFZpZXcoY29tcG9uZW50LCB7CiAgICAgICAgICAgIGVkaXRvcjogX3RoaXM1LAogICAgICAgICAgICBleHRlbnNpb246IGV4dGVuc2lvbiwKICAgICAgICAgICAgcGFyZW50OiBwYXJlbnQsCiAgICAgICAgICAgIG5vZGU6IG5vZGUsCiAgICAgICAgICAgIHZpZXc6IHZpZXcsCiAgICAgICAgICAgIGdldFBvczogZ2V0UG9zLAogICAgICAgICAgICBkZWNvcmF0aW9uczogZGVjb3JhdGlvbnMKICAgICAgICAgIH0pOwogICAgICAgIH07CgogICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG5vZGVWaWV3cyksIHt9LCBfZGVmaW5lUHJvcGVydHkoe30sIGV4dGVuc2lvbi5uYW1lLCBub2RlVmlldykpOwogICAgICB9LCB7fSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZGlzcGF0Y2hUcmFuc2FjdGlvbiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZGlzcGF0Y2hUcmFuc2FjdGlvbih0cmFuc2FjdGlvbikgewogICAgICB2YXIgbmV3U3RhdGUgPSB0aGlzLnN0YXRlLmFwcGx5KHRyYW5zYWN0aW9uKTsKICAgICAgdGhpcy52aWV3LnVwZGF0ZVN0YXRlKG5ld1N0YXRlKTsKICAgICAgdGhpcy5zZWxlY3Rpb24gPSB7CiAgICAgICAgZnJvbTogdGhpcy5zdGF0ZS5zZWxlY3Rpb24uZnJvbSwKICAgICAgICB0bzogdGhpcy5zdGF0ZS5zZWxlY3Rpb24udG8KICAgICAgfTsKICAgICAgdGhpcy5zZXRBY3RpdmVOb2Rlc0FuZE1hcmtzKCk7CiAgICAgIHRoaXMuZW1pdCgndHJhbnNhY3Rpb24nLCB7CiAgICAgICAgZ2V0SFRNTDogdGhpcy5nZXRIVE1MLmJpbmQodGhpcyksCiAgICAgICAgZ2V0SlNPTjogdGhpcy5nZXRKU09OLmJpbmQodGhpcyksCiAgICAgICAgc3RhdGU6IHRoaXMuc3RhdGUsCiAgICAgICAgdHJhbnNhY3Rpb246IHRyYW5zYWN0aW9uCiAgICAgIH0pOwoKICAgICAgaWYgKCF0cmFuc2FjdGlvbi5kb2NDaGFuZ2VkIHx8IHRyYW5zYWN0aW9uLmdldE1ldGEoJ3ByZXZlbnRVcGRhdGUnKSkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy5lbWl0VXBkYXRlKHRyYW5zYWN0aW9uKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJlbWl0VXBkYXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBlbWl0VXBkYXRlKHRyYW5zYWN0aW9uKSB7CiAgICAgIHRoaXMuZW1pdCgndXBkYXRlJywgewogICAgICAgIGdldEhUTUw6IHRoaXMuZ2V0SFRNTC5iaW5kKHRoaXMpLAogICAgICAgIGdldEpTT046IHRoaXMuZ2V0SlNPTi5iaW5kKHRoaXMpLAogICAgICAgIHN0YXRlOiB0aGlzLnN0YXRlLAogICAgICAgIHRyYW5zYWN0aW9uOiB0cmFuc2FjdGlvbgogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJyZXNvbHZlU2VsZWN0aW9uIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZXNvbHZlU2VsZWN0aW9uKCkgewogICAgICB2YXIgcG9zaXRpb24gPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IG51bGw7CgogICAgICBpZiAodGhpcy5zZWxlY3Rpb24gJiYgcG9zaXRpb24gPT09IG51bGwpIHsKICAgICAgICByZXR1cm4gdGhpcy5zZWxlY3Rpb247CiAgICAgIH0KCiAgICAgIGlmIChwb3NpdGlvbiA9PT0gJ3N0YXJ0JyB8fCBwb3NpdGlvbiA9PT0gdHJ1ZSkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBmcm9tOiAwLAogICAgICAgICAgdG86IDAKICAgICAgICB9OwogICAgICB9CgogICAgICBpZiAocG9zaXRpb24gPT09ICdlbmQnKSB7CiAgICAgICAgdmFyIGRvYyA9IHRoaXMuc3RhdGUuZG9jOwogICAgICAgIHJldHVybiB7CiAgICAgICAgICBmcm9tOiBkb2MuY29udGVudC5zaXplLAogICAgICAgICAgdG86IGRvYy5jb250ZW50LnNpemUKICAgICAgICB9OwogICAgICB9CgogICAgICByZXR1cm4gewogICAgICAgIGZyb206IHBvc2l0aW9uLAogICAgICAgIHRvOiBwb3NpdGlvbgogICAgICB9OwogICAgfQogIH0sIHsKICAgIGtleTogImZvY3VzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBmb2N1cygpIHsKICAgICAgdmFyIF90aGlzNiA9IHRoaXM7CgogICAgICB2YXIgcG9zaXRpb24gPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IG51bGw7CgogICAgICBpZiAodGhpcy52aWV3LmZvY3VzZWQgJiYgcG9zaXRpb24gPT09IG51bGwgfHwgcG9zaXRpb24gPT09IGZhbHNlKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB2YXIgX3RoaXMkcmVzb2x2ZVNlbGVjdGlvID0gdGhpcy5yZXNvbHZlU2VsZWN0aW9uKHBvc2l0aW9uKSwKICAgICAgICAgIGZyb20gPSBfdGhpcyRyZXNvbHZlU2VsZWN0aW8uZnJvbSwKICAgICAgICAgIHRvID0gX3RoaXMkcmVzb2x2ZVNlbGVjdGlvLnRvOwoKICAgICAgdGhpcy5zZXRTZWxlY3Rpb24oZnJvbSwgdG8pOwogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gX3RoaXM2LnZpZXcuZm9jdXMoKTsKICAgICAgfSwgMTApOwogICAgfQogIH0sIHsKICAgIGtleTogInNldFNlbGVjdGlvbiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0U2VsZWN0aW9uKCkgewogICAgICB2YXIgZnJvbSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogMDsKICAgICAgdmFyIHRvID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAwOwogICAgICB2YXIgX3RoaXMkc3RhdGUgPSB0aGlzLnN0YXRlLAogICAgICAgICAgZG9jID0gX3RoaXMkc3RhdGUuZG9jLAogICAgICAgICAgdHIgPSBfdGhpcyRzdGF0ZS50cjsKICAgICAgdmFyIHJlc29sdmVkRnJvbSA9IG1pbk1heChmcm9tLCAwLCBkb2MuY29udGVudC5zaXplKTsKICAgICAgdmFyIHJlc29sdmVkRW5kID0gbWluTWF4KHRvLCAwLCBkb2MuY29udGVudC5zaXplKTsKICAgICAgdmFyIHNlbGVjdGlvbiA9IFRleHRTZWxlY3Rpb24uY3JlYXRlKGRvYywgcmVzb2x2ZWRGcm9tLCByZXNvbHZlZEVuZCk7CiAgICAgIHZhciB0cmFuc2FjdGlvbiA9IHRyLnNldFNlbGVjdGlvbihzZWxlY3Rpb24pOwogICAgICB0aGlzLnZpZXcuZGlzcGF0Y2godHJhbnNhY3Rpb24pOwogICAgfQogIH0sIHsKICAgIGtleTogImJsdXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGJsdXIoKSB7CiAgICAgIHRoaXMudmlldy5kb20uYmx1cigpOwogICAgfQogIH0sIHsKICAgIGtleTogImdldFNjaGVtYUpTT04iLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldFNjaGVtYUpTT04oKSB7CiAgICAgIHJldHVybiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHsKICAgICAgICBub2RlczogdGhpcy5leHRlbnNpb25zLm5vZGVzLAogICAgICAgIG1hcmtzOiB0aGlzLmV4dGVuc2lvbnMubWFya3MKICAgICAgfSkpOwogICAgfQogIH0sIHsKICAgIGtleTogImdldEhUTUwiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldEhUTUwoKSB7CiAgICAgIHZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKICAgICAgdmFyIGZyYWdtZW50ID0gRE9NU2VyaWFsaXplci5mcm9tU2NoZW1hKHRoaXMuc2NoZW1hKS5zZXJpYWxpemVGcmFnbWVudCh0aGlzLnN0YXRlLmRvYy5jb250ZW50KTsKICAgICAgZGl2LmFwcGVuZENoaWxkKGZyYWdtZW50KTsKICAgICAgcmV0dXJuIGRpdi5pbm5lckhUTUw7CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0SlNPTiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0SlNPTigpIHsKICAgICAgcmV0dXJuIHRoaXMuc3RhdGUuZG9jLnRvSlNPTigpOwogICAgfQogIH0sIHsKICAgIGtleTogInNldENvbnRlbnQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHNldENvbnRlbnQoKSB7CiAgICAgIHZhciBjb250ZW50ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTsKICAgICAgdmFyIGVtaXRVcGRhdGUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IGZhbHNlOwogICAgICB2YXIgcGFyc2VPcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgPyBhcmd1bWVudHNbMl0gOiB1bmRlZmluZWQ7CiAgICAgIHZhciBfdGhpcyRzdGF0ZTIgPSB0aGlzLnN0YXRlLAogICAgICAgICAgZG9jID0gX3RoaXMkc3RhdGUyLmRvYywKICAgICAgICAgIHRyID0gX3RoaXMkc3RhdGUyLnRyOwogICAgICB2YXIgZG9jdW1lbnQgPSB0aGlzLmNyZWF0ZURvY3VtZW50KGNvbnRlbnQsIHBhcnNlT3B0aW9ucyk7CiAgICAgIHZhciBzZWxlY3Rpb24gPSBUZXh0U2VsZWN0aW9uLmNyZWF0ZShkb2MsIDAsIGRvYy5jb250ZW50LnNpemUpOwogICAgICB2YXIgdHJhbnNhY3Rpb24gPSB0ci5zZXRTZWxlY3Rpb24oc2VsZWN0aW9uKS5yZXBsYWNlU2VsZWN0aW9uV2l0aChkb2N1bWVudCwgZmFsc2UpLnNldE1ldGEoJ3ByZXZlbnRVcGRhdGUnLCAhZW1pdFVwZGF0ZSk7CiAgICAgIHRoaXMudmlldy5kaXNwYXRjaCh0cmFuc2FjdGlvbik7CiAgICB9CiAgfSwgewogICAga2V5OiAiY2xlYXJDb250ZW50IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjbGVhckNvbnRlbnQoKSB7CiAgICAgIHZhciBlbWl0VXBkYXRlID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBmYWxzZTsKICAgICAgdGhpcy5zZXRDb250ZW50KHRoaXMub3B0aW9ucy5lbXB0eURvY3VtZW50LCBlbWl0VXBkYXRlKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzZXRBY3RpdmVOb2Rlc0FuZE1hcmtzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRBY3RpdmVOb2Rlc0FuZE1hcmtzKCkgewogICAgICB2YXIgX3RoaXM3ID0gdGhpczsKCiAgICAgIHRoaXMuYWN0aXZlTWFya3MgPSBPYmplY3QuZW50cmllcyh0aGlzLnNjaGVtYS5tYXJrcykucmVkdWNlKGZ1bmN0aW9uIChtYXJrcywgX3JlZjIpIHsKICAgICAgICB2YXIgX3JlZjMgPSBfc2xpY2VkVG9BcnJheShfcmVmMiwgMiksCiAgICAgICAgICAgIG5hbWUgPSBfcmVmM1swXSwKICAgICAgICAgICAgbWFyayA9IF9yZWYzWzFdOwoKICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXJrcyksIHt9LCBfZGVmaW5lUHJvcGVydHkoe30sIG5hbWUsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHZhciBhdHRycyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307CiAgICAgICAgICByZXR1cm4gbWFya0lzQWN0aXZlKF90aGlzNy5zdGF0ZSwgbWFyaywgYXR0cnMpOwogICAgICAgIH0pKTsKICAgICAgfSwge30pOwogICAgICB0aGlzLmFjdGl2ZU1hcmtBdHRycyA9IE9iamVjdC5lbnRyaWVzKHRoaXMuc2NoZW1hLm1hcmtzKS5yZWR1Y2UoZnVuY3Rpb24gKG1hcmtzLCBfcmVmNCkgewogICAgICAgIHZhciBfcmVmNSA9IF9zbGljZWRUb0FycmF5KF9yZWY0LCAyKSwKICAgICAgICAgICAgbmFtZSA9IF9yZWY1WzBdLAogICAgICAgICAgICBtYXJrID0gX3JlZjVbMV07CgogICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcmtzKSwge30sIF9kZWZpbmVQcm9wZXJ0eSh7fSwgbmFtZSwgZ2V0TWFya0F0dHJzKF90aGlzNy5zdGF0ZSwgbWFyaykpKTsKICAgICAgfSwge30pOwogICAgICB0aGlzLmFjdGl2ZU5vZGVzID0gT2JqZWN0LmVudHJpZXModGhpcy5zY2hlbWEubm9kZXMpLnJlZHVjZShmdW5jdGlvbiAobm9kZXMsIF9yZWY2KSB7CiAgICAgICAgdmFyIF9yZWY3ID0gX3NsaWNlZFRvQXJyYXkoX3JlZjYsIDIpLAogICAgICAgICAgICBuYW1lID0gX3JlZjdbMF0sCiAgICAgICAgICAgIG5vZGUgPSBfcmVmN1sxXTsKCiAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbm9kZXMpLCB7fSwgX2RlZmluZVByb3BlcnR5KHt9LCBuYW1lLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICB2YXIgYXR0cnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9OwogICAgICAgICAgcmV0dXJuIG5vZGVJc0FjdGl2ZShfdGhpczcuc3RhdGUsIG5vZGUsIGF0dHJzKTsKICAgICAgICB9KSk7CiAgICAgIH0sIHt9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRNYXJrQXR0cnMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldE1hcmtBdHRycygpIHsKICAgICAgdmFyIHR5cGUgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IG51bGw7CiAgICAgIHJldHVybiB0aGlzLmFjdGl2ZU1hcmtBdHRyc1t0eXBlXTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXROb2RlQXR0cnMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldE5vZGVBdHRycygpIHsKICAgICAgdmFyIHR5cGUgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IG51bGw7CiAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBfZ2V0Tm9kZUF0dHJzKHRoaXMuc3RhdGUsIHRoaXMuc2NoZW1hLm5vZGVzW3R5cGVdKSk7CiAgICB9CiAgfSwgewogICAga2V5OiAicmVnaXN0ZXJQbHVnaW4iLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlZ2lzdGVyUGx1Z2luKCkgewogICAgICB2YXIgcGx1Z2luID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBudWxsOwogICAgICB2YXIgaGFuZGxlUGx1Z2lucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkOwogICAgICB2YXIgcGx1Z2lucyA9IHR5cGVvZiBoYW5kbGVQbHVnaW5zID09PSAnZnVuY3Rpb24nID8gaGFuZGxlUGx1Z2lucyhwbHVnaW4sIHRoaXMuc3RhdGUucGx1Z2lucykgOiBbcGx1Z2luXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuc3RhdGUucGx1Z2lucykpOwogICAgICB2YXIgbmV3U3RhdGUgPSB0aGlzLnN0YXRlLnJlY29uZmlndXJlKHsKICAgICAgICBwbHVnaW5zOiBwbHVnaW5zCiAgICAgIH0pOwogICAgICB0aGlzLnZpZXcudXBkYXRlU3RhdGUobmV3U3RhdGUpOwogICAgfQogIH0sIHsKICAgIGtleTogInVucmVnaXN0ZXJQbHVnaW4iLAogICAgdmFsdWU6IGZ1bmN0aW9uIHVucmVnaXN0ZXJQbHVnaW4oKSB7CiAgICAgIHZhciBuYW1lID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBudWxsOwoKICAgICAgaWYgKCFuYW1lIHx8ICF0aGlzLnZpZXcuZG9jVmlldykgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdmFyIG5ld1N0YXRlID0gdGhpcy5zdGF0ZS5yZWNvbmZpZ3VyZSh7CiAgICAgICAgcGx1Z2luczogdGhpcy5zdGF0ZS5wbHVnaW5zLmZpbHRlcihmdW5jdGlvbiAocGx1Z2luKSB7CiAgICAgICAgICByZXR1cm4gIXBsdWdpbi5rZXkuc3RhcnRzV2l0aCgiIi5jb25jYXQobmFtZSwgIiQiKSk7CiAgICAgICAgfSkKICAgICAgfSk7CiAgICAgIHRoaXMudmlldy51cGRhdGVTdGF0ZShuZXdTdGF0ZSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZGVzdHJveSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZGVzdHJveSgpIHsKICAgICAgaWYgKCF0aGlzLnZpZXcpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMudmlldy5kZXN0cm95KCk7CiAgICB9CiAgfSwgewogICAga2V5OiAiYnVpbHRJbkV4dGVuc2lvbnMiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIGlmICghdGhpcy5vcHRpb25zLnVzZUJ1aWx0SW5FeHRlbnNpb25zKSB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9CgogICAgICByZXR1cm4gW25ldyBEb2MoKSwgbmV3IFRleHQoKSwgbmV3IFBhcmFncmFwaCgpXTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzdGF0ZSIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXMudmlldyA/IHRoaXMudmlldy5zdGF0ZSA6IG51bGw7CiAgICB9CiAgfSwgewogICAga2V5OiAiaXNBY3RpdmUiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiBPYmplY3QuZW50cmllcyhfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRoaXMuYWN0aXZlTWFya3MpLCB0aGlzLmFjdGl2ZU5vZGVzKSkucmVkdWNlKGZ1bmN0aW9uICh0eXBlcywgX3JlZjgpIHsKICAgICAgICB2YXIgX3JlZjkgPSBfc2xpY2VkVG9BcnJheShfcmVmOCwgMiksCiAgICAgICAgICAgIG5hbWUgPSBfcmVmOVswXSwKICAgICAgICAgICAgdmFsdWUgPSBfcmVmOVsxXTsKCiAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgdHlwZXMpLCB7fSwgX2RlZmluZVByb3BlcnR5KHt9LCBuYW1lLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICB2YXIgYXR0cnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9OwogICAgICAgICAgcmV0dXJuIHZhbHVlKGF0dHJzKTsKICAgICAgICB9KSk7CiAgICAgIH0sIHt9KTsKICAgIH0KICB9XSk7CgogIHJldHVybiBFZGl0b3I7Cn0oRW1pdHRlcik7CgpleHBvcnQgeyBFZGl0b3IgYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["/Users/justinwu/Desktop/story_personalization_system/src/js/tiptap/packages/tiptap/src/Editor.js"],"names":["EditorState","Plugin","PluginKey","TextSelection","EditorView","Schema","DOMParser","DOMSerializer","dropCursor","gapCursor","keymap","baseKeymap","inputRules","undoInputRule","markIsActive","nodeIsActive","getMarkAttrs","getNodeAttrs","injectCSS","camelCase","Emitter","ExtensionManager","ComponentView","minMax","Doc","Paragraph","Text","css","Editor","options","defaultOptions","editorProps","editable","autoFocus","extensions","content","topNode","emptyDocument","type","useBuiltInExtensions","disableInputRules","disablePasteRules","parseOptions","onInit","onTransaction","onUpdate","onFocus","onBlur","onPaste","onDrop","events","init","setOptions","focused","selection","from","to","element","document","createElement","createExtensions","nodes","createNodes","marks","createMarks","schema","createSchema","plugins","createPlugins","keymaps","createKeymaps","createInputRules","pasteRules","createPasteRules","view","createView","commands","createCommands","setActiveNodesAndMarks","focus","forEach","name","on","emit","state","updateState","builtInExtensions","excludedExtensions","create","doc","createDocument","rules","Backspace","key","props","attributes","tabindex","handleDOMEvents","event","transaction","tr","setMeta","dispatch","blur","nodeFromJSON","error","console","warn","innerHTML","trim","fromSchema","parse","createState","handlePaste","args","handleDrop","dispatchTransaction","bind","component","setProps","nodeViews","initNodeViews","parent","filter","extension","includes","reduce","nodeView","node","getPos","decorations","editor","newState","apply","getHTML","getJSON","docChanged","getMeta","emitUpdate","position","size","resolveSelection","setSelection","setTimeout","resolvedFrom","resolvedEnd","dom","JSON","stringify","div","fragment","serializeFragment","appendChild","toJSON","replaceSelectionWith","setContent","activeMarks","Object","entries","mark","attrs","activeMarkAttrs","activeNodes","plugin","handlePlugins","reconfigure","docView","startsWith","destroy","types","value"],"mappings":"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","sourcesContent":["import {\n  EditorState,\n  Plugin,\n  PluginKey,\n  TextSelection,\n} from 'prosemirror-state'\nimport { EditorView } from 'prosemirror-view'\nimport { Schema, DOMParser, DOMSerializer } from 'prosemirror-model'\nimport { dropCursor } from 'prosemirror-dropcursor'\nimport { gapCursor } from 'prosemirror-gapcursor'\nimport { keymap } from 'prosemirror-keymap'\nimport { baseKeymap } from 'prosemirror-commands'\nimport { inputRules, undoInputRule } from 'prosemirror-inputrules'\nimport {\n markIsActive,\n nodeIsActive,\n getMarkAttrs,\n getNodeAttrs,\n} from 'tiptap-utils'\nimport {\n  injectCSS,\n  camelCase,\n  Emitter,\n  ExtensionManager,\n  ComponentView,\n  minMax,\n} from './Utils'\nimport { Doc, Paragraph, Text } from './Nodes'\nimport css from './style.css'\n\nexport default class Editor extends Emitter {\n\n  constructor(options = {}) {\n    super()\n\n    this.defaultOptions = {\n      editorProps: {},\n      editable: true,\n      autoFocus: null,\n      extensions: [],\n      content: '',\n      topNode: 'doc',\n      emptyDocument: {\n        type: 'doc',\n        content: [{\n          type: 'paragraph',\n        }],\n      },\n      useBuiltInExtensions: true,\n      disableInputRules: false,\n      disablePasteRules: false,\n      dropCursor: {},\n      parseOptions: {},\n      injectCSS: true,\n      onInit: () => {},\n      onTransaction: () => {},\n      onUpdate: () => {},\n      onFocus: () => {},\n      onBlur: () => {},\n      onPaste: () => {},\n      onDrop: () => {},\n    }\n\n    this.events = [\n      'init',\n      'transaction',\n      'update',\n      'focus',\n      'blur',\n      'paste',\n      'drop',\n    ]\n\n    this.init(options)\n  }\n\n  init(options = {}) {\n    this.setOptions({\n      ...this.defaultOptions,\n      ...options,\n    })\n    this.focused = false\n    this.selection = { from: 0, to: 0 }\n    this.element = document.createElement('div')\n    this.extensions = this.createExtensions()\n    this.nodes = this.createNodes()\n    this.marks = this.createMarks()\n    this.schema = this.createSchema()\n    this.plugins = this.createPlugins()\n    this.keymaps = this.createKeymaps()\n    this.inputRules = this.createInputRules()\n    this.pasteRules = this.createPasteRules()\n    this.view = this.createView()\n    this.commands = this.createCommands()\n    this.setActiveNodesAndMarks()\n\n    if (this.options.injectCSS) {\n      injectCSS(css)\n    }\n\n    if (this.options.autoFocus !== null) {\n      this.focus(this.options.autoFocus)\n    }\n\n    this.events.forEach(name => {\n      this.on(name, this.options[camelCase(`on ${name}`)] || (() => {}))\n    })\n\n    this.emit('init', {\n      view: this.view,\n      state: this.state,\n    })\n\n    // give extension manager access to our view\n    this.extensions.view = this.view\n  }\n\n  setOptions(options) {\n    this.options = {\n      ...this.options,\n      ...options,\n    }\n\n    if (this.view && this.state) {\n      this.view.updateState(this.state)\n    }\n  }\n\n  get builtInExtensions() {\n    if (!this.options.useBuiltInExtensions) {\n      return []\n    }\n\n    return [\n      new Doc(),\n      new Text(),\n      new Paragraph(),\n    ]\n  }\n\n  get state() {\n    return this.view ? this.view.state : null\n  }\n\n  createExtensions() {\n    return new ExtensionManager([\n      ...this.builtInExtensions,\n      ...this.options.extensions,\n    ], this)\n  }\n\n  createPlugins() {\n    return this.extensions.plugins\n  }\n\n  createKeymaps() {\n    return this.extensions.keymaps({\n      schema: this.schema,\n    })\n  }\n\n  createInputRules() {\n    return this.extensions.inputRules({\n      schema: this.schema,\n      excludedExtensions: this.options.disableInputRules,\n    })\n  }\n\n  createPasteRules() {\n    return this.extensions.pasteRules({\n      schema: this.schema,\n      excludedExtensions: this.options.disablePasteRules,\n    })\n  }\n\n  createCommands() {\n    return this.extensions.commands({\n      schema: this.schema,\n      view: this.view,\n    })\n  }\n\n  createNodes() {\n    return this.extensions.nodes\n  }\n\n  createMarks() {\n    return this.extensions.marks\n  }\n\n  createSchema() {\n    return new Schema({\n      topNode: this.options.topNode,\n      nodes: this.nodes,\n      marks: this.marks,\n    })\n  }\n\n  createState() {\n    return EditorState.create({\n      schema: this.schema,\n      doc: this.createDocument(this.options.content),\n      plugins: [\n        ...this.plugins,\n        inputRules({\n          rules: this.inputRules,\n        }),\n        ...this.pasteRules,\n        ...this.keymaps,\n        keymap({\n          Backspace: undoInputRule,\n        }),\n        keymap(baseKeymap),\n        dropCursor(this.options.dropCursor),\n        gapCursor(),\n        new Plugin({\n          key: new PluginKey('editable'),\n          props: {\n            editable: () => this.options.editable,\n          },\n        }),\n        new Plugin({\n          props: {\n            attributes: {\n              tabindex: 0,\n            },\n            handleDOMEvents: {\n              focus: (view, event) => {\n                this.focused = true\n                this.emit('focus', {\n                  event,\n                  state: view.state,\n                  view,\n                })\n\n                const transaction = this.state.tr.setMeta('focused', true)\n                this.view.dispatch(transaction)\n              },\n              blur: (view, event) => {\n                this.focused = false\n                this.emit('blur', {\n                  event,\n                  state: view.state,\n                  view,\n                })\n\n                const transaction = this.state.tr.setMeta('focused', false)\n                this.view.dispatch(transaction)\n              },\n            },\n          },\n        }),\n        new Plugin({\n          props: this.options.editorProps,\n        }),\n      ],\n    })\n  }\n\n  createDocument(content, parseOptions = this.options.parseOptions) {\n    if (content === null) {\n      return this.schema.nodeFromJSON(this.options.emptyDocument)\n    }\n\n    if (typeof content === 'object') {\n      try {\n        return this.schema.nodeFromJSON(content)\n      } catch (error) {\n        console.warn('[tiptap warn]: Invalid content.', 'Passed value:', content, 'Error:', error)\n        return this.schema.nodeFromJSON(this.options.emptyDocument)\n      }\n    }\n\n    if (typeof content === 'string') {\n      const element = document.createElement('div')\n      element.innerHTML = content.trim()\n\n      return DOMParser.fromSchema(this.schema).parse(element, parseOptions)\n    }\n\n    return false\n  }\n\n  createView() {\n    return new EditorView(this.element, {\n      state: this.createState(),\n      handlePaste: (...args) => { this.emit('paste', ...args) },\n      handleDrop: (...args) => { this.emit('drop', ...args) },\n      dispatchTransaction: this.dispatchTransaction.bind(this),\n    })\n  }\n\n  setParentComponent(component = null) {\n    if (!component) {\n      return\n    }\n\n    this.view.setProps({\n      nodeViews: this.initNodeViews({\n        parent: component,\n        extensions: [\n          ...this.builtInExtensions,\n          ...this.options.extensions,\n        ],\n      }),\n    })\n  }\n\n  initNodeViews({ parent, extensions }) {\n    return extensions\n      .filter(extension => ['node', 'mark'].includes(extension.type))\n      .filter(extension => extension.view)\n      .reduce((nodeViews, extension) => {\n        const nodeView = (node, view, getPos, decorations) => {\n          const component = extension.view\n\n          return new ComponentView(component, {\n            editor: this,\n            extension,\n            parent,\n            node,\n            view,\n            getPos,\n            decorations,\n          })\n        }\n\n        return {\n          ...nodeViews,\n          [extension.name]: nodeView,\n        }\n      }, {})\n  }\n\n  dispatchTransaction(transaction) {\n    const newState = this.state.apply(transaction)\n    this.view.updateState(newState)\n    this.selection = {\n      from: this.state.selection.from,\n      to: this.state.selection.to,\n    }\n    this.setActiveNodesAndMarks()\n\n    this.emit('transaction', {\n      getHTML: this.getHTML.bind(this),\n      getJSON: this.getJSON.bind(this),\n      state: this.state,\n      transaction,\n    })\n\n    if (!transaction.docChanged || transaction.getMeta('preventUpdate')) {\n      return\n    }\n\n    this.emitUpdate(transaction)\n  }\n\n  emitUpdate(transaction) {\n    this.emit('update', {\n      getHTML: this.getHTML.bind(this),\n      getJSON: this.getJSON.bind(this),\n      state: this.state,\n      transaction,\n    })\n  }\n\n  resolveSelection(position = null) {\n    if (this.selection && position === null) {\n      return this.selection\n    }\n\n    if (position === 'start' || position === true) {\n      return {\n        from: 0,\n        to: 0,\n      }\n    }\n\n    if (position === 'end') {\n      const { doc } = this.state\n      return {\n        from: doc.content.size,\n        to: doc.content.size,\n      }\n    }\n\n    return {\n      from: position,\n      to: position,\n    }\n  }\n\n  focus(position = null) {\n    if ((this.view.focused && position === null) || position === false) {\n      return\n    }\n\n    const { from, to } = this.resolveSelection(position)\n\n    this.setSelection(from, to)\n    setTimeout(() => this.view.focus(), 10)\n  }\n\n  setSelection(from = 0, to = 0) {\n    const { doc, tr } = this.state\n    const resolvedFrom = minMax(from, 0, doc.content.size)\n    const resolvedEnd = minMax(to, 0, doc.content.size)\n    const selection = TextSelection.create(doc, resolvedFrom, resolvedEnd)\n    const transaction = tr.setSelection(selection)\n\n    this.view.dispatch(transaction)\n  }\n\n  blur() {\n    this.view.dom.blur()\n  }\n\n  getSchemaJSON() {\n    return JSON.parse(JSON.stringify({\n      nodes: this.extensions.nodes,\n      marks: this.extensions.marks,\n    }))\n  }\n\n  getHTML() {\n    const div = document.createElement('div')\n    const fragment = DOMSerializer\n      .fromSchema(this.schema)\n      .serializeFragment(this.state.doc.content)\n\n    div.appendChild(fragment)\n\n    return div.innerHTML\n  }\n\n  getJSON() {\n    return this.state.doc.toJSON()\n  }\n\n  setContent(content = {}, emitUpdate = false, parseOptions) {\n    const { doc, tr } = this.state\n    const document = this.createDocument(content, parseOptions)\n    const selection = TextSelection.create(doc, 0, doc.content.size)\n    const transaction = tr\n      .setSelection(selection)\n      .replaceSelectionWith(document, false)\n      .setMeta('preventUpdate', !emitUpdate)\n\n    this.view.dispatch(transaction)\n  }\n\n  clearContent(emitUpdate = false) {\n    this.setContent(this.options.emptyDocument, emitUpdate)\n  }\n\n  setActiveNodesAndMarks() {\n    this.activeMarks = Object\n      .entries(this.schema.marks)\n      .reduce((marks, [name, mark]) => ({\n        ...marks,\n        [name]: (attrs = {}) => markIsActive(this.state, mark, attrs),\n      }), {})\n\n    this.activeMarkAttrs = Object\n      .entries(this.schema.marks)\n      .reduce((marks, [name, mark]) => ({\n        ...marks,\n        [name]: getMarkAttrs(this.state, mark),\n      }), {})\n\n    this.activeNodes = Object\n      .entries(this.schema.nodes)\n      .reduce((nodes, [name, node]) => ({\n        ...nodes,\n        [name]: (attrs = {}) => nodeIsActive(this.state, node, attrs),\n      }), {})\n  }\n\n  getMarkAttrs(type = null) {\n    return this.activeMarkAttrs[type]\n  }\n\n  getNodeAttrs(type = null) {\n    return {\n      ...getNodeAttrs(this.state, this.schema.nodes[type]),\n    }\n  }\n\n  get isActive() {\n    return Object\n      .entries({\n        ...this.activeMarks,\n        ...this.activeNodes,\n      })\n      .reduce((types, [name, value]) => ({\n        ...types,\n        [name]: (attrs = {}) => value(attrs),\n      }), {})\n  }\n\n  registerPlugin(plugin = null, handlePlugins) {\n    const plugins = typeof handlePlugins === 'function'\n      ? handlePlugins(plugin, this.state.plugins)\n      : [plugin, ...this.state.plugins]\n    const newState = this.state.reconfigure({ plugins })\n    this.view.updateState(newState)\n  }\n\n  unregisterPlugin(name = null) {\n    if (!name || !this.view.docView) {\n      return\n    }\n\n    const newState = this.state.reconfigure({\n      plugins: this.state.plugins.filter(plugin => !plugin.key.startsWith(`${name}$`)),\n    })\n    this.view.updateState(newState)\n  }\n\n  destroy() {\n    if (!this.view) {\n      return\n    }\n\n    this.view.destroy()\n  }\n\n}\n"]}]}