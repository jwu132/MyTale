{"remainingRequest":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/babel-loader/lib/index.js!/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/eslint-loader/index.js??ref--13-0!/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/js/tiptap/packages/tiptap-extensions/src/marks/Underline.js","dependencies":[{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/js/tiptap/packages/tiptap-extensions/src/marks/Underline.js","mtime":1604692362847},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvanVzdGlud3UvRGVza3RvcC9HaXRsYWJfTXlUYWxlL215dGFsZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9Vc2Vycy9qdXN0aW53dS9EZXNrdG9wL0dpdGxhYl9NeVRhbGUvbXl0YWxlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiL1VzZXJzL2p1c3Rpbnd1L0Rlc2t0b3AvR2l0bGFiX015VGFsZS9teXRhbGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvVXNlcnMvanVzdGlud3UvRGVza3RvcC9HaXRsYWJfTXlUYWxlL215dGFsZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlU3VwZXIiOwppbXBvcnQgeyBNYXJrIH0gZnJvbSAndGlwdGFwJzsKaW1wb3J0IHsgdG9nZ2xlTWFyayB9IGZyb20gJ3RpcHRhcC1jb21tYW5kcyc7Cgp2YXIgVW5kZXJsaW5lID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfTWFyaykgewogIF9pbmhlcml0cyhVbmRlcmxpbmUsIF9NYXJrKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihVbmRlcmxpbmUpOwoKICBmdW5jdGlvbiBVbmRlcmxpbmUoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVW5kZXJsaW5lKTsKCiAgICByZXR1cm4gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoVW5kZXJsaW5lLCBbewogICAga2V5OiAia2V5cyIsCiAgICB2YWx1ZTogZnVuY3Rpb24ga2V5cyhfcmVmKSB7CiAgICAgIHZhciB0eXBlID0gX3JlZi50eXBlOwogICAgICByZXR1cm4gewogICAgICAgICdNb2QtdSc6IHRvZ2dsZU1hcmsodHlwZSkKICAgICAgfTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjb21tYW5kcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY29tbWFuZHMoX3JlZjIpIHsKICAgICAgdmFyIHR5cGUgPSBfcmVmMi50eXBlOwogICAgICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiB0b2dnbGVNYXJrKHR5cGUpOwogICAgICB9OwogICAgfQogIH0sIHsKICAgIGtleTogIm5hbWUiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiAndW5kZXJsaW5lJzsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzY2hlbWEiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgcGFyc2VET006IFt7CiAgICAgICAgICB0YWc6ICd1JwogICAgICAgIH0sIHsKICAgICAgICAgIHN0eWxlOiAndGV4dC1kZWNvcmF0aW9uJywKICAgICAgICAgIGdldEF0dHJzOiBmdW5jdGlvbiBnZXRBdHRycyh2YWx1ZSkgewogICAgICAgICAgICByZXR1cm4gdmFsdWUgPT09ICd1bmRlcmxpbmUnOwogICAgICAgICAgfQogICAgICAgIH1dLAogICAgICAgIHRvRE9NOiBmdW5jdGlvbiB0b0RPTSgpIHsKICAgICAgICAgIHJldHVybiBbJ3UnLCAwXTsKICAgICAgICB9CiAgICAgIH07CiAgICB9CiAgfV0pOwoKICByZXR1cm4gVW5kZXJsaW5lOwp9KE1hcmspOwoKZXhwb3J0IHsgVW5kZXJsaW5lIGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/js/tiptap/packages/tiptap-extensions/src/marks/Underline.js"],"names":["Mark","toggleMark","Underline","type","parseDOM","tag","style","getAttrs","value","toDOM"],"mappings":";;;;AAAA,SAASA,IAAT,QAAqB,QAArB;AACA,SAASC,UAAT,QAA2B,iBAA3B;;IAEqBC,S;;;;;;;;;;;;;+BAqBJ;AAAA,UAARC,IAAQ,QAARA,IAAQ;AACb,aAAO;AACL,iBAASF,UAAU,CAACE,IAAD;AADd,OAAP;AAGD;;;oCAEkB;AAAA,UAARA,IAAQ,SAARA,IAAQ;AACjB,aAAO;AAAA,eAAMF,UAAU,CAACE,IAAD,CAAhB;AAAA,OAAP;AACD;;;wBA3BU;AACT,aAAO,WAAP;AACD;;;wBAEY;AACX,aAAO;AACLC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,GAAG,EAAE;AADP,SADQ,EAIR;AACEC,UAAAA,KAAK,EAAE,iBADT;AAEEC,UAAAA,QAAQ,EAAE,kBAAAC,KAAK;AAAA,mBAAIA,KAAK,KAAK,WAAd;AAAA;AAFjB,SAJQ,CADL;AAULC,QAAAA,KAAK,EAAE;AAAA,iBAAM,CAAC,GAAD,EAAM,CAAN,CAAN;AAAA;AAVF,OAAP;AAYD;;;;EAnBoCT,I;;SAAlBE,S","sourcesContent":["import { Mark } from 'tiptap'\nimport { toggleMark } from 'tiptap-commands'\n\nexport default class Underline extends Mark {\n\n  get name() {\n    return 'underline'\n  }\n\n  get schema() {\n    return {\n      parseDOM: [\n        {\n          tag: 'u',\n        },\n        {\n          style: 'text-decoration',\n          getAttrs: value => value === 'underline',\n        },\n      ],\n      toDOM: () => ['u', 0],\n    }\n  }\n\n  keys({ type }) {\n    return {\n      'Mod-u': toggleMark(type),\n    }\n  }\n\n  commands({ type }) {\n    return () => toggleMark(type)\n  }\n\n}\n"]}]}