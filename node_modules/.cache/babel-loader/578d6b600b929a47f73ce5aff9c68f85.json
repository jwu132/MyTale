{"remainingRequest":"/Users/justinwu/Desktop/story_personalization_system/node_modules/babel-loader/lib/index.js!/Users/justinwu/Desktop/story_personalization_system/node_modules/eslint-loader/index.js??ref--13-0!/Users/justinwu/Desktop/story_personalization_system/src/mixins/storyMixin.js","dependencies":[{"path":"/Users/justinwu/Desktop/story_personalization_system/src/mixins/storyMixin.js","mtime":1604699314537},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2p1c3Rpbnd1L0Rlc2t0b3Avc3RvcnlfcGVyc29uYWxpemF0aW9uX3N5c3RlbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCB7IGZpcmVzdG9yZWRiIH0gZnJvbSAnLi4vZmlyZWJhc2VDb25maWcnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIFR5cGVzZW5zZTogcmVxdWlyZSgndHlwZXNlbnNlJyksCiAgICAgIGNsaWVudDogJycsCiAgICAgIHN0b3JpZXM6IFtdCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgY3JlYXRlQ2xpZW50OiBmdW5jdGlvbiBjcmVhdGVDbGllbnQoKSB7CiAgICAgIHRoaXMuY2xpZW50ID0gbmV3IHRoaXMuVHlwZXNlbnNlLkNsaWVudCh7CiAgICAgICAgJ25vZGVzJzogW3sKICAgICAgICAgIC8vJ2hvc3QnOiAnbG9jYWxob3N0JywKICAgICAgICAgIC8vICdob3N0JzogJ3ZjbS0xNTQzMS52bS5kdWtlLmVkdScsCiAgICAgICAgICAvLyAncG9ydCc6ICc4MTA4JywKICAgICAgICAgIC8vICdwcm90b2NvbCc6ICdodHRwcycsCiAgICAgICAgICAnaG9zdCc6ICdhdjJ4cmtpNnk1NGhsM3dicC0xLmExLnR5cGVzZW5zZS5uZXQnLAogICAgICAgICAgJ3BvcnQnOiAnNDQzJywKICAgICAgICAgICdwcm90b2NvbCc6ICdodHRwcycKICAgICAgICB9XSwKICAgICAgICAvLyAnYXBpS2V5JzogJ1lPWUNwRkxqOXU0MTJpaGlnc3RDZXI1WnMyU3R6cHRSJywKICAgICAgICAnYXBpS2V5JzogIkkxUkRucGZCeGRwbGxEY2h0ajdnc2x6c3F3cG1udm1pIgogICAgICB9KTsKICAgIH0sCiAgICBhZGRTdG9yeTogZnVuY3Rpb24gYWRkU3RvcnkobmV3U3RvcnkpIHsKICAgICAgdGhpcy5jcmVhdGVDbGllbnQoKTsKICAgICAgdmFyIHN0b3JlS2V5ID0gZmlyZXN0b3JlZGIuY29sbGVjdGlvbignc3RvcmllcycpLmRvYygpLmlkOwogICAgICBuZXdTdG9yeS5zdG9yeUtleSA9IHN0b3JlS2V5OwogICAgICB0aGlzLmNsaWVudC5jb2xsZWN0aW9ucygnc3RvcmllcycpLmRvY3VtZW50cygpLmNyZWF0ZShuZXdTdG9yeSk7CiAgICAgIGZpcmVzdG9yZWRiLmNvbGxlY3Rpb24oJ3N0b3JpZXMnKS5kb2Moc3RvcmVLZXkpLnNldChuZXdTdG9yeSk7CiAgICAgIHRoaXMuaXNTdWJtaXR0ZWQgPSB0cnVlOwogICAgfSwKICAgIHJlbW92ZVN0b3J5OiBmdW5jdGlvbiByZW1vdmVTdG9yeShJRCwgc3RvcnlLZXkpIHsKICAgICAgaWYgKGNvbmZpcm0oIkFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBkZWxldGUgdGhpcyBzdG9yeT8iKSkgewogICAgICAgIHRoaXMuY3JlYXRlQ2xpZW50KCk7CiAgICAgICAgdGhpcy5jbGllbnQuY29sbGVjdGlvbnMoJ3N0b3JpZXMnKS5kb2N1bWVudHMoSUQpLmRlbGV0ZSgpOwogICAgICAgIGZpcmVzdG9yZWRiLmNvbGxlY3Rpb24oJ3N0b3JpZXMnKS5kb2Moc3RvcnlLZXkpLmRlbGV0ZSgpOwogICAgICAgIHRoaXMuaXNEZWxldGVkID0gdHJ1ZTsKICAgICAgfQogICAgfSwKICAgIHVwZGF0ZVZpZXdzOiBmdW5jdGlvbiB1cGRhdGVWaWV3cyhpZCwgdGl0bGUsIGF1dGhvciwgc3lub3BzaXMsIHRhZ3MsIHZpZXdzLCBkYXRlTm93LCBkYXRlQWRkZWQsIHRleHQsIGNyZWF0b3IsIHN0b3J5S2V5KSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciB1cGRhdGVkVmlld3NTdG9yeTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfdGhpcy5jcmVhdGVDbGllbnQoKTsKCiAgICAgICAgICAgICAgICB1cGRhdGVkVmlld3NTdG9yeSA9IHsKICAgICAgICAgICAgICAgICAgLy9UaGlzIGlzIHRoZSBzdG9yeSB0aGF0IGlzIGFkZGVkIHdoZW4gdGhlIGJ1dHRvbiBpcyBwcmVzc2VkCiAgICAgICAgICAgICAgICAgICJpZCI6IGlkLAogICAgICAgICAgICAgICAgICAidGl0bGUiOiB0aXRsZSwKICAgICAgICAgICAgICAgICAgImF1dGhvciI6IGF1dGhvciwKICAgICAgICAgICAgICAgICAgInN5bm9wc2lzIjogc3lub3BzaXMsCiAgICAgICAgICAgICAgICAgICJ0YWdzIjogdGFncywKICAgICAgICAgICAgICAgICAgInZpZXdzIjogdmlld3MgKyAxLAogICAgICAgICAgICAgICAgICAiZGF0ZU5vdyI6IGRhdGVOb3csCiAgICAgICAgICAgICAgICAgICJkYXRlQWRkZWQiOiBkYXRlQWRkZWQsCiAgICAgICAgICAgICAgICAgICJ0ZXh0IjogdGV4dCwKICAgICAgICAgICAgICAgICAgImNyZWF0b3IiOiBjcmVhdG9yLAogICAgICAgICAgICAgICAgICAic3RvcnlLZXkiOiBzdG9yeUtleQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAyOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuY2xpZW50LmNvbGxlY3Rpb25zKCdzdG9yaWVzJykuZG9jdW1lbnRzKGlkKS5kZWxldGUoKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coIkRlbGV0aW5nIGV4aXN0aW5nIHN0b3J5LiIpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDExOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA4OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgyKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDExOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE0OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLmNsaWVudC5jb2xsZWN0aW9ucygnc3RvcmllcycpLmRvY3VtZW50cygpLmNyZWF0ZSh1cGRhdGVkVmlld3NTdG9yeSkudGhlbihmdW5jdGlvbiAocmV0dXJuRGF0YSkgewogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXR1cm5EYXRhKTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE5OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTY7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MSA9IF9jb250ZXh0WyJjYXRjaCJdKDExKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0LnQxKTsKCiAgICAgICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMiwgOF0sIFsxMSwgMTZdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGdldFN0b3J5OiBmdW5jdGlvbiBnZXRTdG9yeShJRCkgewogICAgICB0aGlzLmNyZWF0ZUNsaWVudCgpOwogICAgICB2YXIgc3RvcnlIb2xkZXIgPSBbXTsKICAgICAgdGhpcy5jbGllbnQuY29sbGVjdGlvbnMoJ3N0b3JpZXMnKS5kb2N1bWVudHMoSUQpLnJldHJpZXZlKCkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIHN0b3J5SG9sZGVyLnB1c2goZGF0YSk7CiAgICAgIH0pOwogICAgICByZXR1cm4gc3RvcnlIb2xkZXI7CiAgICB9LAogICAgcmV0cmlldmVUaXRsZXM6IGZ1bmN0aW9uIHJldHJpZXZlVGl0bGVzKCkgewogICAgICB0aGlzLmNyZWF0ZUNsaWVudCgpOwogICAgICB2YXIgdGl0bGVBcnJheSA9IFtdOwogICAgICB0aGlzLmNsaWVudC5jb2xsZWN0aW9ucygnc3RvcmllcycpLmRvY3VtZW50cygpLmV4cG9ydCgpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICBmb3IgKHZhciBrZXkgaW4gZGF0YSkgewogICAgICAgICAgdGl0bGVBcnJheS5wdXNoKEpTT04ucGFyc2UoZGF0YVtrZXldKS50aXRsZSk7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgcmV0dXJuIHRpdGxlQXJyYXk7CiAgICB9LAogICAgcmV0cmlldmVTdG9yeVRhZ3M6IGZ1bmN0aW9uIHJldHJpZXZlU3RvcnlUYWdzKHN0b3J5VGl0bGUpIHsKICAgICAgdGhpcy5jcmVhdGVDbGllbnQoKTsKICAgICAgdmFyIHRhZ0FycmF5ID0gW107CiAgICAgIHRoaXMuY2xpZW50LmNvbGxlY3Rpb25zKCdzdG9yaWVzJykuZG9jdW1lbnRzKCkuZXhwb3J0KCkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIGZvciAodmFyIGtleSBpbiBkYXRhKSB7CiAgICAgICAgICBpZiAoSlNPTi5wYXJzZShkYXRhW2tleV0pLnRpdGxlID09PSBzdG9yeVRpdGxlKSB7CiAgICAgICAgICAgIGZvciAodmFyIHRhZyBpbiBKU09OLnBhcnNlKGRhdGFba2V5XSkudGFncykgewogICAgICAgICAgICAgIHRhZ0FycmF5LnB1c2goSlNPTi5wYXJzZShkYXRhW2tleV0pLnRhZ3NbdGFnXSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgICByZXR1cm4gdGFnQXJyYXk7CiAgICB9LAogICAgcmV0cmlldmVVc2VyU3RvcmllczogZnVuY3Rpb24gcmV0cmlldmVVc2VyU3Rvcmllcyh1c2VyRW1haWwpIHsKICAgICAgdGhpcy5jcmVhdGVDbGllbnQoKTsKICAgICAgdmFyIHN0b3JpZXNBcnJheSA9IFtdOwogICAgICB0aGlzLmNsaWVudC5jb2xsZWN0aW9ucygnc3RvcmllcycpLmRvY3VtZW50cygpLmV4cG9ydCgpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICBmb3IgKHZhciBrZXkgaW4gZGF0YSkgewogICAgICAgICAgaWYgKEpTT04ucGFyc2UoZGF0YVtrZXldKS5jcmVhdG9yID09PSB1c2VyRW1haWwpIHsKICAgICAgICAgICAgc3Rvcmllc0FycmF5LnB1c2goSlNPTi5wYXJzZShkYXRhW2tleV0pKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgICByZXR1cm4gc3Rvcmllc0FycmF5OwogICAgfSwKICAgIHJlbW92ZVRpdGxlU3BhY2VzOiBmdW5jdGlvbiByZW1vdmVUaXRsZVNwYWNlcyh0aXRsZSkgewogICAgICB2YXIgcmVwbGFjZWQgPSB0aXRsZS5zcGxpdCgiICIpLmpvaW4oIi0iKTsKICAgICAgcmV0dXJuIHJlcGxhY2VkOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/justinwu/Desktop/story_personalization_system/src/mixins/storyMixin.js"],"names":["firestoredb","data","Typesense","require","client","stories","methods","createClient","Client","addStory","newStory","storeKey","collection","doc","id","storyKey","collections","documents","create","set","isSubmitted","removeStory","ID","confirm","delete","isDeleted","updateViews","title","author","synopsis","tags","views","dateNow","dateAdded","text","creator","updatedViewsStory","console","log","then","returnData","getStory","storyHolder","retrieve","push","retrieveTitles","titleArray","export","key","JSON","parse","retrieveStoryTags","storyTitle","tagArray","tag","retrieveUserStories","userEmail","storiesArray","removeTitleSpaces","replaced","split","join"],"mappings":"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","sourcesContent":["import { firestoredb } from '../firebaseConfig'\n\nexport default {\n  data() {\n    return {\n      Typesense: require('typesense'),\n      client: '',\n      stories: [],\n    }\n  },\n  methods: {\n    createClient() {\n      this.client = new this.Typesense.Client({\n        'nodes': [{\n          //'host': 'localhost',\n          // 'host': 'vcm-15431.vm.duke.edu',\n          // 'port': '8108',\n          // 'protocol': 'https',\n          'host': 'av2xrki6y54hl3wbp-1.a1.typesense.net',\n          'port': '443',\n          'protocol': 'https',\n        }],\n        // 'apiKey': 'YOYCpFLj9u412ihigstCer5Zs2StzptR',\n        'apiKey': \"I1RDnpfBxdpllDchtj7gslzsqwpmnvmi\",\n      });\n    },\n    addStory(newStory) {\n      this.createClient();\n      const storeKey = firestoredb.collection('stories').doc().id;\n      newStory.storyKey = storeKey;\n      this.client.collections('stories').documents().create(newStory);\n      firestoredb.collection('stories').doc(storeKey).set(newStory);\n      this.isSubmitted = true;\n    },\n    removeStory(ID, storyKey) {\n      if (confirm(\"Are you sure you want to delete this story?\")) {\n        this.createClient();\n        this.client.collections('stories').documents(ID).delete();\n        firestoredb.collection('stories').doc(storyKey).delete();\n        this.isDeleted = true;\n      }\n    },\n    async updateViews(id, title, author, synopsis, tags, views, dateNow, dateAdded, text, creator, storyKey) {\n\n      this.createClient()\n      const updatedViewsStory = { //This is the story that is added when the button is pressed\n        \"id\": id,\n        \"title\": title,\n        \"author\": author,\n        \"synopsis\": synopsis,\n        \"tags\": tags,\n        \"views\": views + 1,\n        \"dateNow\": dateNow,\n        \"dateAdded\": dateAdded,\n        \"text\": text,\n        \"creator\": creator,\n        \"storyKey\": storyKey,\n      }\n\n      try {\n        await this.client.collections('stories').documents(id).delete();\n        console.log(\"Deleting existing story.\");\n      } catch (error) {\n        return;\n      }\n\n      try {\n        await this.client.collections('stories').documents().create(updatedViewsStory).then(function (returnData) {\n          console.log(returnData)\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    getStory(ID) {\n      this.createClient();\n      var storyHolder = [];\n      this.client.collections('stories').documents(ID).retrieve().then(function (data) {\n        storyHolder.push(data);\n      });\n      return storyHolder\n    },\n    retrieveTitles() {\n      this.createClient();\n      var titleArray = [];\n      this.client.collections('stories').documents().export().then(function (data) {\n        for (let key in data) {\n          titleArray.push(JSON.parse(data[key]).title)\n        }\n      });\n      return titleArray;\n    },\n    retrieveStoryTags(storyTitle) {\n      this.createClient();\n      var tagArray = [];\n      this.client.collections('stories').documents().export().then(function (data) {\n        for (let key in data) {\n          if (JSON.parse(data[key]).title === storyTitle) {\n            for (let tag in JSON.parse(data[key]).tags) {\n              tagArray.push(JSON.parse(data[key]).tags[tag]);\n            }\n          }\n        }\n      });\n      return tagArray;\n    },\n    retrieveUserStories(userEmail) {\n      this.createClient();\n      var storiesArray = [];\n      this.client.collections('stories').documents().export().then(function (data) {\n        for (let key in data) {\n          if (JSON.parse(data[key]).creator === userEmail) {\n            storiesArray.push(JSON.parse(data[key]))\n          }\n        }\n      });\n      return storiesArray;\n    },\n    removeTitleSpaces(title) {\n      var replaced = title.split(\" \").join(\"-\");\n      return replaced\n    }\n  }\n}\n"]}]}