{"remainingRequest":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/babel-loader/lib/index.js!/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/eslint-loader/index.js??ref--13-0!/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/js/tiptap/packages/tiptap-extensions/src/nodes/ListItem.js","dependencies":[{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/js/tiptap/packages/tiptap-extensions/src/nodes/ListItem.js","mtime":1604692362848},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvanVzdGlud3UvRGVza3RvcC9HaXRsYWJfTXlUYWxlL215dGFsZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9Vc2Vycy9qdXN0aW53dS9EZXNrdG9wL0dpdGxhYl9NeVRhbGUvbXl0YWxlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiL1VzZXJzL2p1c3Rpbnd1L0Rlc2t0b3AvR2l0bGFiX015VGFsZS9teXRhbGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvVXNlcnMvanVzdGlud3UvRGVza3RvcC9HaXRsYWJfTXlUYWxlL215dGFsZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlU3VwZXIiOwppbXBvcnQgeyBOb2RlIH0gZnJvbSAndGlwdGFwJzsKaW1wb3J0IHsgc3BsaXRMaXN0SXRlbSwgbGlmdExpc3RJdGVtLCBzaW5rTGlzdEl0ZW0gfSBmcm9tICd0aXB0YXAtY29tbWFuZHMnOwoKdmFyIExpc3RJdGVtID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfTm9kZSkgewogIF9pbmhlcml0cyhMaXN0SXRlbSwgX05vZGUpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKExpc3RJdGVtKTsKCiAgZnVuY3Rpb24gTGlzdEl0ZW0oKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTGlzdEl0ZW0pOwoKICAgIHJldHVybiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9CgogIF9jcmVhdGVDbGFzcyhMaXN0SXRlbSwgW3sKICAgIGtleTogImtleXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGtleXMoX3JlZikgewogICAgICB2YXIgdHlwZSA9IF9yZWYudHlwZTsKICAgICAgcmV0dXJuIHsKICAgICAgICBFbnRlcjogc3BsaXRMaXN0SXRlbSh0eXBlKSwKICAgICAgICBUYWI6IHNpbmtMaXN0SXRlbSh0eXBlKSwKICAgICAgICAnU2hpZnQtVGFiJzogbGlmdExpc3RJdGVtKHR5cGUpCiAgICAgIH07CiAgICB9CiAgfSwgewogICAga2V5OiAibmFtZSIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuICdsaXN0X2l0ZW0nOwogICAgfQogIH0sIHsKICAgIGtleTogInNjaGVtYSIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBjb250ZW50OiAncGFyYWdyYXBoIGJsb2NrKicsCiAgICAgICAgZGVmaW5pbmc6IHRydWUsCiAgICAgICAgZHJhZ2dhYmxlOiBmYWxzZSwKICAgICAgICBwYXJzZURPTTogW3sKICAgICAgICAgIHRhZzogJ2xpJwogICAgICAgIH1dLAogICAgICAgIHRvRE9NOiBmdW5jdGlvbiB0b0RPTSgpIHsKICAgICAgICAgIHJldHVybiBbJ2xpJywgMF07CiAgICAgICAgfQogICAgICB9OwogICAgfQogIH1dKTsKCiAgcmV0dXJuIExpc3RJdGVtOwp9KE5vZGUpOwoKZXhwb3J0IHsgTGlzdEl0ZW0gYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/js/tiptap/packages/tiptap-extensions/src/nodes/ListItem.js"],"names":["Node","splitListItem","liftListItem","sinkListItem","ListItem","type","Enter","Tab","content","defining","draggable","parseDOM","tag","toDOM"],"mappings":";;;;AAAA,SAASA,IAAT,QAAqB,QAArB;AACA,SAASC,aAAT,EAAwBC,YAAxB,EAAsCC,YAAtC,QAA0D,iBAA1D;;IAEqBC,Q;;;;;;;;;;;;;+BAkBJ;AAAA,UAARC,IAAQ,QAARA,IAAQ;AACb,aAAO;AACLC,QAAAA,KAAK,EAAEL,aAAa,CAACI,IAAD,CADf;AAELE,QAAAA,GAAG,EAAEJ,YAAY,CAACE,IAAD,CAFZ;AAGL,qBAAaH,YAAY,CAACG,IAAD;AAHpB,OAAP;AAKD;;;wBAtBU;AACT,aAAO,WAAP;AACD;;;wBAEY;AACX,aAAO;AACLG,QAAAA,OAAO,EAAE,kBADJ;AAELC,QAAAA,QAAQ,EAAE,IAFL;AAGLC,QAAAA,SAAS,EAAE,KAHN;AAILC,QAAAA,QAAQ,EAAE,CACR;AAAEC,UAAAA,GAAG,EAAE;AAAP,SADQ,CAJL;AAOLC,QAAAA,KAAK,EAAE;AAAA,iBAAM,CAAC,IAAD,EAAO,CAAP,CAAN;AAAA;AAPF,OAAP;AASD;;;;EAhBmCb,I;;SAAjBI,Q","sourcesContent":["import { Node } from 'tiptap'\nimport { splitListItem, liftListItem, sinkListItem } from 'tiptap-commands'\n\nexport default class ListItem extends Node {\n\n  get name() {\n    return 'list_item'\n  }\n\n  get schema() {\n    return {\n      content: 'paragraph block*',\n      defining: true,\n      draggable: false,\n      parseDOM: [\n        { tag: 'li' },\n      ],\n      toDOM: () => ['li', 0],\n    }\n  }\n\n  keys({ type }) {\n    return {\n      Enter: splitListItem(type),\n      Tab: sinkListItem(type),\n      'Shift-Tab': liftListItem(type),\n    }\n  }\n\n}\n"]}]}