{"remainingRequest":"/Users/justinwu/Desktop/story_personalization_system/node_modules/babel-loader/lib/index.js!/Users/justinwu/Desktop/story_personalization_system/node_modules/eslint-loader/index.js??ref--13-0!/Users/justinwu/Desktop/story_personalization_system/src/js/tiptap/packages/tiptap-extensions/src/nodes/OrderedList.js","dependencies":[{"path":"/Users/justinwu/Desktop/story_personalization_system/src/js/tiptap/packages/tiptap-extensions/src/nodes/OrderedList.js","mtime":1604692362848},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvanVzdGlud3UvRGVza3RvcC9zdG9yeV9wZXJzb25hbGl6YXRpb25fc3lzdGVtL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL1VzZXJzL2p1c3Rpbnd1L0Rlc2t0b3Avc3RvcnlfcGVyc29uYWxpemF0aW9uX3N5c3RlbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIi9Vc2Vycy9qdXN0aW53dS9EZXNrdG9wL3N0b3J5X3BlcnNvbmFsaXphdGlvbl9zeXN0ZW0vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvVXNlcnMvanVzdGlud3UvRGVza3RvcC9zdG9yeV9wZXJzb25hbGl6YXRpb25fc3lzdGVtL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlciI7CmltcG9ydCB7IE5vZGUgfSBmcm9tICd0aXB0YXAnOwppbXBvcnQgeyB3cmFwcGluZ0lucHV0UnVsZSwgdG9nZ2xlTGlzdCB9IGZyb20gJ3RpcHRhcC1jb21tYW5kcyc7Cgp2YXIgT3JkZXJlZExpc3QgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9Ob2RlKSB7CiAgX2luaGVyaXRzKE9yZGVyZWRMaXN0LCBfTm9kZSk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoT3JkZXJlZExpc3QpOwoKICBmdW5jdGlvbiBPcmRlcmVkTGlzdCgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBPcmRlcmVkTGlzdCk7CgogICAgcmV0dXJuIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKE9yZGVyZWRMaXN0LCBbewogICAga2V5OiAiY29tbWFuZHMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNvbW1hbmRzKF9yZWYpIHsKICAgICAgdmFyIHR5cGUgPSBfcmVmLnR5cGUsCiAgICAgICAgICBzY2hlbWEgPSBfcmVmLnNjaGVtYTsKICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gdG9nZ2xlTGlzdCh0eXBlLCBzY2hlbWEubm9kZXMubGlzdF9pdGVtKTsKICAgICAgfTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJrZXlzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBrZXlzKF9yZWYyKSB7CiAgICAgIHZhciB0eXBlID0gX3JlZjIudHlwZSwKICAgICAgICAgIHNjaGVtYSA9IF9yZWYyLnNjaGVtYTsKICAgICAgcmV0dXJuIHsKICAgICAgICAnU2hpZnQtQ3RybC05JzogdG9nZ2xlTGlzdCh0eXBlLCBzY2hlbWEubm9kZXMubGlzdF9pdGVtKQogICAgICB9OwogICAgfQogIH0sIHsKICAgIGtleTogImlucHV0UnVsZXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGlucHV0UnVsZXMoX3JlZjMpIHsKICAgICAgdmFyIHR5cGUgPSBfcmVmMy50eXBlOwogICAgICByZXR1cm4gW3dyYXBwaW5nSW5wdXRSdWxlKC9eKFxkKylcLlxzJC8sIHR5cGUsIGZ1bmN0aW9uIChtYXRjaCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBvcmRlcjogK21hdGNoWzFdCiAgICAgICAgfTsKICAgICAgfSwgZnVuY3Rpb24gKG1hdGNoLCBub2RlKSB7CiAgICAgICAgcmV0dXJuIG5vZGUuY2hpbGRDb3VudCArIG5vZGUuYXR0cnMub3JkZXIgPT09ICttYXRjaFsxXTsKICAgICAgfSldOwogICAgfQogIH0sIHsKICAgIGtleTogIm5hbWUiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiAnb3JkZXJlZF9saXN0JzsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzY2hlbWEiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgYXR0cnM6IHsKICAgICAgICAgIG9yZGVyOiB7CiAgICAgICAgICAgIGRlZmF1bHQ6IDEKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGNvbnRlbnQ6ICdsaXN0X2l0ZW0rJywKICAgICAgICBncm91cDogJ2Jsb2NrJywKICAgICAgICBwYXJzZURPTTogW3sKICAgICAgICAgIHRhZzogJ29sJywKICAgICAgICAgIGdldEF0dHJzOiBmdW5jdGlvbiBnZXRBdHRycyhkb20pIHsKICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICBvcmRlcjogZG9tLmhhc0F0dHJpYnV0ZSgnc3RhcnQnKSA/ICtkb20uZ2V0QXR0cmlidXRlKCdzdGFydCcpIDogMQogICAgICAgICAgICB9OwogICAgICAgICAgfQogICAgICAgIH1dLAogICAgICAgIHRvRE9NOiBmdW5jdGlvbiB0b0RPTShub2RlKSB7CiAgICAgICAgICByZXR1cm4gbm9kZS5hdHRycy5vcmRlciA9PT0gMSA/IFsnb2wnLCAwXSA6IFsnb2wnLCB7CiAgICAgICAgICAgIHN0YXJ0OiBub2RlLmF0dHJzLm9yZGVyCiAgICAgICAgICB9LCAwXTsKICAgICAgICB9CiAgICAgIH07CiAgICB9CiAgfV0pOwoKICByZXR1cm4gT3JkZXJlZExpc3Q7Cn0oTm9kZSk7CgpleHBvcnQgeyBPcmRlcmVkTGlzdCBhcyBkZWZhdWx0IH07"},{"version":3,"sources":["/Users/justinwu/Desktop/story_personalization_system/src/js/tiptap/packages/tiptap-extensions/src/nodes/OrderedList.js"],"names":["Node","wrappingInputRule","toggleList","OrderedList","type","schema","nodes","list_item","match","order","node","childCount","attrs","default","content","group","parseDOM","tag","getAttrs","dom","hasAttribute","getAttribute","toDOM","start"],"mappings":";;;;AAAA,SAASA,IAAT,QAAqB,QAArB;AACA,SAASC,iBAAT,EAA4BC,UAA5B,QAA8C,iBAA9C;;IAEqBC,W;;;;;;;;;;;;;mCA2BQ;AAAA,UAAhBC,IAAgB,QAAhBA,IAAgB;AAAA,UAAVC,MAAU,QAAVA,MAAU;AACzB,aAAO;AAAA,eAAMH,UAAU,CAACE,IAAD,EAAOC,MAAM,CAACC,KAAP,CAAaC,SAApB,CAAhB;AAAA,OAAP;AACD;;;gCAEsB;AAAA,UAAhBH,IAAgB,SAAhBA,IAAgB;AAAA,UAAVC,MAAU,SAAVA,MAAU;AACrB,aAAO;AACL,wBAAgBH,UAAU,CAACE,IAAD,EAAOC,MAAM,CAACC,KAAP,CAAaC,SAApB;AADrB,OAAP;AAGD;;;sCAEoB;AAAA,UAARH,IAAQ,SAARA,IAAQ;AACnB,aAAO,CACLH,iBAAiB,CACf,aADe,EAEfG,IAFe,EAGf,UAAAI,KAAK;AAAA,eAAK;AAAEC,UAAAA,KAAK,EAAE,CAACD,KAAK,CAAC,CAAD;AAAf,SAAL;AAAA,OAHU,EAIf,UAACA,KAAD,EAAQE,IAAR;AAAA,eAAiBA,IAAI,CAACC,UAAL,GAAkBD,IAAI,CAACE,KAAL,CAAWH,KAA7B,KAAuC,CAACD,KAAK,CAAC,CAAD,CAA9D;AAAA,OAJe,CADZ,CAAP;AAQD;;;wBA5CU;AACT,aAAO,cAAP;AACD;;;wBAEY;AACX,aAAO;AACLI,QAAAA,KAAK,EAAE;AACLH,UAAAA,KAAK,EAAE;AACLI,YAAAA,OAAO,EAAE;AADJ;AADF,SADF;AAMLC,QAAAA,OAAO,EAAE,YANJ;AAOLC,QAAAA,KAAK,EAAE,OAPF;AAQLC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,GAAG,EAAE,IADP;AAEEC,UAAAA,QAAQ,EAAE,kBAAAC,GAAG;AAAA,mBAAK;AAChBV,cAAAA,KAAK,EAAEU,GAAG,CAACC,YAAJ,CAAiB,OAAjB,IAA4B,CAACD,GAAG,CAACE,YAAJ,CAAiB,OAAjB,CAA7B,GAAyD;AADhD,aAAL;AAAA;AAFf,SADQ,CARL;AAgBLC,QAAAA,KAAK,EAAE,eAAAZ,IAAI;AAAA,iBAAKA,IAAI,CAACE,KAAL,CAAWH,KAAX,KAAqB,CAArB,GAAyB,CAAC,IAAD,EAAO,CAAP,CAAzB,GAAqC,CAAC,IAAD,EAAO;AAAEc,YAAAA,KAAK,EAAEb,IAAI,CAACE,KAAL,CAAWH;AAApB,WAAP,EAAoC,CAApC,CAA1C;AAAA;AAhBN,OAAP;AAkBD;;;;EAzBsCT,I;;SAApBG,W","sourcesContent":["import { Node } from 'tiptap'\nimport { wrappingInputRule, toggleList } from 'tiptap-commands'\n\nexport default class OrderedList extends Node {\n\n  get name() {\n    return 'ordered_list'\n  }\n\n  get schema() {\n    return {\n      attrs: {\n        order: {\n          default: 1,\n        },\n      },\n      content: 'list_item+',\n      group: 'block',\n      parseDOM: [\n        {\n          tag: 'ol',\n          getAttrs: dom => ({\n            order: dom.hasAttribute('start') ? +dom.getAttribute('start') : 1,\n          }),\n        },\n      ],\n      toDOM: node => (node.attrs.order === 1 ? ['ol', 0] : ['ol', { start: node.attrs.order }, 0]),\n    }\n  }\n\n  commands({ type, schema }) {\n    return () => toggleList(type, schema.nodes.list_item)\n  }\n\n  keys({ type, schema }) {\n    return {\n      'Shift-Ctrl-9': toggleList(type, schema.nodes.list_item),\n    }\n  }\n\n  inputRules({ type }) {\n    return [\n      wrappingInputRule(\n        /^(\\d+)\\.\\s$/,\n        type,\n        match => ({ order: +match[1] }),\n        (match, node) => node.childCount + node.attrs.order === +match[1],\n      ),\n    ]\n  }\n\n}\n"]}]}