{"remainingRequest":"/Users/justinwu/Desktop/story_personalization_system/node_modules/babel-loader/lib/index.js!/Users/justinwu/Desktop/story_personalization_system/node_modules/eslint-loader/index.js??ref--13-0!/Users/justinwu/Desktop/story_personalization_system/src/js/extwee_utils/HTMLParser.js","dependencies":[{"path":"/Users/justinwu/Desktop/story_personalization_system/src/js/extwee_utils/HTMLParser.js","mtime":1604692362842},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlciIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0Iik7Cgp2YXIgX2NsYXNzQ2FsbENoZWNrID0gcmVxdWlyZSgiL1VzZXJzL2p1c3Rpbnd1L0Rlc2t0b3Avc3RvcnlfcGVyc29uYWxpemF0aW9uX3N5c3RlbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayIpOwoKdmFyIF9jcmVhdGVDbGFzcyA9IHJlcXVpcmUoIi9Vc2Vycy9qdXN0aW53dS9EZXNrdG9wL3N0b3J5X3BlcnNvbmFsaXphdGlvbl9zeXN0ZW0vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiKTsKCi8qKgogKiBAZXh0ZXJuYWwgSFRNTAogKiBAc2VlIHtAbGluayBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVE1MfEhUTUx9CiAqLwp2YXIgX3JlcXVpcmUgPSByZXF1aXJlKCdub2RlLWh0bWwtcGFyc2VyJyksCiAgICBwYXJzZSA9IF9yZXF1aXJlLnBhcnNlOwoKdmFyIEh0bWxQYXJzZXIgPSBwYXJzZTsKCnZhciBTdG9yeSA9IHJlcXVpcmUoJy4vU3RvcnkuanMnKTsKCnZhciBQYXNzYWdlID0gcmVxdWlyZSgnLi9QYXNzYWdlLmpzJyk7Ci8qKgogKiBAY2xhc3MgSFRNTFBhcnNlcgogKiBAbW9kdWxlIEhUTUxQYXJzZXIKICovCgoKdmFyIEhUTUxQYXJzZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICJ1c2Ugc3RyaWN0IjsKCiAgLyoqCiAgICogQGZ1bmN0aW9uIEhUTUxQYXJzZXIKICAgKiBAY2xhc3MKICAgKiBAcGFyYW0ge0hUTUx9IGNvbnRlbnQgLSBIVE1MIHRvIHBhcnNlCiAgICovCiAgZnVuY3Rpb24gSFRNTFBhcnNlcihjb250ZW50KSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSFRNTFBhcnNlcik7CgogICAgdGhpcy5zdG9yeSA9IG51bGw7CiAgICB0aGlzLnBhcnNlKGNvbnRlbnQpOwogIH0KICAvKioKICAgKiBQYXJzZSBIVE1MIHRleHQgaW50byBhIEpTIERPTS1saWtlIG9iamVjdAogICAqCiAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnRlbnQgLSBDb250ZW50IHRvIHBhcnNlCiAgICogQHJldHVybnMge3ZvaWR9CiAgICovCgoKICBfY3JlYXRlQ2xhc3MoSFRNTFBhcnNlciwgW3sKICAgIGtleTogInBhcnNlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBwYXJzZShjb250ZW50KSB7CiAgICAgIC8vIFNlbmQgdG8gbm9kZS1odG1sLXBhcnNlcgogICAgICAvLyBFbmFibGUgZ2V0dGluZyB0aGUgY29udGVudCBvZiAnc2NyaXB0JywgJ3N0eWxlJywgYW5kICdwcmUnIGVsZW1lbnRzCiAgICAgIC8vIEdldCBiYWNrIGEgRE9NCiAgICAgIHZhciBkb20gPSBuZXcgSHRtbFBhcnNlcihjb250ZW50LCB7CiAgICAgICAgbG93ZXJDYXNlVGFnTmFtZTogZmFsc2UsCiAgICAgICAgc2NyaXB0OiB0cnVlLAogICAgICAgIHN0eWxlOiB0cnVlLAogICAgICAgIHByZTogdHJ1ZQogICAgICB9KTsgLy8gUHVsbCBvdXQgdGhlIHR3LXN0b3J5ZGF0YSBlbGVtZW50CgogICAgICB2YXIgc3RvcnlEYXRhID0gZG9tLnF1ZXJ5U2VsZWN0b3IoJ3R3LXN0b3J5ZGF0YScpOwoKICAgICAgaWYgKHN0b3J5RGF0YSAhPSBudWxsKSB7CiAgICAgICAgdGhpcy5zdG9yeSA9IG5ldyBTdG9yeSgpOwogICAgICAgIHRoaXMuc3RvcnkubmFtZSA9IHN0b3J5RGF0YS5hdHRyaWJ1dGVzLm5hbWU7CiAgICAgICAgdGhpcy5zdG9yeS5jcmVhdG9yID0gc3RvcnlEYXRhLmF0dHJpYnV0ZXMuY3JlYXRvcjsKICAgICAgICB0aGlzLnN0b3J5LmNyZWF0b3JWZXJzaW9uID0gc3RvcnlEYXRhLmF0dHJpYnV0ZXNbJ2NyZWF0b3ItdmVyc2lvbiddOwogICAgICAgIHRoaXMuc3RvcnkubWV0YWRhdGEgPSB7fTsKICAgICAgICB0aGlzLnN0b3J5Lm1ldGFkYXRhLmlmaWQgPSBzdG9yeURhdGEuYXR0cmlidXRlcy5pZmlkOwogICAgICAgIHRoaXMuc3RvcnkubWV0YWRhdGEuZm9ybWF0ID0gc3RvcnlEYXRhLmF0dHJpYnV0ZXMuZm9ybWF0OwogICAgICAgIHRoaXMuc3RvcnkubWV0YWRhdGEuZm9ybWF0VmVyc2lvbiA9IHN0b3J5RGF0YS5hdHRyaWJ1dGVzWydmb3JtYXQtdmVyc2lvbiddOwogICAgICAgIHRoaXMuc3RvcnkubWV0YWRhdGEuem9vbSA9IHN0b3J5RGF0YS5hdHRyaWJ1dGVzLnpvb207CiAgICAgICAgdGhpcy5zdG9yeS5tZXRhZGF0YS5zdGFydCA9IHN0b3J5RGF0YS5hdHRyaWJ1dGVzLnN0YXJ0bm9kZTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Vycm9yOiBOb3QgYSBUd2luZSAyLXN0eWxlIGZpbGUhJyk7CiAgICAgIH0gLy8gUHVsbCBvdXQgdGhlIHR3LXBhc3NhZ2VkYXRhIGVsZW1lbnRzCgoKICAgICAgdmFyIHN0b3J5UGFzc2FnZXMgPSBkb20ucXVlcnlTZWxlY3RvckFsbCgndHctcGFzc2FnZWRhdGEnKTsgLy8gQ3JlYXRlIGFuIGVtcHR5IGFycmF5CgogICAgICB0aGlzLnN0b3J5LnBhc3NhZ2VzID0gW107IC8vIFNldCBkZWZhdWx0IHBpZAoKICAgICAgdmFyIHBpZCA9IDE7IC8vIEFkZCBTdG9yeVRpdGxlCgogICAgICB0aGlzLnN0b3J5LnBhc3NhZ2VzLnB1c2gobmV3IFBhc3NhZ2UoJ1N0b3J5VGl0bGUnLCBbXSwge30sIHRoaXMuc3RvcnkubmFtZSwgcGlkKSk7IC8vIEluY3JlYXNlIFBJRCBieSBvbmUgYmVmb3JlIHBhcnNpbmcgYW55IG90aGVyIHBhc3NhZ2VzCgogICAgICBwaWQrKzsgLy8gTW92ZSB0aHJvdWdoIHRoZSBwYXNzYWdlcwoKICAgICAgZm9yICh2YXIgcGFzc2FnZSBpbiBzdG9yeVBhc3NhZ2VzKSB7CiAgICAgICAgLy8gR2V0IHRoZSBwYXNzYWdlIGF0dHJpYnV0ZXMKICAgICAgICB2YXIgYXR0ciA9IHN0b3J5UGFzc2FnZXNbcGFzc2FnZV0uYXR0cmlidXRlczsgLy8gR2V0IHRoZSBwYXNzYWdlIHRleHQKCiAgICAgICAgdmFyIHRleHQgPSBzdG9yeVBhc3NhZ2VzW3Bhc3NhZ2VdLnJhd1RleHQ7IC8vIFNhdmUgcG9zaXRpb24KCiAgICAgICAgdmFyIHBvc2l0aW9uID0gYXR0ci5wb3NpdGlvbjsgLy8gU2F2ZSBzaXplCgogICAgICAgIHZhciBzaXplID0gYXR0ci5zaXplOyAvLyBFc2NhcGUgdGhlIG5hbWUKCiAgICAgICAgdmFyIG5hbWUgPSB0aGlzLl9lc2NhcGVNZXRhY2hhcmFjdGVycyhhdHRyLm5hbWUpOyAvLyBDcmVhdGUgZW1wdHkgdGFncwoKCiAgICAgICAgdmFyIHRhZ3MgPSAnJzsgLy8gRXNjYXBlIGFueSB0YWdzCiAgICAgICAgLy8gKEF0dHJpYnV0ZXMgY2FuLCB0aGVtc2VsdmVzLCBiZSBlbXRweSBzdHJpbmdzLikKCiAgICAgICAgaWYgKGF0dHIudGFncy5sZW5ndGggPiAwICYmIGF0dHIudGFncyAhPT0gJyIiJykgewogICAgICAgICAgdGFncyA9IHRoaXMuX2VzY2FwZU1ldGFjaGFyYWN0ZXJzKGF0dHIudGFncyk7CiAgICAgICAgfSAvLyBTcGxpdCBieSBzcGFjZXMKCgogICAgICAgIHRhZ3MgPSB0YWdzLnNwbGl0KCcgJyk7IC8vIFJlbW92ZSBhbnkgZW1wdHkgc3RyaW5ncwoKICAgICAgICB0YWdzID0gdGFncy5maWx0ZXIoZnVuY3Rpb24gKHRhZykgewogICAgICAgICAgcmV0dXJuIHRhZyAhPT0gJyc7CiAgICAgICAgfSk7IC8vIEFkZCBhIG5ldyBQYXNzYWdlIGludG8gYW4gYXJyYXkKCiAgICAgICAgdGhpcy5zdG9yeS5wYXNzYWdlcy5wdXNoKG5ldyBQYXNzYWdlKG5hbWUsIHRhZ3MsIHsKICAgICAgICAgIHBvc2l0aW9uOiBwb3NpdGlvbiwKICAgICAgICAgIHNpemU6IHNpemUKICAgICAgICB9LCB0ZXh0LCBwaWQpKTsKICAgICAgICBwaWQrKzsKICAgICAgfSAvLyBMb29rIGZvciB0aGUgc3R5bGUgZWxlbWVudAoKCiAgICAgIHZhciBzdHlsZUVsZW1lbnQgPSBkb20ucXVlcnlTZWxlY3RvcignI3R3aW5lLXVzZXItc3R5bGVzaGVldCcpOyAvLyBDaGVjayBpZiB0aGVyZSBpcyBhbnkgY29udGVudC4KICAgICAgLy8gSWYgbm90LCB3ZSB3b24ndCBhZGQgZW1wdHkgcGFzc2FnZXMKCiAgICAgIGlmIChzdHlsZUVsZW1lbnQucmF3VGV4dC5sZW5ndGggPiAwKSB7CiAgICAgICAgLy8gQWRkIFVzZXJTdHlsZXNoZWV0CiAgICAgICAgdGhpcy5zdG9yeS5wYXNzYWdlcy5wdXNoKG5ldyBQYXNzYWdlKCdVc2VyU3R5bGVzaGVldCcsIFsnc3R5bGVzaGVldCddLCB7fSwgc3R5bGVFbGVtZW50LnJhd1RleHQpKTsKICAgICAgfSAvLyBMb29rIGZvciB0aGUgc2NyaXB0IGVsZW1lbnQKCgogICAgICB2YXIgc2NyaXB0RWxlbWVudCA9IGRvbS5xdWVyeVNlbGVjdG9yKCcjdHdpbmUtdXNlci1zY3JpcHQnKTsgLy8gQ2hlY2sgaWYgdGhlcmUgaXMgYW55IGNvbnRlbnQuCiAgICAgIC8vIElmIG5vdCwgd2Ugd29uJ3QgYWRkIGVtcHR5IHBhc3NhZ2VzCgogICAgICBpZiAoc2NyaXB0RWxlbWVudC5yYXdUZXh0Lmxlbmd0aCA+IDApIHsKICAgICAgICAvLyBBZGQgVXNlclNjcmlwdAogICAgICAgIHRoaXMuc3RvcnkucGFzc2FnZXMucHVzaChuZXcgUGFzc2FnZSgnVXNlclNjcmlwdCcsIFsnc2NyaXB0J10sIHt9LCBzY3JpcHRFbGVtZW50LnJhd1RleHQpKTsKICAgICAgfSAvLyBOb3cgdGhhdCBhbGwgcGFzc2FnZXMgaGF2ZSBiZWVuIGhhbmRsZWQsCiAgICAgIC8vICBjaGFuZ2UgdGhlIHN0YXJ0IG5hbWUKCgogICAgICB0aGlzLnN0b3J5Lm1ldGFkYXRhLnN0YXJ0ID0gdGhpcy5zdG9yeS5nZXRTdGFydGluZ1Bhc3NhZ2UoKTsgLy8gQWRkIFN0b3J5RGF0YQoKICAgICAgdGhpcy5zdG9yeS5wYXNzYWdlcy5wdXNoKG5ldyBQYXNzYWdlKCdTdG9yeURhdGEnLCBbXSwge30sIEpTT04uc3RyaW5naWZ5KHRoaXMuc3RvcnkubWV0YWRhdGEsIG51bGwsIDQpKSk7CiAgICB9CiAgICAvKioKICAgICAqIFRyeSB0byBlc2NhcGUgbWV0YS1jaGFyYWN0ZXJzCiAgICAgKgogICAgICogQHBhcmFtIHtzdHJpbmd9IHJlc3VsdCAtIFRleHQgdG8gcGFyc2UKICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IEVzY2FwZWQgY2hhcmFjdGVycwogICAgICovCgogIH0sIHsKICAgIGtleTogIl9lc2NhcGVNZXRhY2hhcmFjdGVycyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gX2VzY2FwZU1ldGFjaGFyYWN0ZXJzKHJlc3VsdCkgewogICAgICAvLyBSZXBsYWNlIGFueSBzaW5nbGUgYmFja3NsYXNoIHdpdGggdHdvIG9mIHRoZW0KICAgICAgcmVzdWx0ID0gcmVzdWx0LnJlcGxhY2UoL1xcL2csICdcXCcpOyAvLyBEb3VibGUtZXNjYXBlIGVzY2FwZWQgewoKICAgICAgcmVzdWx0ID0gcmVzdWx0LnJlcGxhY2UoL1xcXHsvZywgJ1xcXFx7Jyk7IC8vIERvdWJsZS1lc2NhcGUgZXNjYXBlZCB9CgogICAgICByZXN1bHQgPSByZXN1bHQucmVwbGFjZSgvXFxcfS9nLCAnXFxcXH0nKTsgLy8gRG91YmxlLWVzY2FwZSBlc2NhcGVkIFsKCiAgICAgIHJlc3VsdCA9IHJlc3VsdC5yZXBsYWNlKC9cXFxbL2csICdcXFxcWycpOyAvLyBEb3VibGUtZXNjYXBlIGVzY2FwZWQgXQoKICAgICAgcmVzdWx0ID0gcmVzdWx0LnJlcGxhY2UoL1xcXF0vZywgJ1xcXFxdJyk7CiAgICAgIHJldHVybiByZXN1bHQ7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gSFRNTFBhcnNlcjsKfSgpOwoKbW9kdWxlLmV4cG9ydHMgPSBIVE1MUGFyc2VyOw=="},{"version":3,"sources":["/Users/justinwu/Desktop/story_personalization_system/src/js/extwee_utils/HTMLParser.js"],"names":["require","parse","HtmlParser","Story","Passage","HTMLParser","content","story","dom","lowerCaseTagName","script","style","pre","storyData","querySelector","name","attributes","creator","creatorVersion","metadata","ifid","format","formatVersion","zoom","start","startnode","Error","storyPassages","querySelectorAll","passages","pid","push","passage","attr","text","rawText","position","size","_escapeMetacharacters","tags","length","split","filter","tag","styleElement","scriptElement","getStartingPassage","JSON","stringify","result","replace","module","exports"],"mappings":"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","sourcesContent":["/**\n * @external HTML\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTML|HTML}\n */\n\nconst { parse } = require('node-html-parser');\nconst HtmlParser = parse;\nconst Story = require('./Story.js');\nconst Passage = require('./Passage.js');\n/**\n * @class HTMLParser\n * @module HTMLParser\n */\nclass HTMLParser {\n  /**\n   * @function HTMLParser\n   * @class\n   * @param {HTML} content - HTML to parse\n   */\n  constructor (content) {\n    this.story = null;\n    this.parse(content);\n  }\n\n  /**\n   * Parse HTML text into a JS DOM-like object\n   *\n   * @param {string} content - Content to parse\n   * @returns {void}\n   */\n  parse (content) {\n    // Send to node-html-parser\n    // Enable getting the content of 'script', 'style', and 'pre' elements\n    // Get back a DOM\n    const dom = new HtmlParser(\n      content,\n      {\n        lowerCaseTagName: false,\n        script: true,\n        style: true,\n        pre: true\n      });\n\n    // Pull out the tw-storydata element\n    const storyData = dom.querySelector('tw-storydata');\n\n    if (storyData != null) {\n      this.story = new Story();\n      this.story.name = storyData.attributes.name;\n      this.story.creator = storyData.attributes.creator;\n      this.story.creatorVersion = storyData.attributes['creator-version'];\n\n      this.story.metadata = {};\n      this.story.metadata.ifid = storyData.attributes.ifid;\n      this.story.metadata.format = storyData.attributes.format;\n      this.story.metadata.formatVersion = storyData.attributes['format-version'];\n      this.story.metadata.zoom = storyData.attributes.zoom;\n      this.story.metadata.start = storyData.attributes.startnode;\n    } else {\n      throw new Error('Error: Not a Twine 2-style file!');\n    }\n\n    // Pull out the tw-passagedata elements\n    const storyPassages = dom.querySelectorAll('tw-passagedata');\n\n    // Create an empty array\n    this.story.passages = [];\n\n    // Set default pid\n    let pid = 1;\n\n    // Add StoryTitle\n    this.story.passages.push(\n      new Passage(\n        'StoryTitle',\n        [],\n        {},\n        this.story.name,\n        pid\n      )\n    );\n\n    // Increase PID by one before parsing any other passages\n    pid++;\n\n    // Move through the passages\n    for (const passage in storyPassages) {\n      // Get the passage attributes\n      const attr = storyPassages[passage].attributes;\n      // Get the passage text\n      const text = storyPassages[passage].rawText;\n\n      // Save position\n      const position = attr.position;\n\n      // Save size\n      const size = attr.size;\n\n      // Escape the name\n      const name = this._escapeMetacharacters(attr.name);\n\n      // Create empty tags\n      let tags = '';\n\n      // Escape any tags\n      // (Attributes can, themselves, be emtpy strings.)\n      if (attr.tags.length > 0 && attr.tags !== '\"\"') {\n        tags = this._escapeMetacharacters(attr.tags);\n      }\n\n      // Split by spaces\n      tags = tags.split(' ');\n\n      // Remove any empty strings\n      tags = tags.filter(tag => tag !== '');\n\n      // Add a new Passage into an array\n      this.story.passages.push(\n        new Passage(\n          name,\n          tags,\n          {\n            position: position,\n            size: size\n\n          },\n          text,\n          pid\n        )\n      );\n\n      pid++;\n    }\n\n    // Look for the style element\n    const styleElement = dom.querySelector('#twine-user-stylesheet');\n\n    // Check if there is any content.\n    // If not, we won't add empty passages\n    if (styleElement.rawText.length > 0) {\n      // Add UserStylesheet\n      this.story.passages.push(\n        new Passage(\n          'UserStylesheet',\n          ['stylesheet'],\n          {},\n          styleElement.rawText\n        )\n      );\n    }\n\n    // Look for the script element\n    const scriptElement = dom.querySelector('#twine-user-script');\n\n    // Check if there is any content.\n    // If not, we won't add empty passages\n    if (scriptElement.rawText.length > 0) {\n      // Add UserScript\n      this.story.passages.push(\n        new Passage(\n          'UserScript',\n          ['script'],\n          {},\n          scriptElement.rawText\n        )\n      );\n    }\n\n    // Now that all passages have been handled,\n    //  change the start name\n    this.story.metadata.start = this.story.getStartingPassage();\n\n    // Add StoryData\n    this.story.passages.push(\n      new Passage(\n        'StoryData',\n        [],\n        {},\n        JSON.stringify(this.story.metadata, null, 4)\n      )\n    );\n  }\n\n  /**\n   * Try to escape meta-characters\n   *\n   * @param {string} result - Text to parse\n   * @returns {string} Escaped characters\n   */\n  _escapeMetacharacters (result) {\n    // Replace any single backslash with two of them\n    result = result.replace(/\\\\/g, '\\\\');\n    // Double-escape escaped {\n    result = result.replace(/\\\\\\{/g, '\\\\\\\\{');\n    // Double-escape escaped }\n    result = result.replace(/\\\\\\}/g, '\\\\\\\\}');\n    // Double-escape escaped [\n    result = result.replace(/\\\\\\[/g, '\\\\\\\\[');\n    // Double-escape escaped ]\n    result = result.replace(/\\\\\\]/g, '\\\\\\\\]');\n\n    return result;\n  }\n}\n\nmodule.exports = HTMLParser;\n"]}]}