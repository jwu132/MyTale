{"remainingRequest":"/Users/justinwu/Desktop/story_personalization_system/node_modules/babel-loader/lib/index.js!/Users/justinwu/Desktop/story_personalization_system/node_modules/eslint-loader/index.js??ref--13-0!/Users/justinwu/Desktop/story_personalization_system/src/js/tiptap/packages/tiptap-extensions/src/nodes/Blockquote.js","dependencies":[{"path":"/Users/justinwu/Desktop/story_personalization_system/src/js/tiptap/packages/tiptap-extensions/src/nodes/Blockquote.js","mtime":1604692362847},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvanVzdGlud3UvRGVza3RvcC9zdG9yeV9wZXJzb25hbGl6YXRpb25fc3lzdGVtL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL1VzZXJzL2p1c3Rpbnd1L0Rlc2t0b3Avc3RvcnlfcGVyc29uYWxpemF0aW9uX3N5c3RlbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIi9Vc2Vycy9qdXN0aW53dS9EZXNrdG9wL3N0b3J5X3BlcnNvbmFsaXphdGlvbl9zeXN0ZW0vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvVXNlcnMvanVzdGlud3UvRGVza3RvcC9zdG9yeV9wZXJzb25hbGl6YXRpb25fc3lzdGVtL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlciI7CmltcG9ydCB7IE5vZGUgfSBmcm9tICd0aXB0YXAnOwppbXBvcnQgeyB3cmFwcGluZ0lucHV0UnVsZSwgdG9nZ2xlV3JhcCB9IGZyb20gJ3RpcHRhcC1jb21tYW5kcyc7Cgp2YXIgQmxvY2txdW90ZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX05vZGUpIHsKICBfaW5oZXJpdHMoQmxvY2txdW90ZSwgX05vZGUpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKEJsb2NrcXVvdGUpOwoKICBmdW5jdGlvbiBCbG9ja3F1b3RlKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEJsb2NrcXVvdGUpOwoKICAgIHJldHVybiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9CgogIF9jcmVhdGVDbGFzcyhCbG9ja3F1b3RlLCBbewogICAga2V5OiAiY29tbWFuZHMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNvbW1hbmRzKF9yZWYpIHsKICAgICAgdmFyIHR5cGUgPSBfcmVmLnR5cGUsCiAgICAgICAgICBzY2hlbWEgPSBfcmVmLnNjaGVtYTsKICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gdG9nZ2xlV3JhcCh0eXBlLCBzY2hlbWEubm9kZXMucGFyYWdyYXBoKTsKICAgICAgfTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJrZXlzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBrZXlzKF9yZWYyKSB7CiAgICAgIHZhciB0eXBlID0gX3JlZjIudHlwZTsKICAgICAgcmV0dXJuIHsKICAgICAgICAnQ3RybC0+JzogdG9nZ2xlV3JhcCh0eXBlKQogICAgICB9OwogICAgfQogIH0sIHsKICAgIGtleTogImlucHV0UnVsZXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGlucHV0UnVsZXMoX3JlZjMpIHsKICAgICAgdmFyIHR5cGUgPSBfcmVmMy50eXBlOwogICAgICByZXR1cm4gW3dyYXBwaW5nSW5wdXRSdWxlKC9eXHMqPlxzJC8sIHR5cGUpXTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJuYW1lIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gJ2Jsb2NrcXVvdGUnOwogICAgfQogIH0sIHsKICAgIGtleTogInNjaGVtYSIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBjb250ZW50OiAnYmxvY2sqJywKICAgICAgICBncm91cDogJ2Jsb2NrJywKICAgICAgICBkZWZpbmluZzogdHJ1ZSwKICAgICAgICBkcmFnZ2FibGU6IGZhbHNlLAogICAgICAgIHBhcnNlRE9NOiBbewogICAgICAgICAgdGFnOiAnYmxvY2txdW90ZScKICAgICAgICB9XSwKICAgICAgICB0b0RPTTogZnVuY3Rpb24gdG9ET00oKSB7CiAgICAgICAgICByZXR1cm4gWydibG9ja3F1b3RlJywgMF07CiAgICAgICAgfQogICAgICB9OwogICAgfQogIH1dKTsKCiAgcmV0dXJuIEJsb2NrcXVvdGU7Cn0oTm9kZSk7CgpleHBvcnQgeyBCbG9ja3F1b3RlIGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["/Users/justinwu/Desktop/story_personalization_system/src/js/tiptap/packages/tiptap-extensions/src/nodes/Blockquote.js"],"names":["Node","wrappingInputRule","toggleWrap","Blockquote","type","schema","nodes","paragraph","content","group","defining","draggable","parseDOM","tag","toDOM"],"mappings":";;;;AAAA,SAASA,IAAT,QAAqB,QAArB;AACA,SAASC,iBAAT,EAA4BC,UAA5B,QAA8C,iBAA9C;;IAEqBC,U;;;;;;;;;;;;;mCAmBQ;AAAA,UAAhBC,IAAgB,QAAhBA,IAAgB;AAAA,UAAVC,MAAU,QAAVA,MAAU;AACzB,aAAO;AAAA,eAAMH,UAAU,CAACE,IAAD,EAAOC,MAAM,CAACC,KAAP,CAAaC,SAApB,CAAhB;AAAA,OAAP;AACD;;;gCAEc;AAAA,UAARH,IAAQ,SAARA,IAAQ;AACb,aAAO;AACL,kBAAUF,UAAU,CAACE,IAAD;AADf,OAAP;AAGD;;;sCAEoB;AAAA,UAARA,IAAQ,SAARA,IAAQ;AACnB,aAAO,CACLH,iBAAiB,CAAC,UAAD,EAAaG,IAAb,CADZ,CAAP;AAGD;;;wBA/BU;AACT,aAAO,YAAP;AACD;;;wBAEY;AACX,aAAO;AACLI,QAAAA,OAAO,EAAE,QADJ;AAELC,QAAAA,KAAK,EAAE,OAFF;AAGLC,QAAAA,QAAQ,EAAE,IAHL;AAILC,QAAAA,SAAS,EAAE,KAJN;AAKLC,QAAAA,QAAQ,EAAE,CACR;AAAEC,UAAAA,GAAG,EAAE;AAAP,SADQ,CALL;AAQLC,QAAAA,KAAK,EAAE;AAAA,iBAAM,CAAC,YAAD,EAAe,CAAf,CAAN;AAAA;AARF,OAAP;AAUD;;;;EAjBqCd,I;;SAAnBG,U","sourcesContent":["import { Node } from 'tiptap'\nimport { wrappingInputRule, toggleWrap } from 'tiptap-commands'\n\nexport default class Blockquote extends Node {\n\n  get name() {\n    return 'blockquote'\n  }\n\n  get schema() {\n    return {\n      content: 'block*',\n      group: 'block',\n      defining: true,\n      draggable: false,\n      parseDOM: [\n        { tag: 'blockquote' },\n      ],\n      toDOM: () => ['blockquote', 0],\n    }\n  }\n\n  commands({ type, schema }) {\n    return () => toggleWrap(type, schema.nodes.paragraph)\n  }\n\n  keys({ type }) {\n    return {\n      'Ctrl->': toggleWrap(type),\n    }\n  }\n\n  inputRules({ type }) {\n    return [\n      wrappingInputRule(/^\\s*>\\s$/, type),\n    ]\n  }\n\n}\n"]}]}