{"remainingRequest":"/Users/justinwu/Desktop/story_personalization_system/node_modules/babel-loader/lib/index.js!/Users/justinwu/Desktop/story_personalization_system/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/justinwu/Desktop/story_personalization_system/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/justinwu/Desktop/story_personalization_system/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/justinwu/Desktop/story_personalization_system/src/components/editor/tools/media/Upload_List.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/justinwu/Desktop/story_personalization_system/src/components/editor/tools/media/Upload_List.vue","mtime":1604692362838},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudXJsIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFNpZGViYXJfRWxlbWVudCBmcm9tICIuL1NpZGViYXJfRWxlbWVudC52dWUiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3VwbG9hZC1saXN0JywKICBjb21wb25lbnRzOiB7CiAgICAnc2lkZWJhci1lbGVtZW50JzogU2lkZWJhcl9FbGVtZW50CiAgfSwKICBwcm9wczogewogICAgcHVycG9zZTogU3RyaW5nLAogICAgdmFyTWFwOiBNYXAKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpY29uOiAnbWRpLXVwbG9hZCcsCiAgICAgIC8vIG5ld0ZpbGVzOiBbXSwgLy8gRmlsZQogICAgICBudW1WYXJzRW1pdHRlZDogMSwKICAgICAgdHlwZTogJycsCiAgICAgIHNob3dMaXN0OiB0cnVlLAogICAgICBmaWxlc0FjY2VwdGVkOiAnJywKICAgICAgcmVuZGVyS2V5OiAxCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIGlmICh0aGlzLnB1cnBvc2UuaW5jbHVkZXMoIkltYWdlcyIpKSB7CiAgICAgIHRoaXMuaWNvbiA9ICdtZGktaW1hZ2UtYXJlYSc7CiAgICAgIHRoaXMuZmlsZXNBY2NlcHRlZCA9ICdpbWFnZS8qJzsKICAgICAgdGhpcy50eXBlID0gImltYWdlIjsKICAgIH0KCiAgICBpZiAodGhpcy5wdXJwb3NlLmluY2x1ZGVzKCJBdWRpbyIpKSB7CiAgICAgIHRoaXMuaWNvbiA9ICdtZGktdm9sdW1lLWhpZ2gnOwogICAgICB0aGlzLmZpbGVzQWNjZXB0ZWQgPSAnYXVkaW8vKic7CiAgICAgIHRoaXMudHlwZSA9ICJhdWRpbyI7CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgc29ydGVkS2V5czogZnVuY3Rpb24gc29ydGVkS2V5cygpIHsKICAgICAgdmFyIHNvcnRlZEtleXMgPSBbXTsKICAgICAgdmFyIHZhcmlhYmxlcyA9IHRoaXMudmFyTWFwOwoKICAgICAgaWYgKHZhcmlhYmxlcyAhPSBudWxsKSB7CiAgICAgICAgdmFyaWFibGVzLmZvckVhY2goZnVuY3Rpb24gKHZhbHVlLCBrZXkpIHsKICAgICAgICAgIHNvcnRlZEtleXMucHVzaChrZXkpOwogICAgICAgIH0pOwogICAgICAgIHNvcnRlZEtleXMgPSBzb3J0ZWRLZXlzLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICAgIHZhciBpZEEgPSB2YXJpYWJsZXMuZ2V0KGEpLmlkOwogICAgICAgICAgdmFyIGlkQiA9IHZhcmlhYmxlcy5nZXQoYikuaWQ7CiAgICAgICAgICByZXR1cm4gaWRBIC0gaWRCOwogICAgICAgIH0pOwogICAgICB9CgogICAgICByZXR1cm4gc29ydGVkS2V5czsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGxpc3RWaWV3OiBmdW5jdGlvbiBsaXN0VmlldygpIHsKICAgICAgdGhpcy5zaG93TGlzdCA9ICF0aGlzLnNob3dMaXN0OwogICAgfSwKICAgIC8vIGV2ZW50OiB1cGxvYWQgZXZlbnQKICAgIGVtaXROZXdWYXJpYWJsZXM6IGZ1bmN0aW9uIGVtaXROZXdWYXJpYWJsZXMoZXZlbnQpIHsKICAgICAgdmFyIGZpbGVzVG9FbWl0ID0gW107CiAgICAgIGNvbnNvbGUubG9nKCJFbWl0dGluZyBuZXcgVmFyaWFibGVzOiAiICsgZXZlbnQudGFyZ2V0LmZpbGVzLmxlbmd0aCk7CiAgICAgIHZhciBhbGVydFRleHQgPSAiIjsKCiAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgZXZlbnQudGFyZ2V0LmZpbGVzLmxlbmd0aDsgaisrKSB7CiAgICAgICAgaWYgKCF0aGlzLmNvbnRhaW5zRmlsZShldmVudC50YXJnZXQuZmlsZXNbal0pKSB7CiAgICAgICAgICBmaWxlc1RvRW1pdC5wdXNoKGV2ZW50LnRhcmdldC5maWxlc1tqXSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGFsZXJ0VGV4dCArPSAiICIgKyBldmVudC50YXJnZXQuZmlsZXNbal0ubmFtZSArICIgIjsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmIChhbGVydFRleHQubGVuZ3RoICE9IDApIHsKICAgICAgICBhbGVydFRleHQgPSAiWW91IGhhdmUgYWxyZWFkeSB1cGxvYWRlZCAiICsgYWxlcnRUZXh0OwogICAgICAgIGFsZXJ0KGFsZXJ0VGV4dCk7CiAgICAgIH0KCiAgICAgIHZhciB2YXJBcnIgPSBbXTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZmlsZXNUb0VtaXQubGVuZ3RoOyBpKyspIHsKICAgICAgICB2YXIgbmV3VmFyID0gewogICAgICAgICAgbmFtZTogIkAiICsgdGhpcy50eXBlICsgKHRoaXMubnVtVmFyc0VtaXR0ZWQgKyB0aGlzLnZhck1hcC5zaXplKSwKICAgICAgICAgIGZpbGU6IGZpbGVzVG9FbWl0W2ldLAogICAgICAgICAgZmlsZU5hbWU6IGZpbGVzVG9FbWl0W2ldLm5hbWUsCiAgICAgICAgICBwYXRoOiB7CiAgICAgICAgICAgIGk6IFVSTC5jcmVhdGVPYmplY3RVUkwoZmlsZXNUb0VtaXRbaV0pCiAgICAgICAgICB9LAogICAgICAgICAgY29sb3I6ICIiLAogICAgICAgICAgaWQ6IDAsCiAgICAgICAgICB1cGxvYWRlZDogZmFsc2UKICAgICAgICB9OwoKICAgICAgICB3aGlsZSAodGhpcy5jb250YWluc1ZhcigiQCIgKyB0aGlzLnR5cGUgKyAodGhpcy5udW1WYXJzRW1pdHRlZCsrICsgdGhpcy52YXJNYXAuc2l6ZSkpKSB7CiAgICAgICAgICBuZXdWYXIubmFtZSA9ICJAIiArIHRoaXMudHlwZSArICh0aGlzLm51bVZhcnNFbWl0dGVkICsgdGhpcy52YXJNYXAuc2l6ZSk7CiAgICAgICAgfQoKICAgICAgICB2YXJBcnIucHVzaChuZXdWYXIpOwogICAgICB9CgogICAgICBpZiAodmFyQXJyLmxlbmd0aCA+IDApIHRoaXMuJGVtaXQoImV2dE5ld01lZGlhVmFyaWFibGVzIiwgdmFyQXJyKTsKICAgIH0sCiAgICAvLyBldmVudDoge25hbWUsIGZpbGVOYW1lfQogICAgYWRkRWxlbWVudDogZnVuY3Rpb24gYWRkRWxlbWVudChldmVudCkgewogICAgICB0aGlzLiRlbWl0KCJldnRBZGQiLCBldmVudCk7CiAgICB9LAogICAgLy8gZXZlbnQ6IHtuYW1lLCBmaWxlTmFtZX0KICAgIHJlbW92ZUVsZW1lbnQ6IGZ1bmN0aW9uIHJlbW92ZUVsZW1lbnQoZXZlbnQpIHsKICAgICAgY29uc29sZS5sb2coIkRlbGV0aW5nOiAiICsgSlNPTi5zdHJpbmdpZnkoZXZlbnQpKTsKICAgICAgdmFyIGZpbGUgPSB0aGlzLnZhck1hcC5nZXQoZXZlbnQubmFtZSk7CiAgICAgIHRoaXMuJGVtaXQoImV2dERlbGV0ZSIsIHsKICAgICAgICBuYW1lOiBldmVudC5uYW1lLAogICAgICAgIGZpbGVOYW1lOiBldmVudC5maWxlTmFtZSwKICAgICAgICBmaWxlOiBmaWxlCiAgICAgIH0pOwogICAgfSwKICAgIC8vIGV2ZW50OiB7cHJldk5hbWUsIG5ld05hbWV9CiAgICB1cGRhdGVWYXJOYW1lOiBmdW5jdGlvbiB1cGRhdGVWYXJOYW1lKGV2ZW50KSB7CiAgICAgIC8vIGVuc3VyZSBuZXdWYXJOYW1lIGlzIG5vdCBhbHJlYWR5IGluIHVzZQogICAgICBpZiAoZXZlbnQucHJldk5hbWUgPT0gZXZlbnQubmV3TmFtZSkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgaWYgKGV2ZW50Lm5ld05hbWUgPT0gIiIpIHsKICAgICAgICBhbGVydCgiUGxlYXNlIGVudGVyIHNvbWV0aGluZyEiKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmNvbnRhaW5zVmFyKGV2ZW50Lm5ld05hbWUpKSB7CiAgICAgICAgYWxlcnQoIlRoZSB2YXJpYWJsZSBuYW1lICIgKyBldmVudC5uZXdOYW1lICsgIiBpcyBhbHJlYWR5IGJlaW5nIHVzZWQhIFBsZWFzZSBwaWNrIGFub3RoZXIgbmFtZS4iKTsKICAgICAgICB0aGlzLnJlbmRlcktleSsrOwoKICAgICAgICBpZiAodGhpcy5yZW5kZXJLZXkgPiAxMCkgewogICAgICAgICAgdGhpcy5yZW5kZXJLZXkgPSAwOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLiRlbWl0KCJldnROZXdWYXJOYW1lIiwgZXZlbnQpOwogICAgfSwKICAgIC8vIGV2ZW50OiB7bmFtZSwgb2xkRmlsZU5hbWUsIG5ld0ZpbGV9CiAgICByZXBsYWNlRmlsZTogZnVuY3Rpb24gcmVwbGFjZUZpbGUoZXZlbnQpIHsKICAgICAgdmFyIG5ld0ZpbGUgPSBldmVudC5uZXdGaWxlOwogICAgICB2YXIgb2xkRGF0YSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy52YXJNYXAuZ2V0KGV2ZW50Lm5hbWUpKSk7IC8vIGVuc3VyZSBmaWxlIGhhcyBub3QgYWxyZWFkeSBiZWVuIHVwbG9hZGVkCgogICAgICBpZiAodGhpcy5jb250YWluc0ZpbGUobmV3RmlsZSkpIHsKICAgICAgICBhbGVydCgiWW91J3ZlIGFscmVhZHkgdXBsb2FkZWQgIiArIG5ld0ZpbGUubmFtZSArICIhIik7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB2YXIgZGF0YSA9IHRoaXMudmFyTWFwLmdldChldmVudC5uYW1lKTsKICAgICAgZGF0YS5maWxlID0gZXZlbnQubmV3RmlsZTsKICAgICAgZGF0YS5maWxlTmFtZSA9IGV2ZW50Lm5ld0ZpbGUubmFtZTsKICAgICAgVVJMLnJldm9rZU9iamVjdFVSTChkYXRhLnBhdGguaSk7CiAgICAgIGRhdGEucGF0aCA9IHsKICAgICAgICBpOiBVUkwuY3JlYXRlT2JqZWN0VVJMKGV2ZW50Lm5ld0ZpbGUpCiAgICAgIH07CiAgICAgIHRoaXMuJGVtaXQoImV2dFJlcGxhY2VGaWxlIiwgewogICAgICAgIG5hbWU6IGV2ZW50Lm5hbWUsCiAgICAgICAgb2xkRGF0YTogb2xkRGF0YSwKICAgICAgICBkYXRhOiBkYXRhCiAgICAgIH0pOwogICAgfSwKICAgIGNvbnRhaW5zRmlsZTogZnVuY3Rpb24gY29udGFpbnNGaWxlKGZpbGUpIHsKICAgICAgdmFyIHJldCA9IGZhbHNlOwogICAgICB0aGlzLnZhck1hcC5mb3JFYWNoKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgaWYgKGRhdGEuZmlsZU5hbWUgPT0gZmlsZS5uYW1lKSB7CiAgICAgICAgICByZXQgPSB0cnVlOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHJldHVybiByZXQ7CiAgICB9LAogICAgY29udGFpbnNWYXI6IGZ1bmN0aW9uIGNvbnRhaW5zVmFyKHZhck5hbWUpIHsKICAgICAgdmFyIHJldCA9IGZhbHNlOwogICAgICB0aGlzLnZhck1hcC5mb3JFYWNoKGZ1bmN0aW9uIChkYXRhLCBrZXkpIHsKICAgICAgICBpZiAoa2V5ID09IHZhck5hbWUpIHsKICAgICAgICAgIHJldCA9IHRydWU7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgcmV0dXJuIHJldDsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Upload_List.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div id = \"upload_list\">\n        <div id = \"flex_div\">\n            <button id = \"list_view\" class = \"sidebar_button\" v-on:click = \"listView\">{{this.purpose}}\n                <v-icon>{{this.showList ? \"mdi-chevron-down\": \"mdi-chevron-right\"}}</v-icon>\n            </button>\n\n            <label id = \"upload_btn\" class = \"sidebar_button\">Upload {{this.purpose}}   <v-icon>{{this.icon}}</v-icon>\n                <input type=\"file\" @change = \"emitNewVariables\" multiple :accept = \"this.filesAccepted\">  \n            </label>\n        </div>\n\n        <div v-if = \"this.showList\" id = \"list_div\" style = \"padding-top: 5px; padding-bottom: 5px;\" :key = \"renderKey\">\n            <label v-if = \"this.varMap.size==0\">No Uploaded Files</label>\n            <sidebar-element class = \"list_element\" v-for = \"(key, index) in this.sortedKeys\" :key = \"index\"\n                v-bind:fileName = \"varMap.get(key).fileName\" v-bind:variableName = \"key\"\n                v-bind:type = \"type\"\n                v-bind:varColor = \"varMap.get(key).color\"\n                v-on:evtAdd = \"addElement\" v-on:evtDelete = \"removeElement\"\n                v-on:evtNewVarName = \"updateVarName\" v-on:evtReplaceFile = \"replaceFile\">\n            </sidebar-element>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Sidebar_Element from \"./Sidebar_Element.vue\"\n\nexport default {\n    name: 'upload-list',\n\n    components: {\n        'sidebar-element': Sidebar_Element,\n    },\n\n    props: {\n        purpose: String,\n        varMap: Map\n    },\n\n    data() {\n        return {\n            icon: 'mdi-upload',\n            \n            // newFiles: [], // File\n            numVarsEmitted: 1,\n\n            type: '',\n\n            showList: true,\n\n            filesAccepted: '',\n\n            renderKey: 1,\n        }\n    },\n\n    created: function() {\n        if(this.purpose.includes(\"Images\")) {\n            this.icon = 'mdi-image-area';\n            this.filesAccepted = 'image/*';\n            this.type = \"image\";\n        }\n        if(this.purpose.includes(\"Audio\")) {\n            this.icon = 'mdi-volume-high'\n            this.filesAccepted = 'audio/*';\n            this.type = \"audio\";\n        }\n    },\n\n    computed:{\n        sortedKeys: function(){\n            var sortedKeys = [];\n            var variables = this.varMap;\n\n            if(variables != null){\n                variables.forEach(\n                    function(value, key){\n                        sortedKeys.push(key);\n                    }\n                );\n\n                sortedKeys = sortedKeys.sort(function(a, b){\n                    var idA = variables.get(a).id;\n                    var idB = variables.get(b).id;\n\n                    return idA - idB;\n                });\n            }\n\n            return sortedKeys;\n        },\n    },\n\n    methods: {\n        listView: function() {\n            this.showList = !this.showList;\n        },\n\n        // event: upload event\n        emitNewVariables: function(event) {\n            var filesToEmit = [];\n\n            console.log(\"Emitting new Variables: \" + event.target.files.length);\n            \n            var alertText = \"\";\n\n            for(var j = 0; j < event.target.files.length; j++){\n\n                if(!this.containsFile(event.target.files[j])){\n                    filesToEmit.push(event.target.files[j]);\n                } else {\n                    alertText += \" \" + event.target.files[j].name + \" \";\n                }\n            \n            }\n\n            if(alertText.length != 0){\n                alertText = \"You have already uploaded \" + alertText;\n                alert(alertText);\n            }\n\n            var varArr = [];\n\n            for(var i = 0; i < filesToEmit.length; i++){\n                var newVar = {name: \"@\"+ this.type + ((this.numVarsEmitted) + this.varMap.size), file: filesToEmit[i], fileName: filesToEmit[i].name, path: {i: URL.createObjectURL(filesToEmit[i])}, color: \"\", id: 0, uploaded: false};\n                \n                while(this.containsVar(\"@\"+ this.type + ((this.numVarsEmitted++) + this.varMap.size))){\n                    newVar.name = \"@\"+ this.type + ((this.numVarsEmitted) + this.varMap.size);\n                }\n                \n                varArr.push(newVar);\n            }\n\n            if(varArr.length > 0)\n                this.$emit(\"evtNewMediaVariables\", varArr);\n        },\n\n        // event: {name, fileName}\n        addElement: function(event) {\n            this.$emit(\"evtAdd\", event);\n        },\n\n        // event: {name, fileName}\n        removeElement: function(event) {\n            console.log(\"Deleting: \" + JSON.stringify(event));\n            var file = this.varMap.get(event.name);\n\n            this.$emit(\"evtDelete\", {name: event.name, fileName: event.fileName, file: file});\n        },\n\n        // event: {prevName, newName}\n        updateVarName: function(event) {\n            // ensure newVarName is not already in use\n            if(event.prevName == event.newName){\n                return;\n            }\n\n            if(event.newName == \"\"){\n                alert(\"Please enter something!\");\n                return;\n            }\n\n            if(this.containsVar(event.newName)) {\n                alert(\"The variable name \" + event.newName + \" is already being used! Please pick another name.\");\n                this.renderKey++;\n\n                if(this.renderKey > 10){\n                    this.renderKey = 0;\n                }\n                return;\n            }\n\n            this.$emit(\"evtNewVarName\", event);\n        },\n\n        // event: {name, oldFileName, newFile}\n        replaceFile: function(event) {\n            var newFile = event.newFile;\n            var oldData = JSON.parse(JSON.stringify(this.varMap.get(event.name)));\n\n            // ensure file has not already been uploaded\n            if(this.containsFile(newFile)) {\n                alert(\"You've already uploaded \" + newFile.name + \"!\");\n                return;\n            }\n\n            var data = this.varMap.get(event.name);\n\n            data.file = event.newFile;\n            data.fileName = event.newFile.name;\n\n\n            URL.revokeObjectURL(data.path.i);\n\n            data.path = {i: URL.createObjectURL(event.newFile)};\n\n            this.$emit(\"evtReplaceFile\", {name: event.name, oldData: oldData, data: data});\n        },\n\n        containsFile: function(file) {\n            var ret = false;\n            \n            this.varMap.forEach(function(data){\n               if(data.fileName == file.name){\n                   ret = true;\n               } \n            });\n\n            return ret;\n        },\n\n        containsVar: function(varName){\n            var ret = false;\n\n            this.varMap.forEach(function(data, key){\n               if(key == varName){\n                   ret = true;\n               } \n            });\n\n            return ret;\n        }\n    }\n}\n</script>\n\n<style scoped>\n    #upload_list{\n        display: block;\n        border: solid lightgray;\n        border-radius: 5px;\n        border-width: 2px;\n    }\n\n    #flex_div{\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        \n    }\n\n    #list_div{\n        display: flex;\n        flex-direction: column;\n        border: solid lightgray;\n        border-radius: 5px;\n        border-width: 1px;\n    }\n\n    #list{\n        text-align: center;\n    }\n\n    #list_view{\n        width: 40%;\n    }\n\n    input[type=\"file\"] {\n        display: none;\n    }\n\n    button{\n        outline: none;\n    }\n\n    ul{\n        list-style: none;\n        text-align: center;\n    }\n\n    #upload_btn {\n        cursor: pointer;\n    }\n\n\t@keyframes border_anim{\n        from{border: solid white;        \n                border-width: 2px;\n                border-radius: 5px;\n                padding: 5px;}\n\n        to{border:solid gray;\n            border-width: 2px;\n            border-radius: 5px;\n            padding: 5px;}\n        }\n\n    .sidebar_button{\n\t\tborder: solid white;\n        border-width: 2px;\n\t\tborder-radius: 5px;\n        padding: 5px;\n\t}\n\n\t.sidebar_button:hover{\n\t\tanimation: border_anim;\n\t\tanimation-fill-mode: forwards;\n\t\tanimation-duration: 500ms;\n\t}\n\n</style>"],"sourceRoot":"src/components/editor/tools/media"}]}