{"remainingRequest":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/babel-loader/lib/index.js!/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/eslint-loader/index.js??ref--13-0!/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/js/tiptap/packages/tiptap-extensions/src/nodes/OrderedList.js","dependencies":[{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/js/tiptap/packages/tiptap-extensions/src/nodes/OrderedList.js","mtime":1604692362848},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvanVzdGlud3UvRGVza3RvcC9HaXRsYWJfTXlUYWxlL215dGFsZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9Vc2Vycy9qdXN0aW53dS9EZXNrdG9wL0dpdGxhYl9NeVRhbGUvbXl0YWxlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiL1VzZXJzL2p1c3Rpbnd1L0Rlc2t0b3AvR2l0bGFiX015VGFsZS9teXRhbGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvVXNlcnMvanVzdGlud3UvRGVza3RvcC9HaXRsYWJfTXlUYWxlL215dGFsZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlU3VwZXIiOwppbXBvcnQgeyBOb2RlIH0gZnJvbSAndGlwdGFwJzsKaW1wb3J0IHsgd3JhcHBpbmdJbnB1dFJ1bGUsIHRvZ2dsZUxpc3QgfSBmcm9tICd0aXB0YXAtY29tbWFuZHMnOwoKdmFyIE9yZGVyZWRMaXN0ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfTm9kZSkgewogIF9pbmhlcml0cyhPcmRlcmVkTGlzdCwgX05vZGUpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKE9yZGVyZWRMaXN0KTsKCiAgZnVuY3Rpb24gT3JkZXJlZExpc3QoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgT3JkZXJlZExpc3QpOwoKICAgIHJldHVybiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9CgogIF9jcmVhdGVDbGFzcyhPcmRlcmVkTGlzdCwgW3sKICAgIGtleTogImNvbW1hbmRzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjb21tYW5kcyhfcmVmKSB7CiAgICAgIHZhciB0eXBlID0gX3JlZi50eXBlLAogICAgICAgICAgc2NoZW1hID0gX3JlZi5zY2hlbWE7CiAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIHRvZ2dsZUxpc3QodHlwZSwgc2NoZW1hLm5vZGVzLmxpc3RfaXRlbSk7CiAgICAgIH07CiAgICB9CiAgfSwgewogICAga2V5OiAia2V5cyIsCiAgICB2YWx1ZTogZnVuY3Rpb24ga2V5cyhfcmVmMikgewogICAgICB2YXIgdHlwZSA9IF9yZWYyLnR5cGUsCiAgICAgICAgICBzY2hlbWEgPSBfcmVmMi5zY2hlbWE7CiAgICAgIHJldHVybiB7CiAgICAgICAgJ1NoaWZ0LUN0cmwtOSc6IHRvZ2dsZUxpc3QodHlwZSwgc2NoZW1hLm5vZGVzLmxpc3RfaXRlbSkKICAgICAgfTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJpbnB1dFJ1bGVzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBpbnB1dFJ1bGVzKF9yZWYzKSB7CiAgICAgIHZhciB0eXBlID0gX3JlZjMudHlwZTsKICAgICAgcmV0dXJuIFt3cmFwcGluZ0lucHV0UnVsZSgvXihcZCspXC5ccyQvLCB0eXBlLCBmdW5jdGlvbiAobWF0Y2gpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgb3JkZXI6ICttYXRjaFsxXQogICAgICAgIH07CiAgICAgIH0sIGZ1bmN0aW9uIChtYXRjaCwgbm9kZSkgewogICAgICAgIHJldHVybiBub2RlLmNoaWxkQ291bnQgKyBub2RlLmF0dHJzLm9yZGVyID09PSArbWF0Y2hbMV07CiAgICAgIH0pXTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJuYW1lIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gJ29yZGVyZWRfbGlzdCc7CiAgICB9CiAgfSwgewogICAga2V5OiAic2NoZW1hIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gewogICAgICAgIGF0dHJzOiB7CiAgICAgICAgICBvcmRlcjogewogICAgICAgICAgICBkZWZhdWx0OiAxCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBjb250ZW50OiAnbGlzdF9pdGVtKycsCiAgICAgICAgZ3JvdXA6ICdibG9jaycsCiAgICAgICAgcGFyc2VET006IFt7CiAgICAgICAgICB0YWc6ICdvbCcsCiAgICAgICAgICBnZXRBdHRyczogZnVuY3Rpb24gZ2V0QXR0cnMoZG9tKSB7CiAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgb3JkZXI6IGRvbS5oYXNBdHRyaWJ1dGUoJ3N0YXJ0JykgPyArZG9tLmdldEF0dHJpYnV0ZSgnc3RhcnQnKSA6IDEKICAgICAgICAgICAgfTsKICAgICAgICAgIH0KICAgICAgICB9XSwKICAgICAgICB0b0RPTTogZnVuY3Rpb24gdG9ET00obm9kZSkgewogICAgICAgICAgcmV0dXJuIG5vZGUuYXR0cnMub3JkZXIgPT09IDEgPyBbJ29sJywgMF0gOiBbJ29sJywgewogICAgICAgICAgICBzdGFydDogbm9kZS5hdHRycy5vcmRlcgogICAgICAgICAgfSwgMF07CiAgICAgICAgfQogICAgICB9OwogICAgfQogIH1dKTsKCiAgcmV0dXJuIE9yZGVyZWRMaXN0Owp9KE5vZGUpOwoKZXhwb3J0IHsgT3JkZXJlZExpc3QgYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/js/tiptap/packages/tiptap-extensions/src/nodes/OrderedList.js"],"names":["Node","wrappingInputRule","toggleList","OrderedList","type","schema","nodes","list_item","match","order","node","childCount","attrs","default","content","group","parseDOM","tag","getAttrs","dom","hasAttribute","getAttribute","toDOM","start"],"mappings":";;;;AAAA,SAASA,IAAT,QAAqB,QAArB;AACA,SAASC,iBAAT,EAA4BC,UAA5B,QAA8C,iBAA9C;;IAEqBC,W;;;;;;;;;;;;;mCA2BQ;AAAA,UAAhBC,IAAgB,QAAhBA,IAAgB;AAAA,UAAVC,MAAU,QAAVA,MAAU;AACzB,aAAO;AAAA,eAAMH,UAAU,CAACE,IAAD,EAAOC,MAAM,CAACC,KAAP,CAAaC,SAApB,CAAhB;AAAA,OAAP;AACD;;;gCAEsB;AAAA,UAAhBH,IAAgB,SAAhBA,IAAgB;AAAA,UAAVC,MAAU,SAAVA,MAAU;AACrB,aAAO;AACL,wBAAgBH,UAAU,CAACE,IAAD,EAAOC,MAAM,CAACC,KAAP,CAAaC,SAApB;AADrB,OAAP;AAGD;;;sCAEoB;AAAA,UAARH,IAAQ,SAARA,IAAQ;AACnB,aAAO,CACLH,iBAAiB,CACf,aADe,EAEfG,IAFe,EAGf,UAAAI,KAAK;AAAA,eAAK;AAAEC,UAAAA,KAAK,EAAE,CAACD,KAAK,CAAC,CAAD;AAAf,SAAL;AAAA,OAHU,EAIf,UAACA,KAAD,EAAQE,IAAR;AAAA,eAAiBA,IAAI,CAACC,UAAL,GAAkBD,IAAI,CAACE,KAAL,CAAWH,KAA7B,KAAuC,CAACD,KAAK,CAAC,CAAD,CAA9D;AAAA,OAJe,CADZ,CAAP;AAQD;;;wBA5CU;AACT,aAAO,cAAP;AACD;;;wBAEY;AACX,aAAO;AACLI,QAAAA,KAAK,EAAE;AACLH,UAAAA,KAAK,EAAE;AACLI,YAAAA,OAAO,EAAE;AADJ;AADF,SADF;AAMLC,QAAAA,OAAO,EAAE,YANJ;AAOLC,QAAAA,KAAK,EAAE,OAPF;AAQLC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,GAAG,EAAE,IADP;AAEEC,UAAAA,QAAQ,EAAE,kBAAAC,GAAG;AAAA,mBAAK;AAChBV,cAAAA,KAAK,EAAEU,GAAG,CAACC,YAAJ,CAAiB,OAAjB,IAA4B,CAACD,GAAG,CAACE,YAAJ,CAAiB,OAAjB,CAA7B,GAAyD;AADhD,aAAL;AAAA;AAFf,SADQ,CARL;AAgBLC,QAAAA,KAAK,EAAE,eAAAZ,IAAI;AAAA,iBAAKA,IAAI,CAACE,KAAL,CAAWH,KAAX,KAAqB,CAArB,GAAyB,CAAC,IAAD,EAAO,CAAP,CAAzB,GAAqC,CAAC,IAAD,EAAO;AAAEc,YAAAA,KAAK,EAAEb,IAAI,CAACE,KAAL,CAAWH;AAApB,WAAP,EAAoC,CAApC,CAA1C;AAAA;AAhBN,OAAP;AAkBD;;;;EAzBsCT,I;;SAApBG,W","sourcesContent":["import { Node } from 'tiptap'\nimport { wrappingInputRule, toggleList } from 'tiptap-commands'\n\nexport default class OrderedList extends Node {\n\n  get name() {\n    return 'ordered_list'\n  }\n\n  get schema() {\n    return {\n      attrs: {\n        order: {\n          default: 1,\n        },\n      },\n      content: 'list_item+',\n      group: 'block',\n      parseDOM: [\n        {\n          tag: 'ol',\n          getAttrs: dom => ({\n            order: dom.hasAttribute('start') ? +dom.getAttribute('start') : 1,\n          }),\n        },\n      ],\n      toDOM: node => (node.attrs.order === 1 ? ['ol', 0] : ['ol', { start: node.attrs.order }, 0]),\n    }\n  }\n\n  commands({ type, schema }) {\n    return () => toggleList(type, schema.nodes.list_item)\n  }\n\n  keys({ type, schema }) {\n    return {\n      'Shift-Ctrl-9': toggleList(type, schema.nodes.list_item),\n    }\n  }\n\n  inputRules({ type }) {\n    return [\n      wrappingInputRule(\n        /^(\\d+)\\.\\s$/,\n        type,\n        match => ({ order: +match[1] }),\n        (match, node) => node.childCount + node.attrs.order === +match[1],\n      ),\n    ]\n  }\n\n}\n"]}]}