{"remainingRequest":"/Users/justinwu/Desktop/story_personalization_system/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/justinwu/Desktop/story_personalization_system/src/components/editor/tools/media/Upload_List.vue?vue&type=style&index=0&id=52f3d5aa&scoped=true&lang=css&","dependencies":[{"path":"/Users/justinwu/Desktop/story_personalization_system/src/components/editor/tools/media/Upload_List.vue","mtime":1604692362838},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/story_personalization_system/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKICAgICN1cGxvYWRfbGlzdHsKICAgICAgICBkaXNwbGF5OiBibG9jazsKICAgICAgICBib3JkZXI6IHNvbGlkIGxpZ2h0Z3JheTsKICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7CiAgICAgICAgYm9yZGVyLXdpZHRoOiAycHg7CiAgICB9CgogICAgI2ZsZXhfZGl2ewogICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdzsKICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgICAgICAgCiAgICB9CgogICAgI2xpc3RfZGl2ewogICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgICAgICBib3JkZXI6IHNvbGlkIGxpZ2h0Z3JheTsKICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7CiAgICAgICAgYm9yZGVyLXdpZHRoOiAxcHg7CiAgICB9CgogICAgI2xpc3R7CiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgfQoKICAgICNsaXN0X3ZpZXd7CiAgICAgICAgd2lkdGg6IDQwJTsKICAgIH0KCiAgICBpbnB1dFt0eXBlPSJmaWxlIl0gewogICAgICAgIGRpc3BsYXk6IG5vbmU7CiAgICB9CgogICAgYnV0dG9uewogICAgICAgIG91dGxpbmU6IG5vbmU7CiAgICB9CgogICAgdWx7CiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTsKICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICB9CgogICAgI3VwbG9hZF9idG4gewogICAgICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIH0KCglAa2V5ZnJhbWVzIGJvcmRlcl9hbmltewogICAgICAgIGZyb217Ym9yZGVyOiBzb2xpZCB3aGl0ZTsgICAgICAgIAogICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAycHg7CiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7CiAgICAgICAgICAgICAgICBwYWRkaW5nOiA1cHg7fQoKICAgICAgICB0b3tib3JkZXI6c29saWQgZ3JheTsKICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAycHg7CiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDsKICAgICAgICAgICAgcGFkZGluZzogNXB4O30KICAgICAgICB9CgogICAgLnNpZGViYXJfYnV0dG9uewoJCWJvcmRlcjogc29saWQgd2hpdGU7CiAgICAgICAgYm9yZGVyLXdpZHRoOiAycHg7CgkJYm9yZGVyLXJhZGl1czogNXB4OwogICAgICAgIHBhZGRpbmc6IDVweDsKCX0KCgkuc2lkZWJhcl9idXR0b246aG92ZXJ7CgkJYW5pbWF0aW9uOiBib3JkZXJfYW5pbTsKCQlhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkczsKCQlhbmltYXRpb24tZHVyYXRpb246IDUwMG1zOwoJfQoK"},{"version":3,"sources":["Upload_List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoOA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Upload_List.vue","sourceRoot":"src/components/editor/tools/media","sourcesContent":["<template>\n    <div id = \"upload_list\">\n        <div id = \"flex_div\">\n            <button id = \"list_view\" class = \"sidebar_button\" v-on:click = \"listView\">{{this.purpose}}\n                <v-icon>{{this.showList ? \"mdi-chevron-down\": \"mdi-chevron-right\"}}</v-icon>\n            </button>\n\n            <label id = \"upload_btn\" class = \"sidebar_button\">Upload {{this.purpose}}   <v-icon>{{this.icon}}</v-icon>\n                <input type=\"file\" @change = \"emitNewVariables\" multiple :accept = \"this.filesAccepted\">  \n            </label>\n        </div>\n\n        <div v-if = \"this.showList\" id = \"list_div\" style = \"padding-top: 5px; padding-bottom: 5px;\" :key = \"renderKey\">\n            <label v-if = \"this.varMap.size==0\">No Uploaded Files</label>\n            <sidebar-element class = \"list_element\" v-for = \"(key, index) in this.sortedKeys\" :key = \"index\"\n                v-bind:fileName = \"varMap.get(key).fileName\" v-bind:variableName = \"key\"\n                v-bind:type = \"type\"\n                v-bind:varColor = \"varMap.get(key).color\"\n                v-on:evtAdd = \"addElement\" v-on:evtDelete = \"removeElement\"\n                v-on:evtNewVarName = \"updateVarName\" v-on:evtReplaceFile = \"replaceFile\">\n            </sidebar-element>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Sidebar_Element from \"./Sidebar_Element.vue\"\n\nexport default {\n    name: 'upload-list',\n\n    components: {\n        'sidebar-element': Sidebar_Element,\n    },\n\n    props: {\n        purpose: String,\n        varMap: Map\n    },\n\n    data() {\n        return {\n            icon: 'mdi-upload',\n            \n            // newFiles: [], // File\n            numVarsEmitted: 1,\n\n            type: '',\n\n            showList: true,\n\n            filesAccepted: '',\n\n            renderKey: 1,\n        }\n    },\n\n    created: function() {\n        if(this.purpose.includes(\"Images\")) {\n            this.icon = 'mdi-image-area';\n            this.filesAccepted = 'image/*';\n            this.type = \"image\";\n        }\n        if(this.purpose.includes(\"Audio\")) {\n            this.icon = 'mdi-volume-high'\n            this.filesAccepted = 'audio/*';\n            this.type = \"audio\";\n        }\n    },\n\n    computed:{\n        sortedKeys: function(){\n            var sortedKeys = [];\n            var variables = this.varMap;\n\n            if(variables != null){\n                variables.forEach(\n                    function(value, key){\n                        sortedKeys.push(key);\n                    }\n                );\n\n                sortedKeys = sortedKeys.sort(function(a, b){\n                    var idA = variables.get(a).id;\n                    var idB = variables.get(b).id;\n\n                    return idA - idB;\n                });\n            }\n\n            return sortedKeys;\n        },\n    },\n\n    methods: {\n        listView: function() {\n            this.showList = !this.showList;\n        },\n\n        // event: upload event\n        emitNewVariables: function(event) {\n            var filesToEmit = [];\n\n            console.log(\"Emitting new Variables: \" + event.target.files.length);\n            \n            var alertText = \"\";\n\n            for(var j = 0; j < event.target.files.length; j++){\n\n                if(!this.containsFile(event.target.files[j])){\n                    filesToEmit.push(event.target.files[j]);\n                } else {\n                    alertText += \" \" + event.target.files[j].name + \" \";\n                }\n            \n            }\n\n            if(alertText.length != 0){\n                alertText = \"You have already uploaded \" + alertText;\n                alert(alertText);\n            }\n\n            var varArr = [];\n\n            for(var i = 0; i < filesToEmit.length; i++){\n                var newVar = {name: \"@\"+ this.type + ((this.numVarsEmitted) + this.varMap.size), file: filesToEmit[i], fileName: filesToEmit[i].name, path: {i: URL.createObjectURL(filesToEmit[i])}, color: \"\", id: 0, uploaded: false};\n                \n                while(this.containsVar(\"@\"+ this.type + ((this.numVarsEmitted++) + this.varMap.size))){\n                    newVar.name = \"@\"+ this.type + ((this.numVarsEmitted) + this.varMap.size);\n                }\n                \n                varArr.push(newVar);\n            }\n\n            if(varArr.length > 0)\n                this.$emit(\"evtNewMediaVariables\", varArr);\n        },\n\n        // event: {name, fileName}\n        addElement: function(event) {\n            this.$emit(\"evtAdd\", event);\n        },\n\n        // event: {name, fileName}\n        removeElement: function(event) {\n            console.log(\"Deleting: \" + JSON.stringify(event));\n            var file = this.varMap.get(event.name);\n\n            this.$emit(\"evtDelete\", {name: event.name, fileName: event.fileName, file: file});\n        },\n\n        // event: {prevName, newName}\n        updateVarName: function(event) {\n            // ensure newVarName is not already in use\n            if(event.prevName == event.newName){\n                return;\n            }\n\n            if(event.newName == \"\"){\n                alert(\"Please enter something!\");\n                return;\n            }\n\n            if(this.containsVar(event.newName)) {\n                alert(\"The variable name \" + event.newName + \" is already being used! Please pick another name.\");\n                this.renderKey++;\n\n                if(this.renderKey > 10){\n                    this.renderKey = 0;\n                }\n                return;\n            }\n\n            this.$emit(\"evtNewVarName\", event);\n        },\n\n        // event: {name, oldFileName, newFile}\n        replaceFile: function(event) {\n            var newFile = event.newFile;\n            var oldData = JSON.parse(JSON.stringify(this.varMap.get(event.name)));\n\n            // ensure file has not already been uploaded\n            if(this.containsFile(newFile)) {\n                alert(\"You've already uploaded \" + newFile.name + \"!\");\n                return;\n            }\n\n            var data = this.varMap.get(event.name);\n\n            data.file = event.newFile;\n            data.fileName = event.newFile.name;\n\n\n            URL.revokeObjectURL(data.path.i);\n\n            data.path = {i: URL.createObjectURL(event.newFile)};\n\n            this.$emit(\"evtReplaceFile\", {name: event.name, oldData: oldData, data: data});\n        },\n\n        containsFile: function(file) {\n            var ret = false;\n            \n            this.varMap.forEach(function(data){\n               if(data.fileName == file.name){\n                   ret = true;\n               } \n            });\n\n            return ret;\n        },\n\n        containsVar: function(varName){\n            var ret = false;\n\n            this.varMap.forEach(function(data, key){\n               if(key == varName){\n                   ret = true;\n               } \n            });\n\n            return ret;\n        }\n    }\n}\n</script>\n\n<style scoped>\n    #upload_list{\n        display: block;\n        border: solid lightgray;\n        border-radius: 5px;\n        border-width: 2px;\n    }\n\n    #flex_div{\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        \n    }\n\n    #list_div{\n        display: flex;\n        flex-direction: column;\n        border: solid lightgray;\n        border-radius: 5px;\n        border-width: 1px;\n    }\n\n    #list{\n        text-align: center;\n    }\n\n    #list_view{\n        width: 40%;\n    }\n\n    input[type=\"file\"] {\n        display: none;\n    }\n\n    button{\n        outline: none;\n    }\n\n    ul{\n        list-style: none;\n        text-align: center;\n    }\n\n    #upload_btn {\n        cursor: pointer;\n    }\n\n\t@keyframes border_anim{\n        from{border: solid white;        \n                border-width: 2px;\n                border-radius: 5px;\n                padding: 5px;}\n\n        to{border:solid gray;\n            border-width: 2px;\n            border-radius: 5px;\n            padding: 5px;}\n        }\n\n    .sidebar_button{\n\t\tborder: solid white;\n        border-width: 2px;\n\t\tborder-radius: 5px;\n        padding: 5px;\n\t}\n\n\t.sidebar_button:hover{\n\t\tanimation: border_anim;\n\t\tanimation-fill-mode: forwards;\n\t\tanimation-duration: 500ms;\n\t}\n\n</style>"]}]}