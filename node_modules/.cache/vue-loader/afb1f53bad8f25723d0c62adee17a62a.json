{"remainingRequest":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/components/editor/Editor.vue?vue&type=style&index=1&lang=css&","dependencies":[{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/components/editor/Editor.vue","mtime":1604699326243},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiogewogIHNjcm9sbGJhci13aWR0aDogMjBweDsKICBzY3JvbGxiYXItY29sb3I6IGxpZ2h0Z3JheSB0cmFuc3BhcmVudDsKfQoKLyogV29ya3Mgb24gQ2hyb21lL0VkZ2UvU2FmYXJpICovCio6Oi13ZWJraXQtc2Nyb2xsYmFyIHsKICBoZWlnaHQ6IDVweDsKICB3aWR0aDogNXB4Owp9Cio6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrIHsKICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDsKfQoqOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7CiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5OwogIGJvcmRlci1yYWRpdXM6IDIwcHg7Cn0KCio6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iOmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjAwLCAyMDAsIDIwMCk7CiAgYm9yZGVyLXJhZGl1czogMjBweDsKfQo="},{"version":3,"sources":["Editor.vue"],"names":[],"mappingsisDA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Editor.vue","sourceRoot":"src/components/editor","sourcesContent":["<template>\n  <div class=\"editor\">\n    <v-card\n      fluid\n      outlined\n      class=\"column\"\n      id=\"toolBar\"\n      :width=\"this.toolsWidth\"\n      :height=\"this.contentHeight\"\n    >\n      <gso\n        v-bind:key=\"this.renderHints.gsoRenderKey\"\n        v-bind:isLoggedIn=\"this.isLoggedIn\"\n        v-bind:storyName=\"this.storyName\"\n        v-bind:minimized=\"this.hideItem\"\n        v-on:evtDownloadStory=\"downloadStory\"\n        v-on:evtViewHTML=\"viewStoryHTML\"\n        v-on:evtNewStoryName=\"changeStoryName\"\n        v-on:evtSave=\"saveStoryToProfile\"\n        v-on:evtPublish=\"getExportFile\"\n        v-on:evtNewStory=\"loadTwee\"\n        v-on:evtCreateNewStory=\"loadStoryTemplate\"\n      />\n\n      <v-toolbar color=\"orange darken-2\" flat dark>\n        <v-toolbar-title>\n          <h4>TOOLS</h4>\n        </v-toolbar-title>\n        <v-spacer />\n        <v-btn fab light x-small @click=\"hideTools\">\n          <v-icon>{{toolButton}}</v-icon>\n        </v-btn>\n      </v-toolbar>\n\n      <v-tabs vertical color=\"orange darken-2\">\n        <v-tab\n          v-on:click=\"renderHints.inVariableEditor = true; renderHints.inMediaEditor = false; hideThemes(); \"\n        >\n          <h5>Text</h5>\n        </v-tab>\n\n        <v-tab\n          v-on:click=\"renderHints.inVariableEditor = false; renderHints.inMediaEditor = true; hideThemes(); \"\n        >\n          <h5>Media</h5>\n        </v-tab>\n\n        <v-tab\n          v-on:click=\"renderHints.inVariableEditor = false; renderHints.inMediaEditor = false; showThemes(); \"\n        >\n          <h5>Themes</h5>\n        </v-tab>\n\n        <v-tab\n          v-on:click=\"renderHints.inVariableEditor = false; renderHints.inMediaEditor = false; hideThemes(); \"\n        >\n          <h5>Passages</h5>\n        </v-tab>\n\n        <v-tab-item :hidden=\"this.hideItem\">\n          <v-card flat>\n            <v-card-text>\n              <var-sidebar\n                id=\"var_sidebar\"\n                v-bind:key=\"this.renderHints.variableRenderKey\"\n                v-bind:storyVars=\"this.storyVariables\"\n                v-on:evtVarValueChange=\"setVariable\"\n                v-on:evtVarNameChange=\"setVariableName\"\n                v-on:evtDelete=\"deleteVariable\"\n                v-on:evtDispVars=\"regenerateStoryText\"\n                v-on:evtNewVar=\"addNewVariable\"\n              ></var-sidebar>\n            </v-card-text>\n          </v-card>\n        </v-tab-item>\n\n        <v-tab-item :hidden=\"this.hideItem\">\n          <v-card flat>\n            <v-card-text>\n              <media-sidebar\n                id=\"media_sidebar\"\n                v-bind:key=\"this.renderHints.mediaRenderKey\"\n                v-bind:imageVars=\"this.imageVariables\"\n                v-bind:audioVars=\"this.audioVariables\"\n                v-bind:status=\"this.status\"\n                v-on:evtDispVars=\"regenerateStoryText\"\n                v-on:evtReplaceImage=\"replaceImage\"\n                v-on:evtReplaceAudio=\"replaceAudio\"\n                v-on:evtAudioNameChange=\"replaceAudioName\"\n                v-on:evtImageNameChange=\"replaceImageName\"\n                v-on:evtNewImageVariable=\"addImageVariable\"\n                v-on:evtNewAudioVariable=\"addAudioVariable\"\n                v-on:evtAddImage=\"addImageToPage\"\n                v-on:evtAddAudio=\"addAudioToPage\"\n                v-on:evtRemoveImage=\"removeImageVariable\"\n                v-on:evtRemoveAudio=\"removeAudioVariable\"\n              ></media-sidebar>\n            </v-card-text>\n          </v-card>\n        </v-tab-item>\n\n        <v-tab-item :hidden=\"this.hideItem\">\n          <v-card flat>\n            <v-card-text>\n              <themes-sidebar\n                id=\"themes_sidebar\"\n                v-on:evtNewTheme=\"setTheme\"\n                v-on:evtNewThemeAll=\"setThemeAll\"\n                v-bind:backgroundColor=\"this.storyPages[this.currentPage - 1].extractCSSProperty('background-color')\"\n                v-bind:textColor=\"this.storyPages[this.currentPage - 1].extractCSSProperty('color')\"\n              ></themes-sidebar>\n            </v-card-text>\n          </v-card>\n        </v-tab-item>\n        <v-tab-item :hidden=\"this.hideItem\">\n          <v-card flat>\n            <v-card-text>\n              <passage-sidebar\n                id=\"passage_sidebar\"\n                v-bind:storyPages=\"this.storyPages\"\n                v-bind:currPassage=\"this.storyPages[this.currentPage - 1].pageName\"\n                v-bind:key=\"this.renderHints.passageRenderKey\"\n                v-on:evtNewPassageName=\"updatePassageName\"\n                v-on:evtRemoveLink=\"removeLink\"\n                v-on:evtAddLink=\"addLink\"\n                v-on:evtGoToPage=\"goToPage\"\n                v-on:evtCreateNew=\"addPage\"\n                v-on:evtDelete=\"deletePassage\"\n              ></passage-sidebar>\n            </v-card-text>\n          </v-card>\n        </v-tab-item>\n      </v-tabs>\n\n      <div style=\"border-top: solid 2px lightgray; padding: 10px;\">\n        <v-card-text>\n          Need help using the editor? Visit\n          <a href=\"MyTale Guide.html\" target=\"_blank\">Support</a>.\n        </v-card-text>\n      </div>\n    </v-card>\n\n    <v-card\n      outlined\n      class=\"column\"\n      id=\"storyPage\"\n      :width=\"this.pageWidth\"\n      :height=\"this.contentHeight\"\n    >\n      <page-layout\n        id=\"page_layout\"\n        v-bind:key=\"this.renderHints.renderKey\"\n        v-bind:page=\"this.storyPages[this.currentPage - 1]\"\n        v-bind:imageVars=\"this.imageVariables\"\n        v-bind:audioVars=\"this.audioVariables\"\n        v-bind:themeView=\"this.themeView\"\n        v-on:evtNext=\"nextPage\"\n        v-on:evtStart=\"goToStart\"\n        v-on:evtPrev=\"prevPage\"\n        v-on:evtPassageNameChange=\"updatePassageName\"\n        v-on:evtPassageChange=\"updatePassage\"\n        v-on:evtDelete=\"deletePassage\"\n        v-on:evtMinHeight=\"setMinHeight\"\n        v-on:evtStartPage=\"setStartPage\"\n        v-on:removeImageFromPage=\"removeImageFromPage\"\n        v-on:removeAudioFromPage=\"removeAudioFromPage\"\n      ></page-layout>\n\n      <v-tooltip bottom>\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-btn v-bind=\"attrs\" v-on=\"on\" top left absolute icon light @click=\"goFullScreen\">\n            <v-icon>{{fullButton}}</v-icon>\n          </v-btn>\n        </template>\n        <span>{{!inFullMode ? \"Full Screen\": \"Exit Full Screen\"}}</span>\n      </v-tooltip>\n    </v-card>\n  </div>\n</template>\n\n<script>\nimport Sidebar_Variables from \"./tools/variables/Sidebar_Variables.vue\";\nimport Sidebar_Media from \"./tools/media/Sidebar_Media.vue\";\nimport Sidebar_Themes from \"./tools/themes/Sidebar_Themes.vue\";\nimport Sidebar_Passage from \"./tools/passage/Sidebar_Passage.vue\";\nimport Global_Story_Options from \"./tools/options/Global_Story_Options.vue\";\nimport Page_Layout from \"./Page_Layout.vue\";\n\nimport FileConverter from \"@/js/extwee_utils/FileConverter.js\";\nimport StoryEditor from \"@/js/extwee_utils/StoryEditor.js\";\nimport firebase from \"firebase\";\nimport { db } from \"@/firebaseConfig\";\nimport storyMixin from \"../../mixins/storyMixin\";\nimport tweeConverter from \"../../mixins/tweeConverterMixin\";\nimport Axios from \"axios\";\nimport FileSaver from \"browser-filesaver\";\nimport debounce from \"debounce\";\n\nvar JSZip = require(\"jszip\");\n\nexport default {\n  name: \"editor\",\n\n  data() {\n    return {\n      isLoggedIn: false,\n\n      /////\n      userRef: null,\n      storyRef: null,\n      basePath: \"\",\n      totalFileSize: 0,\n      maxStorageSize: 15,\n      status: \"\",\n      /////\n\n      storyName: \"\",\n      storyPages: Array,\n      storyVariables: Map,\n      imageVariables: Map,\n      audioVariables: Map,\n\n      currentPage: 1,\n      pagesVisited: [],\n\n      toolsWidth: \"30%\",\n\n      pageWidth: \"70%\",\n      contentHeight: \"74vh\",\n      minHeight: \"500px\",\n      hideItem: false,\n      toolButton: \"mdi-minus\",\n      fullButton: \"mdi-fullscreen\",\n      inFullMode: false,\n\n      themeView: false,\n\n      handles: {\n        storyEditor: StoryEditor,\n        fileConverter: FileConverter\n      },\n\n      renderHints: {\n        renderKey: 1,\n        variableRenderKey: 1,\n        themesRenderKey: 1,\n        passageRenderKey: 1,\n        gsoRenderKey: 1,\n        mediaRenderKey: 1,\n        hidden: true,\n        inVariableEditor: true,\n        inMediaEditor: false\n      },\n\n      hi: \"Hello\",\n      exportFile: \"\"\n    };\n  },\n\n  created: function() {\n    /////\n    if (firebase.auth().currentUser) {\n      this.isLoggedIn = true;\n    }\n    if (this.isLoggedIn) {\n      var storageRef = firebase.storage().ref();\n      var userID = firebase.auth().currentUser.email;\n      this.userRef = storageRef.child(userID);\n    }\n    /////\n\n    if (this.$store.state.storyLocation != \"\") {\n      Axios.get(this.$store.state.storyLocation).then(response => {\n        if (response.data != null) {\n          this.loadContents(response.data);\n          if (\n            sessionStorage.getItem(\"OGstoryPassages\") === \"\" ||\n            sessionStorage.getItem(\"OGstoryPassages\") === null\n          ) {\n            sessionStorage.setItem(\n              \"OGstoryPassages\",\n              JSON.stringify(this.handles.storyEditor.exportedStoryPages)\n            );\n          }\n          sessionStorage.setItem(\"createTemplate\", \"yes\");\n          console.log(\"Read Success\");\n        } else {\n          console.log(\"Read Fail\");\n        }\n      });\n    } else if (this.$store.state.storyContent != \"\") {\n      console.log(sessionStorage.getItem(\"storyContent\"));\n      this.loadContents(this.$store.state.storyContent);\n      if (sessionStorage.getItem(\"OGstoryPassages\") === \"\") {\n        sessionStorage.setItem(\n          \"OGstoryPassages\",\n          JSON.stringify(this.handles.storyEditor.exportedStoryPages)\n        );\n      }\n      //this.handles.storyEditor.removeVariableInject();\n      this.regenerateStoryText({ disp: true });\n    }\n\n    if (this.isLoggedIn) {\n      if (this.storyName == \"\") {\n        this.storyName = \"Story Template\";\n      }\n      this.storyRef = this.userRef.child(this.storyName);\n      this.basePath = this.isLoggedIn.email + \"/\" + this.storyName + \"/\";\n    }\n\n    /////\n    if (this.isLoggedIn) {\n      this.storyRef.listAll().then(\n        function(result) {\n          result.items.forEach(\n            function(mediaRef) {\n              var key =\n                \"@\" + mediaRef.name.substring(0, mediaRef.name.indexOf(\"=\"));\n\n              if (this.imageVariables.has(key)) {\n                var currValue = this.imageVariables.get(key);\n                var value = {\n                  file: currValue.file,\n                  fileName: mediaRef.name.substring(\n                    mediaRef.name.indexOf(\"=\") + 1\n                  ),\n                  path: mediaRef.getDownloadURL(),\n                  id: currValue.id,\n                  color: currValue.color,\n                  uploaded: true\n                };\n                this.handles.storyEditor.setImageVariable(key, value);\n                this.totalFileSize += currValue.file.size / 1024 / 1024;\n              }\n              if (this.audioVariables.has(key)) {\n                currValue = this.audioVariables.get(key);\n                value = {\n                  file: currValue.file,\n                  fileName: mediaRef.name.substring(\n                    mediaRef.name.indexOf(\"=\") + 1\n                  ),\n                  path: mediaRef.getDownloadURL(),\n                  id: currValue.id,\n                  color: currValue.color,\n                  uploaded: true\n                };\n                this.handles.storyEditor.setAudioVariable(key, value);\n                this.totalFileSize += currValue.file.size / 1024 / 1024;\n              }\n              console.log(this.imageVariables);\n              console.log(this.audioVariables);\n            }.bind(this)\n          );\n        }.bind(this)\n      );\n    }\n    /////\n  },\n\n  components: {\n    \"var-sidebar\": Sidebar_Variables,\n    \"media-sidebar\": Sidebar_Media,\n    \"themes-sidebar\": Sidebar_Themes,\n    \"passage-sidebar\": Sidebar_Passage,\n    \"page-layout\": Page_Layout,\n    gso: Global_Story_Options\n  },\n\n  watch: {\n    status: debounce(function() {\n      if (this.status.includes(\"success\")) {\n        this.status = \"\";\n        this.renderHints.renderKey++;\n        this.checkRenderHints();\n      }\n    }, 3000)\n  },\n\n  methods: {\n    loadTwee: function(files) {\n      console.log(files);\n\n      const file = files[0];\n\n      var isHTML = file.name.includes(\".html\");\n\n      this.storyVariables = null;\n      this.storyLinkPassages = null;\n      this.storyDispPassages = null;\n\n      this.handles.storyEditor = null;\n      this.handles.fileConverter = null;\n\n      const tempFileReader = new FileReader();\n\n      tempFileReader.onload = () => {\n        // alert(tempFileReader.result);\n\n        this.handles.fileConverter = new FileConverter(\n          tempFileReader.result,\n          isHTML\n        );\n        this.handles.storyEditor = new StoryEditor(\n          this.handles.fileConverter.story\n        );\n        this.storyVariables = this.handles.storyEditor.variables;\n        this.imageVariables = this.handles.storyEditor.imageVariables;\n        this.audioVariables = this.handles.storyEditor.audioVariables;\n        this.storyPages = this.handles.storyEditor.exportedStoryPages;\n        this.storyName = this.handles.storyEditor.baseStory.name;\n\n        this.goToStart();\n\n        this.renderHints.renderKey++;\n        this.renderHints.variableRenderKey++;\n        this.renderHints.passageRenderKey++;\n        this.renderHints.gsoRenderKey++;\n\n        this.renderHints.hidden = true;\n        this.checkRenderHints();\n\n        sessionStorage.setItem(\"storyContent\", tempFileReader.result);\n        sessionStorage.setItem(\"storyLocation\", \"\");\n\n        this.regenerateStoryText({ disp: this.renderHints.hidden });\n      };\n      tempFileReader.readAsText(file);\n    },\n\n    loadContents: function(contents) {\n      this.storyVariables = null;\n      this.storyLinkPassages = null;\n      this.storyDispPassages = null;\n\n      this.handles.storyEditor = null;\n      this.handles.fileConverter = null;\n\n      this.handles.fileConverter = new FileConverter(contents, false);\n      this.handles.storyEditor = new StoryEditor(\n        this.handles.fileConverter.story\n      );\n      this.storyVariables = this.handles.storyEditor.variables;\n      this.imageVariables = this.handles.storyEditor.imageVariables;\n      this.audioVariables = this.handles.storyEditor.audioVariables;\n      this.storyPages = this.handles.storyEditor.exportedStoryPages;\n      this.storyName = this.handles.storyEditor.baseStory.name;\n\n      this.goToStart();\n\n      this.renderHints.renderKey++;\n      this.renderHints.variableRenderKey++;\n      this.renderHints.passageRenderKey++;\n      this.renderHints.gsoRenderKey++;\n\n      this.renderHints.hidden = true;\n      this.checkRenderHints();\n\n      this.regenerateStoryText({ disp: this.renderHints.hidden });\n    },\n\n    loadStoryTemplate: function() {\n      console.log(\"story template\");\n\n      Axios.get(\"/stories/Story Template.twee\").then(response => {\n        if (response.data != null) {\n          this.loadContents(response.data);\n          sessionStorage.setItem(\n            \"OGstoryPassages\",\n            JSON.stringify(this.handles.storyEditor.exportedStoryPages)\n          );\n          sessionStorage.setItem(\"createTemplate\", \"yes\");\n          console.log(\"Read Success\");\n        } else {\n          console.log(\"Read Fail\");\n        }\n      });\n\n      this.regenerateStoryText({ disp: this.renderHints.hidden });\n    },\n\n    replaceImage: function(event) {\n      this.handles.storyEditor.setImageVariable(event.name, event.data);\n\n      this.writeToStorage();\n\n      this.renderHints.renderKey++;\n      this.renderHints.mediaRenderKey++;\n      this.checkRenderHints();\n\n      /////\n      var imgData = this.imageVariables.get(event.name);\n      if (this.isLoggedIn) {\n        var removeRef = this.storyRef.child(\n          event.name.replace(\"@\", \"\") + \"=\" + event.oldData.fileName\n        );\n        removeRef.delete().then(function() {\n          this.status =\n            \"Uploading \" + event.data.fileName + \"... please be patient :)\";\n        });\n        this.totalFileSize -= event.oldData.file.size / 1024 / 1024;\n        this.totalFileSize += event.data.file.size / 1024 / 1024;\n\n        if (this.totalFileSize > this.maxStorageSize) {\n          this.totalFileSize -= event.data.file.size / 1024 / 1024;\n          this.totalFileSize += event.oldData.file.size / 1024 / 1024;\n          this.status =\n            \"Sorry! It looks like you've run out of storage space. Try uploading a smaller file!\";\n\n          this.handles.storyEditor.setImageVariable(event.name, event.oldData);\n          this.renderHints.renderKey++;\n          this.renderHints.mediaRenderKey++;\n          this.checkRenderHints();\n        } else {\n          var newRef = this.storyRef.child(\n            event.name.replace(\"@\", \"\") + \"=\" + event.data.fileName\n          );\n          newRef.put(event.data.file).then(\n            function() {\n              this.status =\n                \"Upload for \" + event.data.fileName + \" successful!\";\n              var obj = {\n                file: event.data.file,\n                fileName: event.data.fileName,\n                path: newRef.getDownloadURL(),\n                color: imgData.color,\n                id: imgData.id,\n                uploaded: true\n              };\n              this.handles.storyEditor.setImageVariable(event.name, obj);\n\n              this.renderHints.renderKey++;\n              this.renderHints.mediaRenderKey++;\n              this.checkRenderHints();\n\n              console.log(this.imageVariables);\n            }.bind(this)\n          );\n        }\n      }\n      /////\n    },\n\n    replaceAudio: function(event) {\n      this.handles.storyEditor.setAudioVariable(event.name, event.data);\n\n      this.writeToStorage();\n\n      this.renderHints.renderKey++;\n      this.renderHints.mediaRenderKey++;\n      this.checkRenderHints();\n\n      /////\n      var audData = this.audioVariables.get(event.name);\n      if (this.isLoggedIn) {\n        var removeRef = this.storyRef.child(\n          event.name.replace(\"@\", \"\") + \"=\" + event.oldData.fileName\n        );\n        removeRef.delete().then(function() {\n          this.status =\n            \"Uploading \" + event.data.fileName + \"... please be patient :)\";\n        });\n        this.totalFileSize -= event.oldData.file.size / 1024 / 1024;\n        this.totalFileSize += event.data.file.size / 1024 / 1024;\n\n        if (this.totalFileSize > this.maxStorageSize) {\n          this.totalFileSize -= event.data.file.size / 1024 / 1024;\n          this.totalFileSize += event.oldData.file.size / 1024 / 1024;\n          this.status =\n            \"Sorry! It looks like you've run out of storage space. Try uploading a smaller file!\";\n\n          this.handles.storyEditor.setAudioVariable(event.name, event.oldData);\n          this.renderHints.renderKey++;\n          this.renderHints.mediaRenderKey++;\n          this.checkRenderHints();\n        } else {\n          var newRef = this.storyRef.child(\n            event.name.replace(\"@\", \"\") + \"=\" + event.data.fileName\n          );\n          newRef.put(event.data.file).then(\n            function() {\n              this.status =\n                \"Upload for \" +\n                event.data.fileName +\n                \" successful... thanks for waiting!\";\n              var obj = {\n                file: event.data.file,\n                fileName: event.data.fileName,\n                path: newRef.getDownloadURL(),\n                color: audData.color,\n                id: audData.id,\n                uploaded: true\n              };\n              this.handles.storyEditor.setAudioVariable(event.name, obj);\n\n              this.renderHints.renderKey++;\n              this.renderHints.mediaRenderKey++;\n              this.checkRenderHints();\n\n              console.log(this.audioVariables);\n            }.bind(this)\n          );\n        }\n      }\n      /////\n    },\n\n    replaceImageName: function(event) {\n      var process = this.handles.storyEditor.changeImageVariableName(event);\n\n      this.writeToStorage();\n\n      this.renderHints.renderKey++;\n      this.renderHints.mediaRenderKey++;\n      this.checkRenderHints();\n\n      /////\n      var fileName = event.fileName;\n      if (this.isLoggedIn && process) {\n        var removeRef = this.storyRef.child(\n          event.prevName.replace(\"@\", \"\") + \"=\" + fileName\n        );\n        removeRef.delete();\n        var imgData = this.imageVariables.get(event.newName);\n        var newRef = this.storyRef.child(\n          event.newName.replace(\"@\", \"\") + \"=\" + fileName\n        );\n        newRef.put(imgData.file).then(\n          function() {\n            this.status = \"Your changes were saved successfully!\";\n\n            if (imgData.path.i.includes(\"blob\")) {\n              URL.revokeObjectURL(imgData.path.i);\n            }\n\n            var obj = {\n              file: imgData.file,\n              fileName: fileName,\n              path: newRef.getDownloadURL(),\n              color: imgData.color,\n              id: imgData.id,\n              uploaded: true\n            };\n            this.handles.storyEditor.setImageVariable(event.newName, obj);\n\n            this.renderHints.renderKey++;\n            this.renderHints.mediaRenderKey++;\n            this.checkRenderHints();\n\n            //console.log(this.imageVariables);\n          }.bind(this)\n        );\n      }\n      /////\n    },\n\n    replaceAudioName: function(event) {\n      var process = this.handles.storyEditor.changeAudioVariableName(event);\n\n      this.writeToStorage();\n\n      this.renderHints.renderKey++;\n      this.renderHints.mediaRenderKey++;\n      this.checkRenderHints();\n\n      /////\n      var fileName = event.fileName;\n      if (this.isLoggedIn && process) {\n        var removeRef = this.storyRef.child(\n          event.prevName.replace(\"@\", \"\") + \"=\" + fileName\n        );\n        removeRef.delete();\n        var audData = this.audioVariables.get(event.newName);\n        var newRef = this.storyRef.child(\n          event.newName.replace(\"@\", \"\") + \"=\" + fileName\n        );\n        newRef.put(audData.file).then(\n          function() {\n            this.status = \"Your changes were saved successfully!\";\n\n            if (audData.path.i.includes(\"blob\")) {\n              URL.revokeObjectURL(audData.path.i);\n            }\n\n            var obj = {\n              file: audData.file,\n              fileName: fileName,\n              path: newRef.getDownloadURL(),\n              color: audData.color,\n              id: audData.id,\n              uploaded: true\n            };\n            this.handles.storyEditor.setAudioVariable(event.newName, obj);\n\n            this.renderHints.renderKey++;\n            this.renderHints.mediaRenderKey++;\n            this.checkRenderHints();\n\n            console.log(this.audioVariables);\n          }.bind(this)\n        );\n      }\n      /////\n    },\n\n    addImageVariable: function(event) {\n      for (var i = 0; i < event.length; i++) {\n        this.handles.storyEditor.addImageVariable(event[i]);\n      }\n      this.handles.storyEditor.reparseMedia();\n\n      this.writeToStorage();\n\n      this.renderHints.renderKey++;\n      this.renderHints.mediaRenderKey++;\n      this.checkRenderHints();\n\n      /////\n      if (this.isLoggedIn) {\n        this.imageVariables.forEach(\n          function(value, key) {\n            this.status =\n              \"Uploading \" + value.fileName + \"... please be patient :)\";\n            console.log(\"Uploaded:\" + value.uploaded);\n\n            if (value.uploaded == false) {\n              var currImageRef = this.storyRef.child(\n                key.replace(\"@\", \"\") + \"=\" + value.fileName\n              );\n              var file = value.file;\n              this.totalFileSize += file.size / 1024 / 1024;\n              if (this.totalFileSize > this.maxStorageSize) {\n                this.totalFileSize -= file.size / 1024 / 1024;\n                this.status =\n                  \"Sorry! It looks like you've run out of storage space. Try uploading smaller files!\";\n                //this.handles.storyEditor.deleteImageVariable(key);\n                this.removeImageVariable({\n                  name: key,\n                  fileName: value.fileName,\n                  file: value.file\n                });\n              } else {\n                currImageRef.put(file).then(\n                  function() {\n                    this.status =\n                      \"Upload for \" +\n                      value.fileName +\n                      \" successful... thanks for waiting!\";\n\n                    if (value.path.i.includes(\"blob\")) {\n                      URL.revokeObjectURL(value.path.i);\n                    }\n\n                    var obj = {\n                      file: value.file,\n                      fileName: value.fileName,\n                      path: currImageRef.getDownloadURL(),\n                      color: value.color,\n                      id: value.id,\n                      uploaded: true\n                    };\n                    this.handles.storyEditor.setImageVariable(key, obj);\n                    //console.log(this.imageVariables);\n                    //console.log(this.totalFileSize);\n\n                    this.renderHints.renderKey++;\n                    this.renderHints.mediaRenderKey++;\n                    this.checkRenderHints();\n                  }.bind(this)\n                );\n              }\n            }\n          }.bind(this)\n        );\n      }\n      /////\n    },\n\n    addAudioVariable: function(event) {\n      for (var i = 0; i < event.length; i++) {\n        this.handles.storyEditor.addAudioVariable(event[i]);\n      }\n      this.handles.storyEditor.reparseMedia();\n\n      this.writeToStorage();\n\n      this.renderHints.renderKey++;\n      this.renderHints.mediaRenderKey++;\n      this.checkRenderHints();\n\n      /////\n      if (this.isLoggedIn) {\n        this.audioVariables.forEach(\n          function(value, key) {\n            this.status =\n              \"Uploading \" + value.fileName + \"... please be patient :)\";\n            console.log(\"Uploaded:\" + value.uploaded);\n\n            if (value.uploaded == false) {\n              var currAudRef = this.storyRef.child(\n                key.replace(\"@\", \"\") + \"=\" + value.fileName\n              );\n              var file = value.file;\n              this.totalFileSize += file.size / 1024 / 1024;\n              if (this.totalFileSize > this.maxStorageSize) {\n                this.totalFileSize -= file.size / 1024 / 1024;\n                this.status =\n                  \"Sorry! It looks like you've run out of storage space. Try uploading smaller files!\";\n                //this.handles.storyEditor.deleteAudioVariable(key);\n                this.removeAudioVariable({\n                  name: key,\n                  fileName: value.fileName,\n                  file: value.file\n                });\n              } else {\n                currAudRef.put(file).then(\n                  function() {\n                    this.status =\n                      \"Upload for \" +\n                      value.fileName +\n                      \" successful... thanks for waiting!\";\n\n                    if (value.path.i.includes(\"blob\")) {\n                      URL.revokeObjectURL(value.path.i);\n                    }\n\n                    var obj = {\n                      file: value.file,\n                      fileName: value.fileName,\n                      path: currAudRef.getDownloadURL(),\n                      color: value.color,\n                      id: value.id,\n                      uploaded: true\n                    };\n                    this.handles.storyEditor.setAudioVariable(key, obj);\n                    console.log(this.audioVariables);\n                    console.log(this.totalFileSize);\n\n                    this.renderHints.renderKey++;\n                    this.renderHints.mediaRenderKey++;\n                    this.checkRenderHints();\n                  }.bind(this)\n                );\n              }\n            }\n          }.bind(this)\n        );\n      }\n      /////\n    },\n\n    removeImageVariable: function(event) {\n      this.handles.storyEditor.deleteImageVariable(event);\n\n      this.writeToStorage();\n\n      this.renderHints.renderKey++;\n      this.renderHints.mediaRenderKey++;\n      this.checkRenderHints();\n\n      /////\n      if (this.isLoggedIn) {\n        var removeRef = this.storyRef.child(\n          event.name.replace(\"@\", \"\") + \"=\" + event.fileName\n        );\n        removeRef.delete().then(function() {\n          console.log(\"DELETED\");\n        });\n        this.writeToStorage();\n        this.totalFileSize -= event.file.size / 1024 / 1024;\n      }\n      /////\n    },\n\n    removeAudioVariable: function(event) {\n      this.handles.storyEditor.deleteAudioVariable(event);\n\n      this.writeToStorage();\n\n      this.renderHints.renderKey++;\n      this.renderHints.mediaRenderKey++;\n      this.checkRenderHints();\n\n      /////\n      if (this.isLoggedIn) {\n        var removeRef = this.storyRef.child(\n          event.name.replace(\"@\", \"\") + \"=\" + event.fileName\n        );\n        removeRef.delete().then(function() {\n          console.log(\"DELETED\");\n        });\n        this.writeToStorage();\n        this.totalFileSize -= event.file.size / 1024 / 1024;\n      }\n      /////\n    },\n\n    addImageToPage(event) {\n      var data = {\n        name: event.name,\n        pageName: this.storyPages[this.currentPage - 1].pageName\n      };\n      this.handles.storyEditor.addImageToPage(data);\n\n      this.writeToStorage();\n\n      this.renderHints.renderKey++;\n      this.checkRenderHints();\n    },\n\n    addAudioToPage(event) {\n      var data = {\n        name: event.name,\n        pageName: this.storyPages[this.currentPage - 1].pageName\n      };\n      this.handles.storyEditor.addAudioToPage(data);\n\n      this.writeToStorage();\n\n      this.renderHints.renderKey++;\n      this.checkRenderHints();\n    },\n\n    removeImageFromPage(event) {\n      var data = {\n        name: event.name,\n        pageName: this.storyPages[this.currentPage - 1].pageName\n      };\n      this.handles.storyEditor.removeImageFromPage(data);\n\n      this.writeToStorage();\n\n      this.renderHints.renderKey++;\n      this.checkRenderHints();\n    },\n\n    removeAudioFromPage(event) {\n      var data = {\n        name: event.name,\n        pageName: this.storyPages[this.currentPage - 1].pageName\n      };\n      this.handles.storyEditor.removeAudioFromPage(data);\n\n      this.writeToStorage();\n\n      this.renderHints.renderKey++;\n      this.checkRenderHints();\n    },\n\n    nextPage: function(event) {\n      this.pagesVisited.push(this.currentPage);\n\n      if (event.location < this.storyPages.length) {\n        this.currentPage = event.location + 1;\n      }\n      this.renderHints.renderKey++;\n      this.renderHints.themesRenderKey++;\n      this.checkRenderHints();\n    },\n\n    goToStart: function() {\n      this.pagesVisited = [];\n\n      for (var i = 0; this.storyPages.length; i++) {\n        if (this.storyPages[i].linkPassage.tags.includes(\"start\")) {\n          this.currentPage = i + 1;\n          break;\n        }\n      }\n\n      this.renderHints.renderKey++;\n      this.renderHints.themesRenderKey++;\n      this.checkRenderHints();\n    },\n\n    setStartPage: function(event) {\n      this.handles.storyEditor.setStartPage(event);\n\n      this.writeToStorage();\n\n      this.renderHints.renderKey++;\n      this.renderHints.themesRenderKey++;\n      this.checkRenderHints();\n    },\n\n    prevPage: function() {\n      if (this.pagesVisited.length > 0) {\n        this.currentPage = this.pagesVisited[this.pagesVisited.length - 1];\n        this.pagesVisited.pop();\n      } else {\n        return false;\n      }\n\n      this.renderHints.renderKey++;\n      this.renderHints.themesRenderKey++;\n      this.checkRenderHints();\n\n      return true;\n    },\n\n    addPage: function(event) {\n      this.storyPages[this.currentPage - 1].linkPassage.text +=\n        \"\\n[[\" + event.name + \"]]\";\n      var variablesPassage = this.storyPages[\n        this.currentPage - 1\n      ].linkPassage.tags.includes(\"variables\");\n      this.updatePassage({\n        name: this.storyPages[this.currentPage - 1].linkPassage.name,\n        text: this.storyPages[this.currentPage - 1].linkPassage.text,\n        isVariables: variablesPassage\n      });\n\n      this.handles.storyEditor.addPage({\n        name: event.name,\n        prevLink: this.storyPages[this.currentPage - 1].linkPassage.name\n      });\n\n      this.writeToStorage();\n\n      this.goToPage(event);\n    },\n\n    goToPage: function(event) {\n      for (var i = 0; this.storyPages.length; i++) {\n        if (this.storyPages[i].linkPassage.name == event.name) {\n          this.currentPage = i + 1;\n          break;\n        }\n      }\n\n      this.renderHints.renderKey++;\n      this.checkRenderHints();\n    },\n\n    showThemes: function() {\n      this.themeView = true;\n\n      this.regenerateStoryText({ disp: this.renderHints.hidden });\n\n      this.renderHints.renderKey++;\n      this.renderHints.themesRenderKey++;\n      this.checkRenderHints();\n    },\n\n    hideThemes: function() {\n      this.themeView = false;\n\n      this.regenerateStoryText({ disp: this.renderHints.hidden });\n\n      this.renderHints.renderKey++;\n      this.renderHints.themesRenderKey++;\n      this.checkRenderHints();\n    },\n\n    setTheme: function(event) {\n      this.storyPages[this.currentPage - 1].theme =\n        \"color:\" + event.textColor + \";background-color:\" + event.bgColor;\n      this.renderHints.renderKey++;\n      this.renderHints.themesRenderKey++;\n      this.checkRenderHints();\n    },\n\n    setThemeAll: function(event) {\n      for (var i = 0; i < this.storyPages.length; i++) {\n        this.storyPages[i].theme =\n          \"color:\" + event.textColor + \";background-color:\" + event.bgColor;\n      }\n\n      this.renderHints.renderKey++;\n      this.renderHints.themesRenderKey++;\n      this.checkRenderHints();\n    },\n\n    setVariable: function(event) {\n      this.handles.storyEditor.setTextVariable(event.name, event.value);\n\n      this.writeToStorage();\n\n      this.renderHints.renderKey++;\n      this.checkRenderHints();\n    },\n\n    setVariableName: function(event) {\n      this.handles.storyEditor.changeTextVariableName(event);\n\n      this.writeToStorage();\n      this.renderHints.variableRenderKey++;\n      this.renderHints.renderKey++;\n      this.checkRenderHints();\n    },\n\n    deleteVariable: function(event) {\n      this.handles.storyEditor.deleteTextVariable(event);\n\n      this.writeToStorage();\n      this.renderHints.variableRenderKey++;\n      this.renderHints.renderKey++;\n      this.checkRenderHints();\n    },\n\n    regenerateStoryText: function(event) {\n      this.renderHints.hidden = event.disp;\n\n      this.handles.storyEditor.generateStoryText(\n        this.renderHints.hidden,\n        this.renderHints.inVariableEditor,\n        this.renderHints.inMediaEditor\n      );\n      this.storyVariables = this.handles.storyEditor.variables;\n      this.imageVariables = this.handles.storyEditor.imageVariables;\n      this.audioVariables = this.handles.storyEditor.audioVariables;\n      this.storyPages = this.handles.storyEditor.exportedStoryPages;\n      this.storyName = this.handles.storyEditor.baseStory.name;\n\n      this.renderHints.renderKey++;\n      this.checkRenderHints();\n    },\n\n    addNewVariable: function(event) {\n      this.handles.storyEditor.addTextVariable(event);\n      this.writeToStorage();\n\n      this.renderHints.renderKey++;\n      this.renderHints.variableRenderKey++;\n      this.checkRenderHints();\n    },\n\n    addLink: function(event) {\n      this.handles.storyEditor.addLink({\n        pageName: this.storyPages[this.currentPage - 1].pageName,\n        name: event.name\n      });\n\n      this.writeToStorage();\n\n      this.renderHints.renderKey++;\n      this.renderHints.passageRenderKey++;\n      this.checkRenderHints();\n    },\n\n    removeLink: function(event) {\n      this.handles.storyEditor.removeLink(event);\n\n      this.writeToStorage();\n\n      this.renderHints.renderKey++;\n      this.checkRenderHints();\n    },\n\n    updatePassage: function(event) {\n      this.handles.storyEditor.setPassage(event.name, event.text);\n\n      this.writeToStorage();\n\n      this.renderHints.renderKey++;\n      this.renderHints.passageRenderKey++;\n\n      if (event.isVariables) {\n        this.renderHints.variableRenderKey++;\n      }\n\n      this.checkRenderHints();\n    },\n\n    updatePassageName: function(event) {\n      this.handles.storyEditor.changePassageName(event);\n\n      this.writeToStorage();\n\n      this.renderHints.renderKey++;\n      this.renderHints.passageRenderKey++;\n      this.checkRenderHints();\n    },\n\n    deletePassage: function(event) {\n      this.handles.storyEditor.deletePassage(event);\n\n      this.writeToStorage();\n\n      this.renderHints.passageRenderKey++;\n\n      if (!this.prevPage()) {\n        this.goToStart();\n      }\n    },\n\n    changeStoryName(event) {\n      this.handles.storyEditor.changeStoryName(event);\n\n      this.writeToStorage();\n\n      this.renderHints.renderKey++;\n      this.checkRenderHints();\n    },\n\n    downloadStoryTwee: function() {\n      var storyView = this.handles.storyEditor.generateSaveStory();\n      this.handles.fileConverter.story = storyView;\n\n      var tweeBlob = this.handles.fileConverter.twee();\n\n      var dlblob = new Blob([tweeBlob], { type: \"text/plain\" });\n\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(dlblob);\n      link.target = \"_blank\";\n      link.setAttribute(\n        \"download\",\n        this.handles.storyEditor.baseStory.name + \".twee\"\n      );\n      link.click();\n      URL.revokeObjectURL(link.href);\n      //this.handles.storyEditor.removeVariableInject();\n    },\n\n    saveStoryToProfile() {\n      var cloudStory = this.handles.storyEditor.generateSaveStory();\n      this.handles.fileConverter.story = cloudStory;\n      var tweeBlob = this.handles.fileConverter.twee();\n\n      var d = new Date();\n      var draftObj = {\n        text: tweeBlob,\n        dateUpdated:\n          d.getMonth() + 1 + \"/\" + d.getDate() + \"/\" + d.getFullYear(),\n        OGstory: sessionStorage.getItem(\"OGstoryPassages\")\n      };\n      if (\n        db.ref(\n          \"accounts/\" +\n            firebase.auth().currentUser.uid +\n            \"/drafts/\" +\n            this.handles.storyEditor.baseStory.name\n        )\n      ) {\n        db.ref(\n          \"accounts/\" +\n            firebase.auth().currentUser.uid +\n            \"/drafts/\" +\n            this.handles.storyEditor.baseStory.name\n        ).update(draftObj);\n      } else {\n        db.ref(\n          \"accounts/\" +\n            firebase.auth().currentUser.uid +\n            \"/drafts/\" +\n            this.handles.storyEditor.baseStory.name\n        ).push(draftObj);\n      }\n      alert(\"Your story was saved successfully!\");\n    },\n\n    getExportFile() {\n      var cloudStory = this.handles.storyEditor.generatePublishStory();\n      this.handles.fileConverter.story = cloudStory;\n      var tweeBlob = this.handles.fileConverter.twee();\n      this.$store.commit(\"updateStoryPublish\", tweeBlob);\n    },\n\n    downloadStory: function() {\n      var storyView = this.handles.storyEditor.generateViewStory(true);\n      this.handles.fileConverter.story = storyView;\n      var htmlBlob = this.handles.fileConverter.html(\n        this.handles.storyEditor.css,\n        \"\"\n      );\n\n      storyView = this.handles.storyEditor.generateSaveStory();\n      this.handles.fileConverter.story = storyView;\n      var tweeBlob = this.handles.fileConverter.twee();\n\n      var zip = new JSZip();\n      zip.file(this.storyName + \".html\", htmlBlob);\n      zip.file(this.storyName + \".twee\", tweeBlob);\n      zip.file(\n        \"readMe.txt\",\n        \"To view the story, double click on the html file.\\nIf the user wants to re-edit the story, they must upload the .twee file to our website.\\nCreate an account to save stories, download stories and more!\"\n      );\n\n      var name = this.storyName;\n\n      zip.generateAsync({ type: \"blob\" }).then(function(content) {\n        // see FileSaver.js\n        FileSaver.saveAs(content, name + \".zip\");\n      });\n      //this.handles.fileConverter.html(event.css, event.js);\n    },\n\n    viewStoryHTML: function() {\n      var storyView = this.handles.storyEditor.generateViewStory(true);\n      this.handles.fileConverter.story = storyView;\n\n      //this.handles.fileConverter.html(event.css, event.js);\n\n      var htmlBlob = this.handles.fileConverter.html(\n        this.handles.storyEditor.css,\n        \"\"\n      );\n\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(\n        new Blob([htmlBlob], { type: \"text/html\" })\n      );\n      link.target = \"_blank\";\n      //link.setAttribute('download',  this.handles.storyEditor.baseStory.name + '.html');\n      link.click();\n      URL.revokeObjectURL(link.href);\n      //this.handles.storyEditor.removeVariableInject();\n    },\n\n    /*viewHTMLBlob: function(htmlContents){\n            const link = document.createElement('a');\n            link.href = URL.createObjectURL(new Blob([htmlContents], {type: \"text/html\"}));\n            link.target = \"_blank\"\n            //link.setAttribute('download',  this.handles.storyEditor.baseStory.name + '.html');\n            link.click();\n            URL.revokeObjectURL(link.href);\n        },*/\n\n    publishStoryType: function() {\n      var templateChanged = this.checkUniqueStory();\n      if (\n        sessionStorage.getItem(\"createTemplate\") === \"yes\" &&\n        templateChanged === true\n      ) {\n        this.checkUniqueTemplate();\n      }\n    },\n\n    checkUniqueTemplate: function() {\n      let canSubmit = true;\n      const Typesense = require(\"typesense\");\n      const typesense = new Typesense.Client({\n        nodes: [\n          {\n            //host: 'localhost',\n            // host: \"vcm-15431.vm.duke.edu\",\n            // port: \"8108\",\n            // protocol: \"https\"\n            host: \"av2xrki6y54hl3wbp-1.a1.typesense.net\",\n            port: \"443\",\n            protocol: \"https\"\n          }\n        ],\n\n        // apiKey: \"YOYCpFLj9u412ihigstCer5Zs2StzptR\"\n        apiKey: \"I1RDnpfBxdpllDchtj7gslzsqwpmnvmi\"\n      });\n\n      typesense\n        .collections(\"stories\")\n        .retrieve()\n        .then(data => {\n          var numDocs = data.num_documents;\n          for (let i = 0; i < numDocs - 1; i++) {\n            typesense\n              .collections(\"stories\")\n              .documents(i.toString())\n              .retrieve()\n              .then(data => {\n                let aFileConverter = new FileConverter(data.text, false);\n                let aStoryEditor = new StoryEditor(aFileConverter.story);\n                var s1 = \"\";\n                var s2 = \"\";\n                for (\n                  let i = 0;\n                  i < aStoryEditor.exportedStoryPages.length;\n                  i++\n                ) {\n                  s1 += aStoryEditor.exportedStoryPages[i].linkPassage.text;\n                }\n                for (let i = 0; i < this.storyPages.length; i++) {\n                  s2 += this.storyPages[i].linkPassage.text;\n                }\n                if (\n                  aStoryEditor.exportedStoryPages.length <\n                  this.storyPages.length\n                ) {\n                  for (\n                    let i = aStoryEditor.exportedStoryPages.length;\n                    i < this.storyPages.length;\n                    i++\n                  ) {\n                    var indexOpenBrackets = this.storyPages[\n                      i\n                    ].linkPassage.text.indexOf(\"[[\");\n                    var indexCloseBrackets = this.storyPages[\n                      i\n                    ].linkPassage.text.indexOf(\"]]\");\n                    var cleanStr = this.storyPages[i].linkPassage.text;\n                    if (indexOpenBrackets != -1) {\n                      var bracketStr = this.storyPages[\n                        i\n                      ].linkPassage.text.substring(\n                        indexOpenBrackets,\n                        indexCloseBrackets + 2\n                      );\n                      cleanStr = this.storyPages[i].linkPassage.text.replace(\n                        bracketStr,\n                        \"\"\n                      );\n                    }\n                    if (\n                      this.storyPages[i].linkPassage.text.includes(\n                        \"This is a new passage. Edit it to create your own story!\"\n                      ) ||\n                      cleanStr.replace(/\\s/g, \"\") === \"\"\n                    ) {\n                      alert(\"Please edit content in new passages.\");\n                      return;\n                    }\n                    s2 += cleanStr;\n                  }\n                }\n                var similarityScore = this.similarity(s1, s2);\n                //console.log(similarityScore);\n                if (similarityScore > 0.75) {\n                  canSubmit = false;\n                  alert(\n                    \"Story template is too similar to existing template. Please submit a unique story template.\"\n                  );\n                  return;\n                }\n                if (\n                  similarityScore <= 0.75 &&\n                  i === numDocs - 2 &&\n                  canSubmit === true\n                ) {\n                  alert(\n                    \"Story template is unique and is ready to be published!\"\n                  );\n                  return;\n                }\n              });\n          }\n        });\n    },\n\n    // Add support for drafts\n    checkUniqueStory: function() {\n      var s1 = \"\";\n      var s2 = \"\";\n      for (\n        let i = 0;\n        i < JSON.parse(sessionStorage.getItem(\"OGstoryPassages\")).length;\n        i++\n      ) {\n        s1 += JSON.parse(sessionStorage.getItem(\"OGstoryPassages\"))[i]\n          .linkPassage.text;\n      }\n      for (let i = 0; i < this.storyPages.length; i++) {\n        s2 += this.storyPages[i].linkPassage.text;\n      }\n      if (\n        JSON.parse(sessionStorage.getItem(\"OGstoryPassages\")).length <\n        this.storyPages.length\n      ) {\n        for (\n          let i = JSON.parse(sessionStorage.getItem(\"OGstoryPassages\")).length;\n          i < this.storyPages.length;\n          i++\n        ) {\n          var indexOpenBrackets = this.storyPages[i].linkPassage.text.indexOf(\n            \"[[\"\n          );\n          var indexCloseBrackets = this.storyPages[i].linkPassage.text.indexOf(\n            \"]]\"\n          );\n          var cleanStr = this.storyPages[i].linkPassage.text;\n          if (indexOpenBrackets != -1) {\n            var bracketStr = this.storyPages[i].linkPassage.text.substring(\n              indexOpenBrackets,\n              indexCloseBrackets + 2\n            );\n            cleanStr = this.storyPages[i].linkPassage.text.replace(\n              bracketStr,\n              \"\"\n            );\n          }\n          if (\n            this.storyPages[i].linkPassage.text.includes(\n              \"This is a new passage. Edit it to create your own story!\"\n            ) ||\n            cleanStr.replace(/\\s/g, \"\") === \"\"\n          ) {\n            alert(\"Please edit content in new passages.\");\n            return false;\n          }\n          s2 += cleanStr;\n        }\n      }\n      var similarityScore = this.similarity(s1, s2);\n      console.log(similarityScore);\n      if (similarityScore > 0.75) {\n        alert(\n          \"Story is too similar to the original. Please submit a unique story.\"\n        );\n        return false;\n      }\n      if (sessionStorage.getItem(\"createTemplate\") != \"yes\") {\n        alert(\"Story is unique and is ready to be published!\");\n      } else {\n        return true;\n      }\n    },\n\n    // Uses Levenshtein distance algorithm\n    similarity: function(s1, s2) {\n      var longer = s1.toLowerCase().replace(/\\s/g, \"\");\n      var shorter = s2.toLowerCase().replace(/\\s/g, \"\");\n      if (s1.length < s2.length) {\n        longer = s2;\n        shorter = s1;\n      }\n      var longerLength = longer.length;\n      if (longerLength == 0) {\n        return 1.0;\n      }\n      return (\n        (longerLength - this.editDistance(longer, shorter)) /\n        parseFloat(longerLength)\n      );\n    },\n\n    editDistance: function(s1, s2) {\n      var costs = new Array();\n      for (var i = 0; i <= s1.length; i++) {\n        var lastValue = i;\n        for (var j = 0; j <= s2.length; j++) {\n          if (i == 0) {\n            costs[j] = j;\n          } else {\n            if (j > 0) {\n              var newValue = costs[j - 1];\n              if (s1.charAt(i - 1) != s2.charAt(j - 1)) {\n                newValue =\n                  Math.min(Math.min(newValue, lastValue), costs[j]) + 1;\n              }\n              costs[j - 1] = lastValue;\n              lastValue = newValue;\n            }\n          }\n        }\n        if (i > 0) {\n          costs[s2.length] = lastValue;\n        }\n      }\n      return costs[s2.length];\n    },\n\n    writeToStorage: function() {\n      var storyView = this.handles.storyEditor.generateSaveStory();\n      this.handles.fileConverter.story = storyView;\n\n      var tweeBlob = this.handles.fileConverter.twee();\n      sessionStorage.setItem(\"storyContent\", tweeBlob);\n      sessionStorage.setItem(\"storyLocation\", \"\");\n\n      //this.handles.storyEditor.removeVariableInject();\n\n      this.handles.storyEditor.generateStoryText(\n        this.renderHints.hidden,\n        this.renderHints.inVariableEditor,\n        this.renderHints.inMediaEditor\n      );\n      this.storyVariables = this.handles.storyEditor.variables;\n      this.imageVariables = this.handles.storyEditor.imageVariables;\n      this.audioVariables = this.handles.storyEditor.audioVariables;\n      this.storyPages = this.handles.storyEditor.exportedStoryPages;\n      this.storyName = this.handles.storyEditor.baseStory.name;\n    },\n\n    checkRenderHints: function() {\n      if (this.renderHints.renderKey > 10) {\n        this.renderHints.renderKey = 1;\n      }\n\n      if (this.renderHints.variableRenderKey > 10) {\n        this.renderHints.variableRenderKey = 1;\n      }\n\n      if (this.renderHints.themesRenderKey > 10) {\n        this.renderHints.themesRenderKey = 1;\n      }\n\n      if (this.renderHints.passageRenderKey > 10) {\n        this.renderHints.passageRenderKey = 1;\n      }\n\n      if (this.renderHints.gsoRenderKey > 10) {\n        this.renderHints.gsoRenderKey = 1;\n      }\n\n      if (this.renderHints.mediaRenderKey > 10) {\n        this.renderHints.mediaRenderKey = 1;\n      }\n    },\n\n    hideTools: function() {\n      if (this.toolButton == \"mdi-minus\") {\n        this.toolsWidth = \"10%\";\n        this.pageWidth = \"90%\";\n        this.hideItem = true;\n        this.toolButton = \"mdi-plus\";\n      } else {\n        this.toolsWidth = \"30%\";\n        this.pageWidth = \"70%\";\n        this.hideItem = false;\n        this.toolButton = \"mdi-minus\";\n      }\n    },\n\n    goFullScreen: function() {\n      /*\n            var storyPage = document.getElementById(\"storyPage\");\n            if (!document.fullscreen) {\n                storyPage.requestFullscreen();\n                this.fullButton = \"Exit\";\n            }\n            else {\n                document.exitFullscreen();\n                this.fullButton = \"Full Screen\";\n\n            }\n            */\n      if (!this.inFullMode) {\n        this.$emit(\"evtGoFull\");\n        this.inFullMode = true;\n        this.fullButton = \"mdi-fullscreen-exit\";\n        this.contentHeight = \"100vh\";\n      } else {\n        this.$emit(\"evtExitFull\");\n        this.inFullMode = false;\n        this.fullButton = \"mdi-fullscreen\";\n        this.contentHeight = \"74vh\";\n      }\n    },\n\n    setMinHeight: function(event) {\n      this.minHeight = event;\n    }\n  },\n\n  beforeDestroy: function() {\n    console.log(\"Destroyed\");\n    this.handles.storyEditor.destroy();\n  },\n\n  mixins: [storyMixin, tweeConverter]\n};\n</script>\n\n<style scoped>\n@keyframes border_anim {\n  from {\n    border: solid gray;\n  }\n  to {\n    border: solid black;\n  }\n}\n\n.header {\n  text-align: center;\n}\n\n.uploads {\n  text-align: left;\n}\n\n/*\n    .editor{\n        margin-left: 50px;\n        margin-right: 50px;\n    }\n    */\n\n#storyPage,\n#toolBar {\n  overflow: auto;\n}\n\n#page_layout {\n  padding-top: 58px;\n  overflow: auto;\n}\n\n.column {\n  text-align: center;\n  float: left;\n  padding: 5px;\n}\n\n#download_btn {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n}\n\n#downloadTButton {\n  grid-area: downloadT;\n  font-size: 20px;\n  width: 20%;\n}\n\n#downloadHButton {\n  grid-area: downloadH;\n  font-size: 20px;\n  width: 20%;\n}\n\n#viewHButton {\n  grid-area: viewH;\n  font-size: 20px;\n  width: 20%;\n}\n\n.layoutButton {\n  font-size: 50px;\n}\n\n.layoutButton:hover {\n  animation: border_anim;\n  animation-fill-mode: forwards;\n  animation-duration: 500ms;\n}\n</style>\n\n<style>\n* {\n  scrollbar-width: 20px;\n  scrollbar-color: lightgray transparent;\n}\n\n/* Works on Chrome/Edge/Safari */\n*::-webkit-scrollbar {\n  height: 5px;\n  width: 5px;\n}\n*::-webkit-scrollbar-track {\n  background: transparent;\n}\n*::-webkit-scrollbar-thumb {\n  background-color: lightgray;\n  border-radius: 20px;\n}\n\n*::-webkit-scrollbar-thumb:hover {\n  background-color: rgb(200, 200, 200);\n  border-radius: 20px;\n}\n</style>\n"]}]}