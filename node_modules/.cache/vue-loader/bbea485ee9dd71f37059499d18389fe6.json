{"remainingRequest":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/components/editor/tools/themes/Sidebar_Themes.vue?vue&type=style&index=0&id=34a3246c&scoped=true&lang=css&","dependencies":[{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/components/editor/tools/themes/Sidebar_Themes.vue","mtime":1604692362839},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKICAgICN0aGVtZXNfc2lkZWJhcnsKICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogICAgfQoKICAgICNoZWFkZXIgewogICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIH0KCiAgICAuY29sb3JfaW5wdXR7CiAgICAgICAgd2lkdGg6IDEwMCU7CiAgICB9CgogICAgYnV0dG9uewogICAgICAgIG91dGxpbmU6IG5vbmU7CiAgICB9CgogICAgI3RoZW1lc3sKICAgICAgICBwYWRkaW5nOiA1cHg7CiAgICAgICAgYm9yZGVyOiBzb2xpZCBsaWdodGdyYXk7CiAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4OwogICAgICAgIGJvcmRlci13aWR0aDogMnB4OwoKICAgIH0KCiAgICAjc2hvd19idXR0b25zewogICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdzsKICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDsKICAgIH0KCiAgICAjYWRkX25ld190aGVtZXsKICAgICAgICBwYWRkaW5nOiA1cHg7CiAgICAgICAgYm9yZGVyOiBzb2xpZCBsaWdodGdyYXk7CiAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4OwogICAgICAgIGJvcmRlci13aWR0aDogMXB4OwogICAgfQoKICAgICNuZXdfdGhlbWVfcHJvcHN7CiAgICAgICAgd2lkdGg6IDEwMCU7CgogICAgICAgIGRpc3BsYXk6IGdyaWQ7CiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogCiAgICAgICAgICAgICAgICAibGFiZWwxIGlucHV0MSIKICAgICAgICAgICAgICAgICJjYW5jZWwgc3VibWl0IjsKICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7CiAgICAgICAgcm93LWdhcDogMTVweDsKICAgICAgICBjb2x1bW4tZ2FwOiAxMHB4OwoKICAgICAgICBwYWRkaW5nOiAxMHB4OwogICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIH0KCiAgICAjdGhlbWVfbmFtZXsKICAgICAgICBncmlkLWFyZWE6IGxhYmVsMTsKICAgIH0KCiAgICAjbmV3X3RoZW1lX25hbWV7CiAgICAgICAgZ3JpZC1hcmVhOiBpbnB1dDE7CiAgICB9CgogICAgI2NvbmZpcm1fbmV3X3RoZW1lewogICAgICAgIGdyaWQtYXJlYTogc3VibWl0OwogICAgfQoKICAgICNjYW5jZWxfbmV3X3RoZW1lewogICAgICAgIGdyaWQtYXJlYTogY2FuY2VsOwogICAgfQoKICAgICNsaXN0ewogICAgICAgIGJvcmRlcjogc29saWQgbGlnaHRncmF5OwogICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDsKICAgICAgICBib3JkZXItd2lkdGg6IDFweDsKICAgICAgICAKICAgICAgICBwYWRkaW5nOiA1cHg7CiAgICB9CgogICAgLmlucHV0IHsKICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7CiAgICAgICAgYm9yZGVyLXdpZHRoOiAycHg7CiAgICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDsKICAgICAgICBib3JkZXItY29sb3I6IGxpZ2h0Z3JheTsKICAgICAgICB3aWR0aDogMTAwJTsKICAgIH0KCiAgICBAa2V5ZnJhbWVzIGJvcmRlcl9hbmltewogICAgICAgIGZyb217Ym9yZGVyOiBzb2xpZCB3aGl0ZTsgICAgICAgIAogICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAycHg7CiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7CiAgICAgICAgICAgICAgICBwYWRkaW5nOiA1cHg7fQoKICAgICAgICB0b3tib3JkZXI6c29saWQgZ3JheTsKICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAycHg7CiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDsKICAgICAgICAgICAgcGFkZGluZzogNXB4O30KICAgICAgICB9CgogICAgLnNpZGViYXJfYnV0dG9uewoJCWJvcmRlcjogc29saWQgd2hpdGU7CiAgICAgICAgYm9yZGVyLXdpZHRoOiAycHg7CgkJYm9yZGVyLXJhZGl1czogNXB4OwogICAgICAgIHBhZGRpbmc6IDVweDsKCX0KCgkuc2lkZWJhcl9idXR0b246aG92ZXJ7CgkJYW5pbWF0aW9uOiBib3JkZXJfYW5pbTsKCQlhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkczsKCQlhbmltYXRpb24tZHVyYXRpb246IDUwMG1zOwoJfQo="},{"version":3,"sources":["Sidebar_Themes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+JA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Sidebar_Themes.vue","sourceRoot":"src/components/editor/tools/themes","sourcesContent":["<template>\n    <div class = \"themes_sidebar\">\n        <h3 id = \"header\">Themes</h3><br>\n        \n        <div id = \"themes\">\n            <div id = \"show_buttons\">\n                <button id = \"show_themes\" class = \"sidebar_button\" v-on:click = \"toggleThemeDisplay\"><v-icon>{{this.displayThemes ? \"mdi-chevron-down\": \"mdi-chevron-right\"}}</v-icon>Show Themes</button>\n                <button id = \"new_theme\" class = \"sidebar_button\" v-on:click = \"showNew\"><v-icon>mdi-plus</v-icon> New Theme</button>\n            </div>\n            \n            <div id = \"add_new_theme\">    \n                <div v-if = \"this.newTheme\" id = \"new_theme_props\">\n                    <label id = \"theme_name\">Theme Name:</label>\n                    <input id = \"new_theme_name\" class = \"input\" v-model = \"newThemeName\" type = \"text\" placeholder = \" myTheme\"/>    \n\n                    <v-tooltip bottom>\n                        <template v-slot:activator=\"{ on, attrs }\">\n                            <button v-bind=\"attrs\" v-on=\"on\"\n                                id = \"cancel_new_theme\" class = \"sidebar_button\" \n                                v-on:click= \"showNew\">\n                                <v-icon>mdi-close</v-icon>\n                            </button>\n                        </template>\n                        <span>Cancel</span>\n                    </v-tooltip>\n\n                    <v-tooltip bottom>\n                        <template v-slot:activator=\"{ on, attrs }\">\n                            <button v-bind=\"attrs\" v-on=\"on\"\n                                id = \"confirm_new_theme\" class = \"sidebar_button\" \n                                v-on:click= \"addNewTheme\">\n                                <v-icon>mdi-check</v-icon>\n                            </button>\n                        </template>\n                        <span>Submit</span>\n                    </v-tooltip>\n                </div>\n            </div>\n\n            <div v-if = \"this.displayThemes\" id = \"list\" v-bind:key = \"this.listRenderKey\">\n                \n                <label v-if = \"this.themes.size == 0\">No Themes</label>\n\n                <list-element v-for = \"(theme, index) in this.themes.keys()\" v-bind:key = \"index\" v-bind:select = \"true\" v-bind:name = \"theme\" v-bind:showSelect = \"false\"\n                                                                                v-on:evtRemove = \"removeTheme\"\n                                                                                v-on:evtSelect = \"selectTheme\"\n                                                                                v-on:evtSelectAll = \"selectAllTheme\"></list-element>\n            </div>\n        </div>\n\n        <color-picker class=\"color_input\" purpose = \"Change Background Color\" :initColor = \"background\" v-on:evtColorChange = \"updateBackgroundColor\"/>        \n        <color-picker class=\"color_input\" purpose = \"Change Text Color\" :initColor = \"text\" v-on:evtColorChange = \"updateTextColor\"/>\n    </div>\n</template>\n\n<script>\nimport Color_Picker from \"./Color_Picker.vue\"\nimport List_Element from \"./List_Element.vue\"\n\nexport default {\n    name: \"themes-sidebar\",\n\n    components:{\n        'color-picker': Color_Picker,\n        'list-element': List_Element\n    },\n\n    props: {\n        backgroundColor: String,\n        textColor: String\n    },\n\n    data() {\n        return{\n            background: this.backgroundColor,\n            text: this.textColor,\n\n            themes: Map,\n            newThemeName: \"\",\n            newTheme: false,\n\n            showAlert: false,\n            displayThemes: false,\n            selectedTheme: \"Basic\",\n\n            listRenderKey: 0,\n        }\n    },\n    \n    methods: {\n        emitColor: function() {\n            // console.log(this.background);\n            this.$emit(\"evtNewTheme\", {bgColor: this.background, textColor: this.text});\n        },\n\n        updateBackgroundColor: function(event) {\n            this.background = event;\n            this.emitColor();\n        },\n\n        updateTextColor: function(event) {\n            this.text = event;\n            this.emitColor();\n        },\n\n        showNew: function() {\n            this.newTheme = !this.newTheme;\n        },\n        \n        addNewTheme: function() {\n            this.themes = this.themes.set(this.newThemeName, {bgColor: this.background, textColor: this.text});\n            this.newTheme = false;\n            this.listRenderKey++;\n            this.checkRenderHints();\n        },\n\n        selectTheme: function(event){\n            this.background = this.themes.get(event.name).bgColor;\n            this.text = this.themes.get(event.name).textColor;\n\n            this.selectedTheme = event.name;\n\n            this.emitColor();\n        },\n\n        selectAllTheme: function(event){\n            this.background = this.themes.get(event.name).bgColor;\n            this.text = this.themes.get(event.name).textColor;\n\n            this.selectedTheme = event.name;\n\n            this.$emit(\"evtNewThemeAll\", {bgColor: this.background, textColor: this.text});\n        },\n\n        removeTheme: function(event){\n            this.themes.delete(event);\n            this.listRenderKey++;\n            this.checkRenderHints();\n        },\n\n        toggleThemeDisplay: function() {\n            this.displayThemes = !this.displayThemes;\n        },\n\n        checkRenderHints: function() {\n            if(this.listRenderKey > 10){\n                this.listRenderKey = 1;\n            }\n        }\n    },\n\n    created: function() {\n        this.themes = new Map();\n        this.themes.set(\"Basic\", {bgColor: \"#FFFFFF\", textColor: \"#000000\"});\n    }\n}\n</script>\n\n<style scoped>\n    #themes_sidebar{\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n    }\n\n    #header {\n        text-align: center;\n    }\n\n    .color_input{\n        width: 100%;\n    }\n\n    button{\n        outline: none;\n    }\n\n    #themes{\n        padding: 5px;\n        border: solid lightgray;\n        border-radius: 5px;\n        border-width: 2px;\n\n    }\n\n    #show_buttons{\n        display: flex;\n        flex-direction: row;\n        justify-content: space-around;\n    }\n\n    #add_new_theme{\n        padding: 5px;\n        border: solid lightgray;\n        border-radius: 5px;\n        border-width: 1px;\n    }\n\n    #new_theme_props{\n        width: 100%;\n\n        display: grid;\n        grid-template-areas: \n                \"label1 input1\"\n                \"cancel submit\";\n        grid-template-columns: 1fr 1fr;\n        row-gap: 15px;\n        column-gap: 10px;\n\n        padding: 10px;\n        text-align: center;\n    }\n\n    #theme_name{\n        grid-area: label1;\n    }\n\n    #new_theme_name{\n        grid-area: input1;\n    }\n\n    #confirm_new_theme{\n        grid-area: submit;\n    }\n\n    #cancel_new_theme{\n        grid-area: cancel;\n    }\n\n    #list{\n        border: solid lightgray;\n        border-radius: 5px;\n        border-width: 1px;\n        \n        padding: 5px;\n    }\n\n    .input {\n        border-radius: 5px;\n        border-width: 2px;\n        border-style: solid;\n        border-color: lightgray;\n        width: 100%;\n    }\n\n    @keyframes border_anim{\n        from{border: solid white;        \n                border-width: 2px;\n                border-radius: 5px;\n                padding: 5px;}\n\n        to{border:solid gray;\n            border-width: 2px;\n            border-radius: 5px;\n            padding: 5px;}\n        }\n\n    .sidebar_button{\n\t\tborder: solid white;\n        border-width: 2px;\n\t\tborder-radius: 5px;\n        padding: 5px;\n\t}\n\n\t.sidebar_button:hover{\n\t\tanimation: border_anim;\n\t\tanimation-fill-mode: forwards;\n\t\tanimation-duration: 500ms;\n\t}\n</style>"]}]}