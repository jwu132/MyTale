{"remainingRequest":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/components/editor/Page_Layout.vue?vue&type=template&id=5268b748&scoped=true&","dependencies":[{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/components/editor/Page_Layout.vue","mtime":1604692362837},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICB7IGF0dHJzOiB7IGlkOiAicGFnZV9sYXlvdXQiIH0gfSwKICAgIFsKICAgICAgX2MoImRpdiIsIHsgYXR0cnM6IHsgaWQ6ICJoZWFkZXIiIH0gfSwgWwogICAgICAgICF0aGlzLmVkaXROYW1lCiAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IGN1cnNvcjogInBvaW50ZXIiIH0sCiAgICAgICAgICAgICAgICBvbjogeyBjbGljazogX3ZtLnNob3dFZGl0TmFtZSB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAhdGhpcy5lZGl0TmFtZQogICAgICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAgICAgImgyIiwKICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHRoaXMuc3RhcnRpbmcgPyAiY29sb3I6IGdyZWVuIiA6ICIiLAogICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBpZDogIm5hbWUiIH0KICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KF92bS5fcyh0aGlzLnBhc3NhZ2VOYW1lKSldCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICA6IF92bS5fZSgpCiAgICAgICAgICAgICAgXQogICAgICAgICAgICApCiAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgIHRoaXMuZWRpdE5hbWUKICAgICAgICAgID8gX2MoImlucHV0IiwgewogICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgICB2YWx1ZTogdGhpcy5wYXNzYWdlTmFtZSwKICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInRoaXMucGFzc2FnZU5hbWUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICBhdHRyczogeyBpZDogInBhc3NhZ2VOYW1lIiB9LAogICAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiB0aGlzLnBhc3NhZ2VOYW1lIH0sCiAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgIGJsdXI6IF92bS51cGRhdGVQYXNzYWdlTmFtZSwKICAgICAgICAgICAgICAgIGlucHV0OiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQodGhpcywgInBhc3NhZ2VOYW1lIiwgJGV2ZW50LnRhcmdldC52YWx1ZSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgIHRoaXMuZWRpdE5hbWUKICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAgICAgICAgICAgImJvcmRlci10b3AiOiAic29saWQgMnB4IGxpZ2h0Z3JheSIsCiAgICAgICAgICAgICAgICAgICJwYWRkaW5nLXRvcCI6ICI3cHgiCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJvcHRpb25zIiB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAhdGhpcy5kZWxldGUKICAgICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6ICJmbGV4IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAiZmxleC1kaXJlY3Rpb24iOiAicm93IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAianVzdGlmeS1jb250ZW50IjogInNwYWNlLWJldHdlZW4iCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAicGFzc2FnZU9wdGlvbnMiIH0KICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJzYW1lV2lkdGgiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJzdGFydFBhc3NhZ2UiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmVtaXRTdGFydFBhc3NhZ2UoKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5zaG93RWRpdE5hbWUoKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCJTZXQgQXMgU3RhcnQgUGFzc2FnZSIpXQogICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAidi1idG4iLAogICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAic2FtZVdpZHRoIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAiY2FuY2VsIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHsgY2xpY2s6IF92bS5zaG93RWRpdE5hbWUgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInYtaWNvbiIsIFtfdm0uX3YoIm1kaS1jbG9zZSIpXSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiBDYW5jZWwiKQogICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAidi1idG4iLAogICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAic2FtZVdpZHRoIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAic3VibWl0IiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHsgY2xpY2s6IF92bS51cGRhdGVQYXNzYWdlTmFtZSB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygidi1pY29uIiwgW192bS5fdigibWRpLWNoZWNrIildKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiIFN1Ym1pdCIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJzYW1lV2lkdGgiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJkZWxldGVQYXNzYWdlIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHsgY2xpY2s6IF92bS5zaG93RGVsZXRlIH0KICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJ2LWljb24iLCBbX3ZtLl92KCJtZGktZGVsZXRlIildKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiIERlbGV0ZSBQYXNzYWdlIikKICAgICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICB0aGlzLmRlbGV0ZSAmJiB0aGlzLmVkaXROYW1lCiAgICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiAiZmxleCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgImZsZXgtZGlyZWN0aW9uIjogInJvdyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgImp1c3RpZnktY29udGVudCI6ICJzcGFjZS1hcm91bmQiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAiZGVsZXRlT3B0aW9ucyIgfQogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInNhbWVXaWR0aCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBpZDogImNhbmNlbCIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0uc2hvd0RlbGV0ZSB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygidi1pY29uIiwgW192bS5fdigibWRpLWNsb3NlIildKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiIENhbmNlbCIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJzYW1lV2lkdGgiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJzdWJtaXQiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogeyBjbGljazogX3ZtLmVtaXREZWxldGUgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInYtaWNvbiIsIFtfdm0uX3YoIm1kaS1jaGVjayIpXSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiBEZWxldGUiKQogICAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICAgIF0KICAgICAgICAgICAgKQogICAgICAgICAgOiBfdm0uX2UoKQogICAgICBdKSwKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgeyBhdHRyczogeyBpZDogInN0b3J5X2ZpZWxkIiB9IH0sCiAgICAgICAgWwogICAgICAgICAgdGhpcy5oYXNBdWRpb0ZpbGVzCiAgICAgICAgICAgID8gX2MoImF1ZGlvLWxpc3QiLCB7CiAgICAgICAgICAgICAgICBhdHRyczogeyBhdWRpb0xpc3Q6IHRoaXMuYXVkaW9GaWxlcyB9LAogICAgICAgICAgICAgICAgb246IHsgcmVtb3ZlTWVkaWFGcm9tUGFnZTogX3ZtLnJlbW92ZUF1ZGlvRnJvbVBhZ2UgfQogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICBfYygidGV4dC1lZGl0b3IiLCB7CiAgICAgICAgICAgIGtleTogX3ZtLnJlbmRlcktleSwKICAgICAgICAgICAgc3R5bGU6IHRoaXMudGhlbWVWaWV3ID8gdGhpcy5wYWdlVGhlbWUgOiAiIiwKICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICBkaXNwVGV4dDogdGhpcy5kaXNwUGFzc2FnZS50ZXh0LAogICAgICAgICAgICAgIGxpbmtUZXh0OiB0aGlzLmxpbmtQYXNzYWdlLnRleHQsCiAgICAgICAgICAgICAgaWQ6ICJ0ZXh0X2ZpZWxkIiwKICAgICAgICAgICAgICB0aGVtZTogdGhpcy5wYWdlVGhlbWUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgb246IHsgZXZ0UGFzc2FnZUNoYW5nZTogX3ZtLmVtaXROZXdQYXNzYWdlIH0KICAgICAgICAgIH0pLAogICAgICAgICAgdGhpcy5oYXNJbWFnZXMKICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgeyBhdHRyczogeyBpZDogImltYWdlX2ZpZWxkIiB9IH0sCiAgICAgICAgICAgICAgICBfdm0uX2wodGhpcy5pbWFnZUZpbGVzLCBmdW5jdGlvbihpbWFnZURhdGEsIGkpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jKCJpbWFnZS1saXN0IiwgewogICAgICAgICAgICAgICAgICAgIGtleTogaSwKICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyBmbG9hdDogImxlZnQiIH0sCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaW1hZ2VEYXRhOiBpbWFnZURhdGEgfSwKICAgICAgICAgICAgICAgICAgICBvbjogeyByZW1vdmVNZWRpYUZyb21QYWdlOiBfdm0ucmVtb3ZlSW1hZ2VGcm9tUGFnZSB9CiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIDogX3ZtLl9lKCkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgInYtdG9vbHRpcCIsCiAgICAgICAgewogICAgICAgICAgYXR0cnM6IHsgYm90dG9tOiAiIiB9LAogICAgICAgICAgc2NvcGVkU2xvdHM6IF92bS5fdShbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBrZXk6ICJhY3RpdmF0b3IiLAogICAgICAgICAgICAgIGZuOiBmdW5jdGlvbihyZWYpIHsKICAgICAgICAgICAgICAgIHZhciBvbiA9IHJlZi5vbgogICAgICAgICAgICAgICAgdmFyIGF0dHJzID0gcmVmLmF0dHJzCiAgICAgICAgICAgICAgICByZXR1cm4gWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiYnV0dG9uIiwKICAgICAgICAgICAgICAgICAgICBfdm0uX2coCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX2IoCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImxheW91dGJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJwcmV2QnV0dG9uIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0ucHJldlBhZ2UgfQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAiYnV0dG9uIiwKICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnMsCiAgICAgICAgICAgICAgICAgICAgICAgIGZhbHNlCiAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgb24KICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgIFtfYygidi1pY29uIiwgW192bS5fdigibWRpLWFycm93LWxlZnQiKV0pXSwKICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIF0pCiAgICAgICAgfSwKICAgICAgICBbX2MoInNwYW4iLCBbX3ZtLl92KCJCYWNrIHRvIFByZXZpb3VzIFBhZ2UiKV0pXQogICAgICApLAogICAgICBfYygKICAgICAgICAiZGl2IiwKICAgICAgICB7IGF0dHJzOiB7IGlkOiAibGlua0J1dHRvbnMiIH0gfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IG1hcmdpbjogIjEwcHgiIH0sCiAgICAgICAgICAgICAgYXR0cnM6IHsgZGlzYWJsZWQ6IHRoaXMuYXRTdGFydCB9LAogICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0uZW1pdFN0YXJ0aW5nUGFnZSB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFtfYygidi1pY29uIiwgW192bS5fdigibWRpLWhvbWUiKV0pLCBfdm0uX3YoIkdvIFRvIFN0YXJ0IildLAogICAgICAgICAgICAxCiAgICAgICAgICApLAogICAgICAgICAgX3ZtLl9sKF92bS5wYWdlLmxpbmtzLCBmdW5jdGlvbihsaW5rRGF0YSwgaSkgewogICAgICAgICAgICByZXR1cm4gX2MoCiAgICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBrZXk6IGksCiAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyBtYXJnaW46ICIxMHB4IiB9LAogICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uZW1pdFBhZ2UobGlua0RhdGEpCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MobGlua0RhdGEubmFtZSkpLAogICAgICAgICAgICAgICAgX2MoInYtaWNvbiIsIFtfdm0uX3YoIm1kaS1hcnJvdy1yaWdodCIpXSkKICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIDEKICAgICAgICAgICAgKQogICAgICAgICAgfSkKICAgICAgICBdLAogICAgICAgIDIKICAgICAgKQogICAgXSwKICAgIDEKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}