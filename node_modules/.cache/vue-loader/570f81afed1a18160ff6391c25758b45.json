{"remainingRequest":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/components/users/userProfile.vue?vue&type=style&index=0&id=aeaaf312&scoped=true&lang=css&","dependencies":[{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/components/users/userProfile.vue","mtime":1604692362841},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jb250YWluZXIgewogIHdpZHRoOiA4MCU7CiB9Ci5zdG9yeUVudHJ5IHsKICBtaW4taGVpZ2h0OiA0MHB4OwogfQouc3RvcnlFbnRyeSAuZHJhZnQtYWN0aW9uc3sKICB2aXNpYmlsaXR5OiBoaWRkZW47Cn0KLnN0b3J5RW50cnk6aG92ZXIgLmRyYWZ0LWFjdGlvbnN7CiAgdmlzaWJpbGl0eTogdmlzaWJsZTsKfQouc3RvcnlMaW5rcyB7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwogIGNvbG9yOiBibGFjazsKIH0KLnN0b3J5TGlua3M6aG92ZXIgewogIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwogIGNvbG9yOiAjRkI4QzAwOwogfQouY29tbWVudCAuY29tbWVudC1hY3Rpb25zewogIHZpc2liaWxpdHk6IGhpZGRlbjsKfQouY29tbWVudDpob3ZlciAuY29tbWVudC1hY3Rpb25zewogIHZpc2liaWxpdHk6IHZpc2libGU7Cn0K"},{"version":3,"sources":["userProfile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"userProfile.vue","sourceRoot":"src/components/users","sourcesContent":["<template>\n  <v-app class=\"blue-grey lighten-5\">\n    <div v-if=\"isVerified\" class = 'user-profile'>\n      <div class=\"py-3\"></div>\n      <v-card flat class=\"container\">\n        <v-card-title>\n          Welcome back, {{this.userName}}\n          <v-spacer></v-spacer>\n          <v-btn small outlined v-on:click=\"logout\">Logout</v-btn>\n        </v-card-title>\n      </v-card>\n\n      <br>\n      <v-card flat class=\"container\">\n        <v-card-title class=\"pb-0\">My Stories</v-card-title>\n        <v-list two-line>\n          <v-row>\n          <v-col v-for='story of myStories' v-bind:key=\"story['.key']\" cols=\"12\" md=\"6\">\n            <v-list-item class=\"storyEntry\">\n              <v-list-item-content class=\"pa-0\">\n                <router-link :to=\"{name: 'Story', params: {title:removeTitleSpaces(story.title), id: story.id}}\" class=\"storyLinks\">\n                  <v-list-item-title>{{story.title}}</v-list-item-title>\n                </router-link>\n                <v-list-item-subtitle>Created on {{story.dateAdded}} Views: {{story.views}}</v-list-item-subtitle>\n              </v-list-item-content>\n            </v-list-item>\n          </v-col>\n        </v-row>\n        </v-list>\n      </v-card>\n\n      <br>\n      <v-card flat class=\"container\">\n        <v-card-title class=\"pb-0\">Story Drafts</v-card-title>\n        <v-list two-line v-for='story of myStoryDrafts' v-bind:key=\"story['.key']\">\n          <v-list-item class=\"storyEntry\" v-for='title of Object.keys(story)' v-bind:key=\"title['.key']\">\n            <v-list-item-content class=\"pa-0\">\n              <v-list-item-title>\n                <strong>{{title}}</strong>\n              </v-list-item-title>\n              <v-list-item-subtitle>Updated on {{story[title].dateUpdated}}</v-list-item-subtitle>\n            </v-list-item-content>\n\n            <v-list-item-action class = \"draft-actions\">\n              <v-btn title = \"Edit Draft\" icon v-on:click=\"goToEditor(story[title].text, story[title].OGstory)\">\n                <v-icon>mdi-pencil</v-icon>\n                </v-btn>\n            </v-list-item-action>\n            <v-list-item-action class = \"draft-actions\">\n              <v-btn title = \"Delete Draft\" icon v-on:click=\"removeStoryDrafts(title)\">\n                <v-icon>mdi-delete</v-icon>\n              </v-btn>\n            </v-list-item-action>\n\n          </v-list-item>\n        </v-list>\n      </v-card>\n\n      <br>\n      <v-card flat class=\"container\">\n        <v-card-title class=\"pb-0\">My Comments</v-card-title>\n        <v-list two-line>\n          <v-list-item class= \"comment\" v-for='comment of myComments' v-bind:key=\"comment['.key']\">\n            <v-list-item-content v-if=\"!currentlyEditing || comment.commentKey !== editCommentKey\">\n              <v-list-item-title class=\"text-wrap\">{{comment.comment}}</v-list-item-title>\n              <v-list-item-subtitle>\n                {{comment.storyTitle}} {{comment.dateAdded}}\n              </v-list-item-subtitle>\n            </v-list-item-content>\n\n            <v-list-item-action class = \"comment-actions\" v-if=\"!currentlyEditing || comment.commentKey !== editCommentKey\">\n              <v-btn title = \"Edit Comment\" icon v-on:click=\"confirmEdit(comment.commentKey, comment.comment)\">\n                <v-icon>mdi-pencil</v-icon>\n              </v-btn>\n            </v-list-item-action>\n            <v-list-item-action class = \"comment-actions\" v-if=\"!currentlyEditing || comment.commentKey !== editCommentKey\">\n              <v-btn title = \"Remove Comment\" icon v-on:click=\"removeComment(comment.commentKey, userID)\">\n                <v-icon>mdi-delete</v-icon>\n              </v-btn>\n            </v-list-item-action>\n\n            <v-list-item-content v-if=\"comment.commentKey === editCommentKey\">\n              <form class = \"edit-comment\">\n                <v-text-field v-model=\"commentEdit\" width=\"100%\"></v-text-field>\n                <v-btn class=\"mb-2\" outlined small v-on:click=\"editComment(comment.commentKey, userID, commentEdit)\">Submit</v-btn>\n              </form>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-card>\n\n      <br>\n      <userVariables :key=\"reloadKey\" v-on:evtSaveVar=\"saveNewVar\" v-on:evtSubmit=\"submitForm\" \n        v-on:evtDelVar=\"deleteVar\" />\n      \n      <div class=\"py-10\"></div>\n    </div>\n\n    <div v-if=\"!isVerified\" class = 'not-logged-in'>\n      <p>Please log in or verify your account</p>\n    </div>\n    \n  </v-app>\n</template>\n\n<script>\n  import userVariables from '@/components/users/userVariables.vue'\n  import firebase from 'firebase'\n  import firebaseMixin from '@/mixins/firebaseMixin'\n  import storyMixin from '@/mixins/storyMixin'\n\n  export default {\n    data() {\n      return {\n        userID: firebase.auth().currentUser.uid,\n        userEmail: firebase.auth().currentUser.email,\n        userName: firebase.auth().currentUser.displayName,\n        myComments: [],\n        myStories: [],\n        myStoryDrafts: [],\n        hasStories: false,\n        isVerified: false,\n        reloadKey: 0,\n        editCommentKey: '',\n        commentEdit: '',\n        currentlyEditing: false,\n      };\n    },\n    components: {\n      userVariables\n    },\n    methods: {\n      logout(){\n        firebase.auth().signOut().then(() => {\n          location.replace(\"account.html\")\n        })\n      },\n      submitForm(event){\n        var userProfile = {};\n        var i;\n        for (i=0; i<event.profile.length; i++) {\n          userProfile[event.varNames[i]] = event.profile[i];\n        }\n        var updates = {};\n        updates['/accounts/' + firebase.auth().currentUser.uid + '/profile'] = userProfile;\n        firebase.database().ref().update(updates);\n        document.getElementById(\"formMsg\").innerHTML = \"Your story variables have been successfully updated.\";\n      },\n      saveNewVar(event){\n        // this.openNew = false;\n        var userProfile = {};\n        var i;\n        for (i=0; i<event.profile.length; i++) {\n          userProfile[event.varNames[i]] = event.profile[i];\n        }\n        userProfile[event.varName] = event.varVal;\n        var updates = {};\n        updates['/accounts/' + firebase.auth().currentUser.uid + '/profile'] = userProfile;\n        firebase.database().ref().update(updates);\n        this.reloadKey += 1;\n      },\n      deleteVar(event){\n        if(confirm(\"Are you sure you want to delete this variable?\")){\n          var userProfile = {};\n          var i;\n          for (i=0; i<event.profile.length; i++) {\n            userProfile[event.varNames[i]] = event.profile[i];\n          }\n          userProfile[event.varName] = null;\n          var updates = {};\n          updates['/accounts/' + firebase.auth().currentUser.uid + '/profile'] = userProfile;\n          firebase.database().ref().update(updates);\n          this.reloadKey += 1;\n        }\n      },\n      getStoryDrafts(){\n        var arr = []\n        var storageRef = firebase.storage().ref(this.userEmail)\n        storageRef.listAll().then(function(data){\n          data.prefixes.forEach(function(folderRef){\n            var draftObj = { 'name' : '', 'date': ''}\n            draftObj.name = folderRef.name\n            folderRef.listAll().then(function(child){\n              child.items.forEach(function(tweeRef){\n                tweeRef.getMetadata().then(function(metadata){\n                  var updateDate = metadata.updated.substring(0,10);\n                  updateDate = updateDate.substring(5,7) + '/' + updateDate.substring(8,10) + '/' + updateDate.substring(0,4);\n                  draftObj.date = updateDate;\n                  arr.push(draftObj)\n                })\n              })\n            })\n          })\n        })\n        return arr\n      },\n      goToEditor(storyTweeText, OGstoryText){\n        sessionStorage.setItem(\"createTemplate\", \"\");\n        sessionStorage.setItem(\"OGstoryPassages\", OGstoryText);\n        sessionStorage.setItem(\"storyLocation\", \"\");\n        sessionStorage.setItem(\"storyContent\", storyTweeText);\n\n        const link = document.createElement('a');\n        link.href = \"editor.html\";\n        link.click();\n        URL.revokeObjectURL(link.href);\n      },\n      confirmEdit(commentKey, comment){\n        this.editCommentKey = commentKey;\n        this.commentEdit = comment;\n        this.currentlyEditing = true;\n      }\n    },\n    created() {\n      if(firebase.auth().currentUser){\n        this.isVerified = firebase.auth().currentUser.emailVerified\n      }\n      this.myStories = this.retrieveUserStories(this.userEmail);\n      this.myStoryDrafts = this.getStoriesWithDrafts(this.userID);\n      this.myComments = this.getUserComments(this.userID);\n      if(this.userName == null) {\n        this.userName = firebase.auth().currentUser.email;\n      }\n    },\n    mixins: [firebaseMixin, storyMixin]\n  }\n</script>\n\n<style scoped>\n.container {\n  width: 80%;\n }\n.storyEntry {\n  min-height: 40px;\n }\n.storyEntry .draft-actions{\n  visibility: hidden;\n}\n.storyEntry:hover .draft-actions{\n  visibility: visible;\n}\n.storyLinks {\n  font-weight: bold;\n  text-decoration: none;\n  color: black;\n }\n.storyLinks:hover {\n  text-decoration: underline;\n  color: #FB8C00;\n }\n.comment .comment-actions{\n  visibility: hidden;\n}\n.comment:hover .comment-actions{\n  visibility: visible;\n}\n</style>"]}]}