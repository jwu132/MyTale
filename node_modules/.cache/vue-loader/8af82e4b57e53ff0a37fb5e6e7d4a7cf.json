{"remainingRequest":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/components/comments/addComments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/src/components/comments/addComments.vue","mtime":1604692362836},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/justinwu/Desktop/Gitlab_MyTale/mytale/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgc3RvcnlNaXhpbiBmcm9tICJAL21peGlucy9zdG9yeU1peGluIgppbXBvcnQgZmlyZWJhc2UgZnJvbSAnZmlyZWJhc2UnCmltcG9ydCBmaXJlYmFzZU1peGluIGZyb20gIkAvbWl4aW5zL2ZpcmViYXNlTWl4aW4iCmltcG9ydCB7IGRiIH0gZnJvbSAiQC9maXJlYmFzZUNvbmZpZyIKCnZhciBkID0gbmV3IERhdGUoKTsKCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogWydnaXZlblN0b3J5VGl0bGUnXSwKICBkYXRhICgpewogICAgcmV0dXJuewogICAgICBuZXdDb21tZW50OiB7CiAgICAgICAgInN0b3J5VGl0bGUiOiAnJywKICAgICAgICAibmFtZSI6ICcnLAogICAgICAgICJlbWFpbCI6ICcnLAogICAgICAgICJjb21tZW50IjogJycsCiAgICAgICAgImRhdGVOb3ciOiBEYXRlLm5vdygpLAogICAgICAgICJkYXRlQWRkZWQiOiBkLmdldE1vbnRoKCkrMSsnLycrZC5nZXREYXRlKCkrJy8nK2QuZ2V0RnVsbFllYXIoKSwgCiAgICAgICAgImhlbHBmdWxUYWdzIjogW10sCiAgICAgICAgImNvbW1lbnRLZXkiOicnLAogICAgICB9LAogICAgICBpc1N1Ym1pdHRlZDogZmFsc2UsCiAgICAgIG5hbWVBcnJheTpbXSwKICAgICAgY29tbWVudENoZWNrZXI6IGZhbHNlLAogICAgICB0YWdzSW5TdG9yeTogW10sCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgY29tbWVudENvbXBsZXRlICgpIHsKICAgICAgcmV0dXJuIHRoaXMubmV3Q29tbWVudC5jb21tZW50ICYmIHRoaXMubmV3Q29tbWVudC5zdG9yeVRpdGxlCiAgICB9LAogICAgdGFnc0NvbXBsZXRlKCl7CiAgICAgIGlmKHRoaXMubmV3Q29tbWVudC5oZWxwZnVsVGFncy5sZW5ndGggPiAwKXsKICAgICAgICByZXR1cm4gdHJ1ZQogICAgICB9CiAgICAgIHJldHVybiBmYWxzZQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0VGFncygpewogICAgICB0aGlzLnRhZ3NJblN0b3J5ID0gdGhpcy5yZXRyaWV2ZVN0b3J5VGFncyh0aGlzLm5ld0NvbW1lbnQuc3RvcnlUaXRsZSkKICAgICAgdGhpcy5jb21tZW50Q2hlY2tlciA9IHRydWU7CiAgICB9LAogICAgcG9zdCgpewogICAgICB2YXIgbmV3S2V5ID0gZGIucmVmKCkucHVzaCgpLmtleTsKICAgICAgdGhpcy5uZXdDb21tZW50LmNvbW1lbnRLZXkgPSBuZXdLZXkKICAgICAgZGIucmVmKCdhY2NvdW50cy8nK2ZpcmViYXNlLmF1dGgoKS5jdXJyZW50VXNlci51aWQgKyAnL2NvbW1lbnRzLycgKyBuZXdLZXkpLnVwZGF0ZSh0aGlzLm5ld0NvbW1lbnQpOwogICAgICBkYi5yZWYoJ2NvbW1lbnRzLycgKyBuZXdLZXkpLnVwZGF0ZSh0aGlzLm5ld0NvbW1lbnQpCiAgICAgIHRoaXMuaXNTdWJtaXR0ZWQgPSB0cnVlOwogICAgfSwKICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLm5ld0NvbW1lbnQuc3RvcnlUaXRsZSA9IHRoaXMuZ2l2ZW5TdG9yeVRpdGxlOwogICAgaWYoZmlyZWJhc2UuYXV0aCgpLmN1cnJlbnRVc2VyKXsKICAgICAgdGhpcy5uZXdDb21tZW50Lm5hbWUgPSBmaXJlYmFzZS5hdXRoKCkuY3VycmVudFVzZXIuZGlzcGxheU5hbWUKICAgICAgdGhpcy5uZXdDb21tZW50LmVtYWlsID0gZmlyZWJhc2UuYXV0aCgpLmN1cnJlbnRVc2VyLmVtYWlsCiAgICB9CiAgfSwKICBtaXhpbnM6IFtzdG9yeU1peGluLCBmaXJlYmFzZU1peGluXSwKfQo="},{"version":3,"sources":["addComments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"addComments.vue","sourceRoot":"src/components/comments","sourcesContent":["<template>\n  <div>\n    <form>\n      <v-text-field\n        v-model=\"newComment.comment\"\n        v-if=\"!commentChecker\"\n        :disabled=\"isSubmitted\"\n        label=\"Add a comment...\"\n        required\n      />\n      <button class=\"button\" :disabled=\"!commentComplete\" v-if=\"!commentChecker\" v-on:click=\"getTags()\">Next</button>\n    </form>\n    <div id=\"second-form\">\n      <form>\n      <v-select\n        v-model=\"newComment.helpfulTags\"\n        v-if=\"commentChecker\"\n        :items=\"tagsInStory\"\n        :disabled=\"isSubmitted\"\n        :multiple=\"true\"\n        label=\"Tags that you found were well-represented in this story\"\n        required\n      />\n      <button class=\"button\" :disabled=\"!tagsComplete\" v-if=\"commentChecker && !isSubmitted\" v-on:click=\"post()\">Comment</button>\n      <p v-if=\"isSubmitted\">Thank you for commenting!</p>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport storyMixin from \"@/mixins/storyMixin\"\nimport firebase from 'firebase'\nimport firebaseMixin from \"@/mixins/firebaseMixin\"\nimport { db } from \"@/firebaseConfig\"\n\nvar d = new Date();\n\nexport default {\n  props: ['givenStoryTitle'],\n  data (){\n    return{\n      newComment: {\n        \"storyTitle\": '',\n        \"name\": '',\n        \"email\": '',\n        \"comment\": '',\n        \"dateNow\": Date.now(),\n        \"dateAdded\": d.getMonth()+1+'/'+d.getDate()+'/'+d.getFullYear(), \n        \"helpfulTags\": [],\n        \"commentKey\":'',\n      },\n      isSubmitted: false,\n      nameArray:[],\n      commentChecker: false,\n      tagsInStory: [],\n    }\n  },\n  computed: {\n    commentComplete () {\n      return this.newComment.comment && this.newComment.storyTitle\n    },\n    tagsComplete(){\n      if(this.newComment.helpfulTags.length > 0){\n        return true\n      }\n      return false\n    }\n  },\n  methods: {\n    getTags(){\n      this.tagsInStory = this.retrieveStoryTags(this.newComment.storyTitle)\n      this.commentChecker = true;\n    },\n    post(){\n      var newKey = db.ref().push().key;\n      this.newComment.commentKey = newKey\n      db.ref('accounts/'+firebase.auth().currentUser.uid + '/comments/' + newKey).update(this.newComment);\n      db.ref('comments/' + newKey).update(this.newComment)\n      this.isSubmitted = true;\n    },\n  },\n  created() {\n    this.newComment.storyTitle = this.givenStoryTitle;\n    if(firebase.auth().currentUser){\n      this.newComment.name = firebase.auth().currentUser.displayName\n      this.newComment.email = firebase.auth().currentUser.email\n    }\n  },\n  mixins: [storyMixin, firebaseMixin],\n}\n</script>\n\n<style scoped>\n</style>\n"]}]}